(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1102107,      21528]
NotebookOptionsPosition[   1082298,      21208]
NotebookOutlinePosition[   1082738,      21227]
CellTagsIndexPosition[   1082695,      21224]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "\nLabel Predictions \n",
 StyleBox["Sezin Yaman\nApril, May 2018\n", "Subsubtitle"]
}], "Title",
 CellChangeTimes->{
  3.733651882624189*^9, {3.7343289736628637`*^9, 3.734328982990979*^9}, {
   3.734329678401836*^9, 3.734329703130227*^9}, {3.734340369548452*^9, 
   3.7343403719705143`*^9}, {3.734343794827364*^9, 3.734343797217331*^9}, {
   3.734344236368122*^9, 3.7343442386258*^9}, {3.760155439974875*^9, 
   3.7601554453479843`*^9}},ExpressionUUID->"b5ba41e5-172c-4453-b4fb-\
d17222f76512"],

Cell[TextData[{
 "I specifically used a package called MonadicContextualClassification, that \
provides functions for classification with classifiers with contexts and the \
documentation can be found ",
 ButtonBox["here. ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/MonadicContextualClassification.m"], None},
  ButtonNote->
   "https://github.com/antononcube/MathematicaForPrediction/blob/master/\
MonadicProgramming/MonadicContextualClassification.m"],
 "The package is also discussed in",
 ButtonBox[" this community forum",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://community.wolfram.com/groups/-/m/t/1126923"], None},
  ButtonNote->"http://community.wolfram.com/groups/-/m/t/1126923"],
 ". The figure below outlines the classification process in the pipeline.\n\n \
          ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
sSx1fA+7j2eXc25TH979nrOEhGSJu50oCYnJ0tTUKuPjk/YZia0XELj3dQcA
AAAAWD3I7wEAAAAAjyxyc773eXxSU1UjOdk5kpWZLYUFhVJcVOwokdLiUiku
LpOi1aSoVAoXKCpann0v3K/tOybHGH0sUce32LEvYR/PKj3OkpLyh1Ks7nPO
7ySlypkzF2TP3gOW9be3dcq0b1oC04G5z0oiXncAAAAAgNWD/B4AAAAA8Fj0
IiAyNTEl7W3tkpOVI3k5edY3v7O9U7q7eqRHdas+6e7pXzW6nONZqHuZjnFZ
9h2+zzyPP47FLDq+JezjWfa4z3lHZ4/V22dl5cqlS9fk8OFjEheXINXVtTIx
NmFrU4RfczF/3QMAAAAAngjyewAAAADA4/L7/NLX02e5fUZ6hlSWV8rw0LC4
Jl3icXnE4/aI27l0u33i9vjxlLic870Qz8ET4o5+vhcTbR9j41PSerdDcvMK
JT4hSW7dSrAe+trnobuzW7web/A1p1vg6b7GAQAAAABPB/k9AAAAAOBxzEzP
WEbf3Ngsly9dkeLCYunuCmaN2vNb/90Z5vfPOGR1mHb+TR2FXr8y9j0jPp8K
zLfE5yDaOBaz6PiWsI9nlR7jPef6fqI8D6Njk1JVXScZmTmSk1sgzS1tkl9Q
LHl5BVJTXSOTE5P2erPXHvk9AAAAAKxK5PcAAAAAgMcRcP5d2d83IBXlFRIf
F2998/XfmX6v3/p9P2p+r/mmbzaDXoH897Fi9r1YfrwM41jK+B5lP8+iJeT3
lvc79/E6X2v+PzHhlqbmu3L9Rpzcvn1HSkorLM9vaGyRQs3wc/JsDQqdK2Ov
vfC2At4DgFUhvAUkOE8mIPduMwu+XoT+XZzdh3Ohn3HOPIU5N7OPEW2M0Y5h
4bEt5TwttpvwHCMRPtsFAAB4ROT3AAAAAIBHpVmBz+uXlibNGAslLzdfent6
xe1yW0/9x87vl1LPDDxDwv0RLL93XkeDQ6NSVlYlZ85ekJTUDMvy9Wd9fUNS
UVEl6WkZUlNVY+tSxPp1D6xK4c35OjA9E/xcUhb8TObfLqpAML8P7iN43Uz4
6/vdbxnMfpa6cIyBBdct5XgWO0+L7IP8HgAA4PGR3wMAAAAAHpVmFNrTW2vv
NbvXHH9ibMKye7/1zie/B6IL1uz7Q733u7r7pKCgWK5cvSEVlTUyPDxmP5+c
8khL813JzMiUzPRMaW/rsHwsEM7IACyf0KZZu30uGbj3Z3M3WkQgeH9ZaCbi
fg+zn6WKfJwFgvX/M3PH9LDHcp9zFHUfix03AAAAloT8HgAAAADwqLSX913n
35L5eQW27v1g/6C4p9yhde/J74HFhHN7zfHHx11SW9comZk5kpGRLR2dPeJy
+8TrDZi+3gEpKy2TO4lJUl1VIxPjEzZ3Jtavf2A1Cve6D86TCYRq56Nk3/fZ
h95vdn96/5DHzs6jjlfmxhaQeVm9zvOxv71ev/i8PptbF+wNEFi8Vv9RRcvu
ye8BAAAeCfk9AAAAAOBRaa19UWGR1d5rb+/x0XHxuL2h/D5wD/J7ICTUP3/K
5ZWOjh7JLyiW1LRMqaqqk6HhMeud7/VO22tmzHmdtTS3WA/9kqIS6erssjyO
bAxYZqHXlObcvT19UltTKyNDI+Lz+OZycr2dPHg/mpHrZ65VldXS09UjUxNT
cz30I7dlHL+OT+f36PtF8p1kSUtNk+ysbMnPy5fcnFzJyc6VXEe+8ze7trrW
1rvxOn+zZ5bazyNKTq/r5ujx6n8H2D75XBcAAOCRkd8DAAAAAJYs4Px70heQ
/r4BywiKCoul7W675RNej++++b1vKZaUic48QSsg78Wq4Q1xu/2W1ZeUVkhi
Yookp6RLV1evTE56RH/vtPZe57K43V4Z6B+U0pIyKcgvlJrqWnFNued66EvE
a1Oe0GseWAmcvz2apY8MjziviQEZGxmbV+s+T3h7yH3P9ryXYG8Z7Xlx4fwF
aWpstr9tS9qviK0hozn6z6d+kcKCQufvZf/97/8Q+5y9jUS/Xo+hs6NT4m7d
lnXvrpPNX22WfXv3y6kTp+T40eNy+NBh2b9vv+zeuVtOHD8hiQmJ9pnw7PEt
HMPCx4k8VxFfa6+d7q4eqayolPq6BhkeGg4+L9GONXKL9e8TAADACkV+DwAA
AABYihnt+e2dluHBUamvbZT4uESprKiWwf5hu96vmaPy3euJ5qJW2/9kkOFj
2Tm/VxMTbmlt7bA178+evWj5/fiESzzO60hv47XbBueyuFxe57btUlRcJoVF
pdLXP2Q99vWjE9vCr1FZ8D2wivi8fulo65Dr167LsaPHJTE+USbGJ+etJzGb
54c35+tgL/mHXHPC2Txuj+Tm5Fn2rTn+6PDovbd7QH94ze/rauvkp+0/2Ty3
jvbOeWOa3UfkWCXKviLmFcz+PHxc4b78EfvQxzxy+Ij80z/+0+xja98OnUOQ
nZktt2/dlt27dsvbb70tb7z2hpw7e94+E7b5QCL3jmtmkccMXxWq+dc6/2NH
j8m1K9ekuanF5vEtdn6jHe+8YwEAAFjjyO8BAAAAAEuh+b3X7Xf+7dYu+bmF
kpmeLS1Nd2V8dNJye59nWnzhDH+BJ52HPmxv/qUhv8cT4PxeDQ+PS01NveX3
CQnJUllVKy6XL5Tbz9HfQa3F18y+orJG8vKKpLGx1bL+2S38Gl34PbCK6Pos
jQ1NVjv+7bZvrT5+cnzSPt8M3yYQuc6886WtYx9a891uE14jPrS+fXAteJlb
E16Cn5d2dXRZ7t3X02d5vm0R9w2vLx/8WubWoA+Pw9mH9s3Q3vV3W5y/kWMT
s/sI32ZuDDPz9iszMrfNzL+PjXM6vLb99Oz34Zr4muoaOXbkmPzp+T/JmdNn
paGuQYYGh20s2i+/rbVNigqK5NTJU/L5ps/l/fXvy41rN2xdjtnH0yGEzsns
2AJzY7T5EoG549TPcRPiE+T7b7+X48dOWI8QXYNg9nzbWIP7sn2Gvp43/+EB
8yEAAADWEvJ7AAAAAMBSaH4/NeGWyvJqSU1Ot8u+ngFxT3nn8nvPNPk9sAjN
57XGvrun3+rp4xOSrId+b9+guD3+e/L78HoS4+MuaWhskfyCYikuKZfBwVF7
Wd6zrYD3CeBJ0J75WZnZ8s3Wb2T9u+tl187d0ljfKMNDI5ax67rr2qde6+Un
xiakv7ff1nbR9efdU27ri6/r2Xe0d0hrc6u0OFpbgrq7uu3zyHCmr5+Xtre1
2340i9Z9a4/4wf5BGR4clj5n3+1tHZbN6+eqd1vb7Gc6jnC9v9al68+1n7xe
rzXpOj6l49Db6zwBvU1raCw93T0yORHqKRDaNP92Tbrs+LW2Xfvyh/V29zr3
6ZXuzuD4y8sqLJt/6y9vWx99XecmnKGHM3/XlEvqa+vlwrkL8vprr8vOn3Za
v4FwDbyeJz1GPS59jOA5umvnQ+cz6JwJPSdqfGxcaqtrbc7Ae+vfk62bt0pq
SqqdH7fLbedAx1hfV29jN43Ntr8BZ2w6FnJ7AACA+cjvAQAAAABLMe2bkYG+
Iau9T76TKl0dPZbn6/XU3wMPpvn8xKRbGhtbJD09W7Jz8uVuW6f1w9dcP1p+
H/5d1My/rKxSMjJzpL2j234+b1sB7xHAk1JcVCK7duyS537/r/Lffv138vKL
L8vhg4eluLDYMmLNlhMT7khRYZFUVVZbr/gTx07Ijes3LcPXnLsgv9DWpN+3
d5/s37tfDu4/KPv27LO+7xVlFbYWvGb1dTV1cvPGTcvVNaPW+16+dEUy0zOd
fRRYvfmpkz/LwQMH5cC+A87lIUlJTrWMP1zv39nRJdevXpfK8krL3nU/dxLv
2H1zs3MlMyNLLl28LIcPHbGxHNh/QK45t9c5CbYuQKhG3e/12/yAlKQU2bt7
r+x1xqtj1vvcunFLbjrHd8UZW2lxqeRk58gvP5+Wt958y45/IJTfz256Lp3v
dT6AZup6/Fu3bLVafT1unWegcwF0fMePHQ8+lnOuDji30zUL4m7G2TnR3H1q
ckqaGprkkHPsr7/6uvzm7/5envvdc/LjDz9KakqarXWg/fzjbsVZvwTt2x8e
95HDR623v+4rsn8CAAAAyO8BAAAAAA9JL6b1M3+PNDW0SEFekRQWlMjI0Jj1
0w/n93oZ/pr8HriXZvQ9Pf2Sk5MvFy9edS4LLJfX3zdvtPzeF/wd1OsHBkek
tq5R0tKzpLq63r63l2es3x+Ap6ClqUUuXbwk77z1jjz/78/Lxk8+lTsJd6xG
fGR4RNrvttua799/94Pl3JoVa699zb215l77xO/euVu+2faNnP7ljNyOuy13
EpPk6uWrlifrpeb846PjkpWRJdt//Mkycc3ANeve9Nkm+eSjT2Tnjp2WPacm
p9ql7ldvqzm37lNr1zUL1zkEn336mXNdfLDevH9ADh86LB9+8KF8/OHHcu3q
NUlJTpH01HTL/g8dPOTsZ7utX69976cmXZanNzU22Xi/2fat3UYz+yTncTW3
19z9042fWr98Hb/uT6+z/D4umN/b2gGh/vThHvjWC6C33+YSfPH5F7Jj+w47
h9pjX+ctaF99PabzZ89LknOOdN7BmdNnbD7ElctX7DzpMWqdffztePn6y69t
DOveWSdnz5yzuRCazZ9z7q999bdt3SbXr12386XzCs45t9mze4+c/vm0fTat
44n17xcAAMBKQX4PAAAAAHgoouvcioyNTEhpSYUUF5VJY32z1d5rzf1KyO+f
GPJ7PCJviH1vc0xmLL9vbmmTpOQ0OX/hslRUVMvw8LhoxBY9v5/bz9jYlLS1
dVrNfkFhie0nQO9prBG6jntOdq5s2bxltn++5tyaO7um3JYXb/xko7zz9ruW
J2v2nJaabmvCay24Zvt6vdaVaw291rk3NzVLeVm51dBr/l5eWi59vX2WV3/5
+ZeSn5tvmXZFeaX1mtc68x9/2O78HSy1PvD6mWpVZZXVpuu8AN2H9uXXvvHa
F+CVP79ifer1sTQv19r0V1951XLupDtJVuevcws62jst3/7u2+9tjoDWvw8O
DDnHPCQ3rt+QH7//UX74/gdJS0mzY9a5ClbbfjNO3nX29bf/5W+tb35iQqKc
PX1W/hLO7/sHg5+xWnYvwTXo/QHL8MdGxyQ/L9/O2eebvrD++A31DXLy+El5
6cWX5eyZs9bzQPv76xyJ5KQUOXrkmK1fUFlRZTX8WoNfXVVjcw60f76eg4z0
DDsmPeZDBw/bedf+BnqsbXfbbPw5WTmy5est8vlnn0tba1uwj/4K+B0DAABY
CcjvAQAAAAAPReZ652dn5dm69/3O1x6Xb9F++U81vwdWIMvdvcFL/7TzGnJo
fl9b2yApKRmSkJAk3d194nb77GeL5fdhbrffau7LyqskMzNXyp3Xoc4JmN3I
8rGK+Tw+y4S15/uXX3wpp385bTm55tFav93a0iqffPyJfPDeB9bPXten1/Xr
NWPW9e23btkm+/ftt7Xf9XrNjLWnva5Dr3Xtuna7rhmvebXW5ev3RQVF1pdf
8/s333jT5g7cunnL6to9bq99fqk5dnpauuXU+nOdD6C5u9731T+/GszvG5rs
cX747gf5fNPncvzYCcvEtV9/uL99dVW1HDt6zPJ4nT+g49e5ANrfXmv+tQ5e
H0uzd930c93amjr57pvv5Lf//bfWN1/ze62T/8sbf7H8XucAzG6h/H7aeTPS
mnw9dp1j8OGGD+WD9zdIdWW11c1fvnTZxqlZvp4nXcdeH1fnKYR782vvAT1G
3c/w0LDNPfjyi6+sv0Btda3tW3P6ixcuWo2/zrFwuzx2zvQ507UF9LjefP1N
KSspk9HhUT4LBgAACCG/BwAAAAA8DK3bGxkel/q6Jsvv62sbrRZfe+c/THZP
fo+1aGH9va5xPzg4IkXFZZKZlSvFJeUyOjop2uPB/6D8PtQPYmLSLS0tbZKV
nSf5+UVWu69zaOy1KrF/rwCelEXz+1A/eM3DP9v4mfXO1/p17T/vd67X9eP1
dlozX1hQZDl1SVGJZGVmWf997X+vfe4/+vBjy9o1t9brtc5c822tm6+pqpEN
72+wfvy6nr3P67O/i7ppj/uC/EJ73Gj5/cXzF22deN2PZtba3197+ms2Prs2
vXN8ehvtk6+9BRJuJ1i9uta/a3/8wwcPWy9/zd7n6ulnpL+v33rRa+Z/6cIl
q+nX/vVR8/vI8+ncf2w0mN9//NHH8tGGj4J9Cto7bE5AZnqmZflFhUWSnpZh
cwc0m9/06SZ57dXXbd/aQ9/v88uQ8xjXrl6XLz7/Ug4dOGTnV/shjAyNOPuq
tfOhx6LnIzMj0+YYXHDOyRuvv2F1/jnZOTa3weYlrIDfMwAAgFgjvwcAAAAA
PAztnd/V0SN5OQVSkF8sba0ds73zye+Bxcytw6D5/Pj4lPW8T0/PkpycfGlu
vitTLq/9TOvoo+f389dzcLl80tM7IIVFpZKbW2j7m5r0zOWAEvv3C+BJWCy/
188QNdfW/vnaj/2Xn3+xenfrEx+Ysfxes2rtha9rzuv9NKfXOnPt6675vdbE
a996zb61L31ifKLl90Wh/F5zaK3tv3Txkn2GGtnrQteBLykutdr+RevvnXFr
Hb/2jN+1Y5f179f7zW7OfnS/2vN//br3JD4uXqoqqpy/uXnysTMurcvX+ned
qzATWstejTvHpevJ6xr2Vy9ffbj8PvS1fias+9dj3/zVZutj39neadfpPAWt
4w+fp5vXb1qPAu2z/9qrr1kPgq6OLpvHoNn7Vec8fuH8TPP7Ks3vJ1322NpL
/+KFSzbHQC+1Tv/mjVs2p+Htv7xt6wvoXAE9x/p8xfp3DAAAYCUgvwcAAAAA
PAzN33W9+8T4JKkoq5Le7n5xT3nvzeg9gUX76cc+SwWesnB27xfT3z8shYUl
EheXIHn5RdLXP2T99DW/19t5ouX3dv9Qfu+bEbfHL8Mj41JT0yD5+cVSXFwu
I0NjMjMd+/cJ4Em6f34fsM82NcfWbFjXk9ecW2u6tQ6/o61Djh45Kl9/+bVl
7CeOnZCbN25aPbjW4m//cbtl05qfa36vPd+3bd0W7J/f22f5/cZPPrX8X2vU
w/m5jktzeO0Bf2D/gaj5ve6zvq5Bent6Lb/fs3uvPabW7duxSXA/mp9fOH/B
1pG/rfl9ZbXk5xXYvAJdd17XnNd+9bNzB7SGfmTMsnSdt3Dl0hXru3/29NkH
5vfar6Cnu0fibsbJ5q83O2PaY7X8Wjt/6uQpeeetd+S7b7+3r+NvxzvjyLfH
2b1zt7z2Sii/7wzm97qWgM4dsPz+4GHbh/bL13Omz5Wec11bQMeVfCdZCvML
JTcn12r5dU2CjPRMO8fT5PcAAACG/B4AAAAA8EABkYmxKSkvrZRbN25bjq95
YbTe+eT3wJxw/3xd217r7OsbmuXylety6dJV650/NeUJ5vWhfH7x/D5Yn281
+s512oe/rb1LSkorJCMjW3q6++z1qH0yYv5+ATwhi/bP9wcsj9bPNr/8/Eur
F+/u7La/XVqXr7m5rk//ztvvWn6enZUjzU3N1v9ds2fNuLW2XLP/s2fOWu6s
/es1vy8sKJTe7l7rLa+9+S2/b+sIjimc33u81mv+4IGD0evvzwd78mte/vVX
m2X3rj2W3+t68LYfCe5HP5/V276//n2rv6+vq7d9aX6vde1lpWXz+u3r3ITu
rm45cviIvPDHF2zs2jdA6+aj5vcyd9+R4VHrAfDVl185Y/rauc9Zq6e/cvmK
fP/d93ZdjnOe7jrntN85R7qefXVVjfxy6hf50wsvWg29Prbl9/2Ddl70OdEe
+xXlldYL4dzZc/LD9z/I8WPHrXeAHp/OEdC++nruv9n2rfXi1zkUA/0DfBYM
AAAQQn4PAAAAAJgncnO+15pezQXvtrRLQZ6ug5slXR291jvfr2t2P2TvfPJ7
rEXeCINDo1JaVinnL1yWhIRkqa9vtn75ltl7g7eJmt8v6J+v3+v9tJa/uqZe
UlMzpKmxVcZGJqjBx6qmffBbmlqsl7zWep88cVLGRsdsDXaf8zPrn7/pc1sH
XmvDw/l9e1u7XL96XV568SX57tvvbB/6eaj2eNcsWddm37plm6x7Z53V6FdW
VFp+/+0331oG39PdazXlGz/eaP32tbY/ctNxlZWWy4F9B2x+QHnpvf3zG+ob
bR6B1qLv3rVbSopLLPePrOO3/vnngvm99sRvaW6xmvx9e/ZZDq7ZeWNDo2Xv
UxNTlnlnZWbJp598Kn/367+zn99JCNbfa137rRu3rGd/eH6D9gkYH5uw+Qcp
ySmyb+8+W/f+1IlTzt/3Ansszd+/csa4a+cuaW5slsmJSXG73NanX3P2H3/Y
Ln947g/W40CzfT2GocFhq+PfumWrza0oLS6V6qpq2fnTTtm6eautda+3mRyf
dPY3Zb3ydW6Anu9/+8O/SaIzZj03Oh8h1r9jAAAAKwH5PQAAAABgnshtRnvs
zsj46KSUFJVJTlae9c4fHhydrfUlvwfuZ2Y2l+/o7JH8gmK5eu2mrV3f3dM/
W3Mf6d78PrrRsUlpar4raWlZUq5rWvQMzFuTG1htNIvX9dkvX7wsG97fYGu2
a193rY/XOnzNmzVj1371eju9j64Xr1l+3K3b8ueXX7F8Pysjy+rptU9+cWGx
1Y5v+OBDeelPL8mnGz+zfu7aD16zds21tW5ee9d/8N4HVttv/fMjNs3GS0tK
Ze+efVbPrnXyWveutfuvOI95/tx5y++1R7zl9zuD+b3WrusYZ2bz+1ZbJ/7d
t9+19ebb7rbb57aatet9tm3ZZjX26anpkpebL6kpqZbZa6/7v//NP1g/Au2f
r/MafvfPv5NdO3Y5t0mz3gA6Pj0Wve/VK1ctW9c5EDt37Ayew55eq7/XdQW0
r72eJ83YddwNdQ1SXFQsJ4+flI8+/Eie+/1z1m9fj29qcsp6+Ot+t/+w3er2
deza72D7jz/Jxk822rwGrb/X3gm11bW2X50n8KcX/iS//5ffW31+U0OTzcGI
9e8YAADASkB+DwAAAACYJ7zZusHB2nvN6zPSsiQ3O1862rqCtffegGX75PfA
fczWzAcsa8/JLZCk5DRpa+uUyUmPrXuvtfePkt9PTrqlvb1bsnPyJS+30Hpk
kN9jNdP67OHBYev7/vwfX5C//j//2vJxXau+va3DetRr7bpm2tbjPrRp3bfW
z7+37j157nfPyWuvvmZ97rXXvvam16x6wwcbrBb8P//Vf7Ya/P1798s7b78j
memZ1ie+orxC3nj9DcvPtU599rXmbFr/X1ZSZnX1n326ybJ57cuvubjW/Gsm
r2PTunPNt7W2XfNwq78Pb87+tH+Ajl2PSecJtN1ts9r5oYEhSU5Klh+//9HG
rt58/U1Z9+462fHTDutbr7XsOq8hMSHRMvn/+H/8R/m/nPPzh3/9g4375Zf+
LC88/4L88d+fd8b0snz80cfOcR6zeQzaw0DnIGgWn5WZbefkr/7TX8n6deut
fl7nDXy68VP55ONP7DGf/+Pz1p//1MlTNja9X2V5pa0f8I///R/l/ffelwP7
D9h8glf+/KqdV51XoesR6P4+/+xz+/6N196QF//0orz15luSnpZhPfpj/TsG
AACwEpDfAwAAAADmCW/O11oTqFm9ZvbpqZlSXFgqQ4Oj4nH5xOeZNuT3wOJ0
vXqP8zoZHhmXzMwcuX4jTlJSM6Svf2h+Zn/f/vnReTx+6R8YlrLyKsly9l1b
XW/zbWbI8LGKedweWztd14f/+eTP1sddM2jtVz84MGg5d1VFlYyNjkt48/um
red8ZkaW1eZrPq915pov63rvKUkpkpaaZjX6mp+XFJfa+vRa36418No7XrP3
pMQk67Vv+9bxhF5rgdA69FqPrnm/1utrf/tuZ5yap9fX1juPPyKuKZfk5uRZ
dq+30Ww+ctMxVlVWS0J8otW862e22ptf76u9BfLzCmxNe10L4Ma1GxJ/O8HG
rrX0r7/6unM8Z5x9l9hcgkMHD9uxaKZ/zbm99hPQry9dvGT3zUjPkNqaWsvM
df6Bfg6rnxNrL4OMtAzL4rUu/udTP9s69ted+yTdSbJzouPTPv06p0GPU7N/
7Y+vdf7aa0Dr77Ozsq2H/q2bcfY8HTtyzPr061oCep3W6+v51HUC9LlsbWm1
Pv2x/v0CAABYCcjvAQAAAADzhDfna62/Hxkak5qqOsnKyJHqylqZHHfNZvde
8nvgvjS/n5rySmdnj8THJ8mVqzckP79IRkYnRHvru91+y/cfJb/Xun7tod/Y
2CrZWXlSWlwuA/1DlqXF/H0EeBL0IjBjGb7W4WtffP1Mc3hoWNwuj/N3yWcZ
vq7xrpl98A5iObtm7JrDt99tl/KyCsnLzbM165ubWqS/r9/2oXMANL/Wz0q1
J/zI0Ii4Jl3W1z24zvuQrd/uX/Aa0zkzms2PDo86+xkRjzOW8HrzOk7XlNu+
17xea901/9es2tZ7j6jj1/FPOGMP1rS77Hu9bHHGqH3n6+vqpbOjSzraO53L
Tut3r736tbf+yy++bL0BGhuabIw6x0HnCOilnie9rd5XL7VXvs4V0HO28Pxq
lq/nQucL6Dr2RYXFlsvredY5DDqXQOkYNfvXz5b1vnqpj9vd2W1j6+vps+dB
1wzQvvk6t0H79+vciva2djsvmvkP9A84538gOA/Az3sXAACAIr8HAAAAAEQV
0M/xZ6S3u1/ycgqkqKDE+nO7tfZ+CZk9+f3q5H2CYn1sy8o/I+PjLmlsbJE7
d1IlKSnNvp6YdNvP3R6/8YZy+2j5/WLnye8XmZzySGdXrxQVlkh+bqHU1TZY
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
XO18pKXsQ2/vcvuC93Uuh4bGJC+/SG7eipc7SanS0zsgk6E1KPR2j1t7r7wR
axnonAB97KHhMSktKZP8vHzLCL2eiDxyBby/ADEnwUutva+rrZdbN25ZNq51
7/p5ZGT//OXOqr0en2Xlly9dliOHj0hFeYWMjY4FH895rNSUVNn02Sb5+9/8
vezasUuuXrkq8bcT5NbNOLl88bIcPnhYPv7oE3nt1ddl6+atUpBfKMNDw8F5
OuFjixz7Yn33nU2Ptay0zOYGaK2/vl88sM8+GT4AAMBTQX4PAAAAAIik+X3r
3Q65fv2WVFbVWh4Y83wVeJKWOb/XS+2Vn5KaIbfiEiQnJ1/Gx6fm8v1lmgsT
md/rpe53ZGRcaqprJT83X8pKysTv9Qdf2+RtQJBuAbG5LcVFxXL40BHZ8P4G
SYxPlIG+gbnbzMjyvW5Cj+macklxYbHs3rVHNn6yUXKzc613f/jnGekZsv3H
n+S99e/Z1x1tHTLYPygDju6ubmmsb5TcnFz54fsfZcMHG2Trlq3WO0A/240c
t32mulh+H1ojQI81PTVdPvzgQ9m/b7+9Z+jPVMAEZr+fJ3LfsX4uAQAAViny
ewAAAACA0S0gMjY6IXV1TXL9Rlywd/64K5gTPkImeo9Y57TAYpbj99UTzNG1
X0V3T7/l96mOysqa2f4Vlt3fb99LGIfXGzDhr/UxdK2L5qYWKcgrMJMTU9az
m6wNCNLPG3Xd95bmFrlw7oJ8/OHH8vt/+b3s2bXH6tlHdV16l0fGx8alq6PL
avSrKqqk0lFbXSud7Z0yNjIm0/7pe/bZ19tna9NXVVbb7asqq6SmusYyeF1n
vrW5Vc6dOSfr3l0n//aHf5Mjh49KSXGJjAyN2Ge0memZNo7PP/tcysvKndfv
5OxrV1/HOq5h57YpSSmy/Yft8uYbf5Hz5847r/nm2XFMjE1IhzPGivJKKS8t
t/1onb+uE9Db02tzCCbHJ6XM+dnhQ4fl9797Tj54/wM5/ctp+2xY+wFobwK/
z2/H2dTYLEWFxTZO7bWv+9N5BJr/63hsWwHPKwAAwGpCfg8AAAAAa1w415Ng
PtDT0yclpRWSkJAszc1t1vNb19YO54QPm2M+bj0z8CzR+S0+X0A00tMMXdeg
SM/IloKCEutnof3twxn7/fYT9XWzhLkEOnegq7PLeoFnZWZbXucJr+kNwD4L
1Z7zaSlp8s22b+QP//oH+Zv/8jey7t31cvbMOcvC9XWjfe4TExJtrfkTx06Y
X079IgnxCZbNj4+Oz2b4Pq/fsn6tp7904ZKcOH7Sbn/82HE5evio1czr2vYZ
6Zny9Zdfyz//j3+R/+f//n9l/br1cuH8RcvDNTPXmvvdu3bLZxs/k9KSUsvZ
Z8cuwUutgR8cGLS++u++867V6+fl5tnfb51DUF9XL7fjbsuB/Qfk0IFDcuTQ
ETl65KhzbGclJzvH1rzvdui6AR9u+Ej+9m/+Vp773XPy9VdfS3JSss1PcE26
bO6A9tTX8elcgQP7Dsi+Pfush7/Oe9A1Onq6e2L+fAIAAKxG5PcAAAAAsMZF
1OVqvd3du+1SUFgi+flF0tnVaz2/NaII9+l+KOT3WKoovy/PEqu99wbr4IeG
xqS+oVlS0zKluLhcOjp6gnNgfMH83u28phY7D4+b37tcXqsB1t75mgXW1tQF
19eO9fsMsELMOH/zNBcvLCiSfXv3yWuvvCa//v9+LV9s+kLib8fb/JeS4lI5
d/ac5fsnj5+UK5evyPVr161GfcdPO+TY0WNSXVUdyvADtr+sjCw588sZy8s1
ww/ffsvmLbJzx07Lz+8k3LH7v/inF22N+y+/+EoSbidYZq75e3pauq17HzW/
j+Dz+KS6stoy+u++/U4S4hPtdd7a0iqnfz4tmz7bJN9/+73NN9Cxa83/rp27
5Wfne+3L0d3ZLanJqbL5683ym//2G3npxZflp+077GfaK0Dr7nVOgdbna67/
zdZv5PLFy5blnzxxUvbv3W/zErIzs4NrdNDfAwAAYFmR3wMAAADAGhdax1bX
u9X1gOvrmyQ3t0Cqa+plYGDE8kPq77Hs5vWIj33+/vj5vT9Yg++fkZ7eASkq
KpNbcQnWy6K/fzhYfx/K73VOzGKZ/OPm9zo3YGR4VOpq6yQnO1cK8gukv7ef
z1iAMOfvndfjk57uXrl967Zs/mqzPP/H561eXvvka1/4q1euWa35oYOHrM68
ob5BmhubpbK80jL5vbv3yvmz56WpoUkmxidlaHDIMnKtc7965apl+1rHX1FW
ITev35SdP+20Wnytw9c8/bNPP5M/v/RnOXP6rN1We97ra1Tze836H5Tf6zHc
bbkrZ537a699feyO9g7r/793z1752jmmpDtJdjzaz7+6qsbmIxw+dEQunr8o
7W3tdiy//PyLvPTiS/L5pi9s3Np3QGv49RxoTf8P3/1gNfwpyanOOWi0TF97
6N+8cVM2fPCh7N+333r/69y/mD+vAAAAqwj5PQAAAACscQGxf39pH2C3yy3V
1bWSnZ0vd+92yujY5CNns+T3WNQivx/PsmB+H+yf397eJWlpmXLx0lUpK6u0
15HfH1l/v/hr4XHze92/rnnf1tomRQVF1iNcc73ItbqBNS00X23aNy3FRcVW
w/7uO+us9l7r4Ds7OmX3rj1Wv645vubkms9rz32dC6M99Xfu2CUbP94omRmZ
1u+iv6/f1rLXPPvG9Zv2+hsaGJKB/kFb8/7C+Qty7ep1m1ejPfY1z//g/Q1W
s69Zuf4N1r4A983vZf5x6FgvXbxkObrWwjc2NNm+fz75s5w6ecp+PjQ4bOPW
nvnXnGPR2n7tz6/zDnSMKckp8v76920+Ql5Ono1Bz0+/M6Zc53udj6DZveb6
mtMrPR9au//8vz9v50DnArhdHmrwAQAAlhH5PQAAAACscZrfT89Y/Zxryi3V
VbWSm1sovb0DMjnlsZriJWfv5Pd4iN+H1SS8rr1m9E3NdyU+IUkuXLgslZU1
MjXlDa5B4Q3M3m4xj53fK7fXaovLSsutN3dLc6utzx3z9xpghdC/edqDvjC/
0DL399a/b+vJ19fWW935pk83WQ96rW9PS02X7KxsycrMsrxde+Nrffs//OYf
bB14/UxVs3rtLa+97Ldu2Wr302y8vKxc2u62SUNdg33eqa/L/Nx8+Wn7T/L+
ex/YPjXjt/zeGVNaappl+4vm9zJ3DB1tHXL50mX58IMPbe6A5ur6WDXVNVLu
vPb1MUuKSmxOgNbLb9uyTT7c8KFs2/qN9QVobmqx+T3r170ne3bvCeb308F5
BFOTU7aOgO5L6+61hl976+uaHDoPYMf2HfL8H1+Qr778Supq6uz25PcAAADL
h/weAAAAANY4vZgW8bh90t87aPXChYWlMjg0KlMu72ym6FmCB+aceMY9OK9/
2N+H1cKye4dm9Q0NLZKSkiEpqRnS0tpu9fbWP/8h1qB4/NfNtPic/Qz2D0t1
Za3cjkuQ+rpGmZpwB2trI1/75G1Yo/QzR10vJj+vwPrkr1+3XuLj4q2nfNyt
2/Leuvfknbffke0/bpeTJ05Zn3ldO15752utu+b0695ZZz3qtTZd575pr3rt
la8/P3zwsBzcf1AOHjgkx44ck6uXr1o/DF13XnNyzb83vL9BMtIzLb8Pj0nn
Clh+/+kmKSspk8mJRfrnO7TuXXvhf/3l1zZ3QMehn+9qJq/zB7Snvl5/5dIV
e3xdw/6jDR/Jls1bbG6A1uCnpqRa/b3m99rbX/N73bfm8Tof4E7CHbl44aKc
PXNWzp87L9euXrM5C7t27pKXXnzZ1h6oqapx3l/I7wEAAJYT+T0AAAAArFGR
W0DENemR5sZWW7e7tKxSRkYmLIskc392Pem8eqkZ9GoWnLfgl4HBEXv9JCQm
S0FhiXR3983W5XufQp8CHYPPG5CRoTFpqG+WxIRky/GHne8D0zIvY5tZ8D2w
VuhcFq2/15pyXS9+/bvB/N7Wq79x02rStSZfe+trvb3Wueulrl2vvfBPHD9p
PfY1kx/sH7S1Z7q7uqWqstpq9G/dvGV5//69++WnH3+ymnfN1Gtr6qznvtbf
a918ZH6v0lPTZcdPO+TTjZ9KaXGo/l4ixh56vXqdsetjHdh3wOYYJMQnOI/f
Y/3zdb6A9v4/6YxRa+W1/732FDhx7IRl9+H8Xvvtax98ze/1WHKyc5z3iIB9
VtzT3SOZzth0boNm+zqH4frV61bLry5fvCyvvfq6fPnFV+T3AAAATwD5PQAA
AACsUZGb873W55aXVkp+fpFUVdfJ2NiUTEy6Z2vw8ex5Wvl9rLPzlUCzd5fz
WmluvitJSaly7twlKSouk96+wYd7vpZxjQGv2y9jIxNyt7VDMtKy7HXd09VH
fg+E6GeO075pKSwolH175+rva6trnddMhny68TP5/rvvrW++rl+vn5s2NzVb
TXp1ZbVl8FrXrl/39fbJ8OCwNDU2S2dHl4wOj8rI8Ijdr7ioxProv/3WO/LJ
x59ISlKK3Em8I9t/2G75fVZm9vz8Pi3d8v6PPvxYigqLZWJ8QmzTdW5Ca93o
uPt7+yX+drx88N4HVuef7exH++Xv3bPPeZyNVmuvx9bS3CJDg0O2Pn1+Xr71
Bdi6eautraHj1fp7naeg9fS6j2n/tNXe67yEnTt2yvvvvW/zAWwdgNY257hG
ZXhoWOpq6+Stv7wlGz/ZaOeM/B4AAGB5kd8DAAAAwBqmFwGRgH9GxkYnJTsz
Vwryi6W5pU0mJ90yOeUhv3+GPfnMOva5+Uqh59vl9tncl7i4BDl/4bJUVtXa
OhRae/+08/vJcZd0d/ba67m4sFRam9vI74GQcP19cWGxHDxwUN55+12JuxVn
+bxm3rt37ZbtP/4kt2/dtlp0zaddky4ZH5uwTP7qlWty6uQp67ff19Nna8Xf
unFLku8kS31tvWXgenvNu/VnWiP/zbZvbH+W3zvfa/au/fL7+/pnxzVbf//J
p3P98/Vv9HTA+v3rvICWphbrZf/1V19bn3/t96+9+3UtgI8/+tjq629cu2G3
1b4AOg6dI3Du7Dn5YtMXlrnn5ebbuvY6V0HnEezascv6BuhnsZrPJznH8eUX
X8q32761jF8/p9V96XHp41+6eEme+91z9vjlZRU2z4DPcQEAAJYP+T0AAAAA
rG1Wh+j821D7a99JSLb6+47OHuud73L5LJMMrmeOZ02sM+21xPJ75/VSVlYp
8fFJcisuQVpbO2RsfOqx1r1/1Pxe+2n09w5a7X1RQYn10ie/B0Kc33u/1y+1
NbW2tv3rr74ue3bvtZ7xuq689srX/P6H736wTF776tfV1Dmvp3K7vfaV1176
TY1N9hmmZvBaj3/i+AnLtkuKS61Gvaa6xnr0//D9D7Jzxy7JSM+QgvwCObD/
oLz9l7et1l771g8PjUjA+TusWfmWr7fIC398Qc6dPW818xXllfa4ms8nJSbJ
6Z9Py9YtW23t+eNHj9sxdHd2S1lpmWX6usa9zj+orqqRxvpGqayotHkBmsVr
z/tXX3nV1gPQHvp5OXlWj7/x441y6OAhab/bLh1tHdZX/9tvvpVNn22yuQJ6
HLovrdvXtQG2bd0m//Tbf3L295r16Nc5Dn6fP/bPKwAAwCpBfg8AAAAAmPYF
ZKBvSG5ej7P8Xnt+W929x08ODDwEfZ1ov4ri4jJJTkmXzKxcGRgcsUz/afdJ
8Lj94pr0yNDAiNRW11t+r5fTfiG/B0K0pr2nq0cSExLl3bfflQ/e/0COHD4i
DfUNlmtrxv7mG2/Kti3b5NDBw/LLqV+sl/ymTzfJd998Z/3pB/sHLbfWGnft
fa+97IO3P2Q5/88nf5a9u/da1q7r0WttftvdNrly+ar1rf/jvz9vj6lZv8/r
s/kDuqb8r//rr+WzTz+zOQVHDh2xx9+1c7fl5prPb9m8Vc6fu2A9+rUm3uP2
SFdHl5w7c07eefsdefFPL9p692dPn5VTJ07Jnl17ZOMnn8qrf37V+dlLsn/v
flsboKK8Qk6eOClvvv6mrHt3XbB/QF2DlBSXyOlfTsv6d9fbnADdh+7r2NHj
8tP2n+STjz6Rl1962Xroa+1+Y0OjeFyemD+nAAAAqwX5PQAAAACsXfbvroCI
x+WVro4euXE9TooKSy13DGaSc5mg1uE/LLdaAZnqsyxqzqu5rCvYD0HPsX5t
t1/seVgBx7FmOOd7bGxKcnILJCk5TfILiq32PhbzXzzO74X10J9wy93WDinM
L5aykgpxT3kl4I/9+w4Qc6F5Kx63Vzo7OuVOwh05f/a89cDX/Fp73mvd+s0b
N63eXbNwra3XfFzrzXNzcmVwYMgyd92XXmp+npuda/X32ltf15rXHF/zce1x
X1lRJeOj49YTX+v2tY++zgfQnvpaQ++ecttnoilJKbP5v9bgXzh/QS6cu2CX
ly9dsfr34qJiezyvx2drAYSPRXN0HfP+fftl9649zuUBe3wdc2J8otyOuy3X
r16X5KRk5zHrrG5fj/Pqlaty5vRZSU1Jsxp87Seg+7p88bLNSdC5A3v37JOf
T/3i/HfCDev7r+sNKO0p0Nvda/39Y/68AgAArBLk9wAAAACwhum6us6/C8dG
xqWpoUXi4xKlvLxKhp3vZ3NHdzATJL9/yhlslH74em61L0I4xw9+fZ/nYQUc
x1oxPuGSru4+SUxMkbjbiVJYVCoTk+4nUl//wN8d53fDp78vkx7p7Oix+vvi
ojIZHZkQvzcQ+/cdYKXQ+Wtuj9XhNzU02druQwND4ppyOX8Xx6yXfLhvfmlx
qVRXVktba5sMDw7P9YvX3UzP2H36evtsP5XllVKQX2j977XnvGbiuj/9e6t1
/5MTU9LT3St1tfX2OajV8Xv9to68jqW+rv4e2heg2RlfR3uHjAyPzuXl4c05
Fp0b0NneaXX1WsuvvflLS8qkubFZuru67TE19+90aM/+qUnnOEfHbM0AHbce
29jouNXST45PSktzqxQVFkt6WoZkZmRaj/6W5hYZ6B+wcWr+39fTZ/vRz5hj
/nwCAACsEuT3AAAAALC2ad1gb0+fVJRVSVpKhtTVNVodcTh3DOfA5PexF87v
F9IsP/rzEPsxrxU656WhsUWuXL0h12/ESUlpRezz+ymv9HT3S0lxufXV6HW+
1rr8WL/nADEV3iK+1s8gNVfXHD5cm6917XrdjHOdZuual+vlPdtM+PYzQc7t
NafXeQGuKbfzmvPaddHuN3ufUC+cWQ9zHOHbRdnvtH9axscmrLe+jvuex194
/9D3C8ei50P7AmjGPx7K9fWcLHYOAAAAsDzI7wEAAABg7dJ/d2nNoP57MD83
XwrzC6WtrcPW8fb6ArOZcfiS/P7piXpuNa+f8trzo6bCl5rhL+H5WQ6xPj8r
ja45UVVdJ5cuX7P6++qa+mB+H4v++W6/5fea4w/2D0tlebUUFpRYj42pCffc
e0B4WwHvRcBTtXDT6xbm4c7XM6Ec+56cfWbu55qNWz6+2H7vd32kyOz+Ybb7
HU/kzxfMCVj4eeuDxq4/18+PVfj4Z++z8H6xfl4BAABWCfJ7AAAAAFi7NHvQ
vre6zq31xi0pk87OnmB+T/197Lijn2/N6fW5mZhwyeRkMLvXjJj8Pvb6+oek
rLxK4uPvSHZOvrS1dznPkTsmY/FG5PfDg6NSXVkrhfnFdjkxNjX3HhDeVsB7
EfDUhDf9+j417PN+Hvn9bKYf5eczEfdfuK+F+1v4kAvmBjzM+GcCc18v+pgP
2NdMlHkL9xxL5NeBKGNd6uMCAADgvsjvAQAAAGANC62XW1tdKynJKVJTXSN9
vQNW4z1bNxzuwb7UfNftXz3uk7M/qX1Hr7/32XOjmX2w/t5rOX5M8vunfa6f
tMccX6/zuikqLpPU1AwpK6uS/oFhe15i8zvrsxp8t/P4uuZ9bU295OcVSXFR
mX0/+/oPb7F+HwKetPAW8XW4dl4WtoO/331VKLt/4OeWCx8zdN97fh762bya
9vBtF1qw38j8fuZhsv+ZBbeNPK7wFpDomX7k10vt9b/U5wgAAGCNI78HAAAA
gDUsIDI2Oi7lZRWSmJAoLc0tMjI8tuT66qedHa+UWvOnXse+TJl7rM/nsp6T
ZcnuH298usZ9V3ef5OQWSFp6lvXOHx2djNnrQ+cNTIXWWhgbm5K6+ibJzSuU
rOw8GRwalZmZ4Mt/dov1+xDwpEVu4esWycQXvV+0nz/K40fZ5+w8gsg8/H7Z
/aOOJVq//8UeL7K2P/J7kUfL7qMdT7RzFOvfFQAAgBWA/B4AAAAA1i79DH/M
+fdXaUmp3I6Ll/a2dhkbm7gno1w8D4643TOSDS9nnvzUs+oVcC5ieb5Xan6v
v/fNLW1y61aCJN5JkZraBuuLELPnzBXK8EPrK7S0tktRUanNLbD8PvQWMLut
gPci4ImK3CKvD9eaR/tZxG3CefPsZ5WL3fZhxxBtPAu/f0Dt/bKfj8Xq/aPd
ZynZfeR9ovYQmHm88woAALAKkd8DAAAAwNoVmA7I0OCwFBcWS/zteOnp6pHJ
Cdf8PuEPyOQtw4/sLR7q372qkN8/3fz+aa+F8BjPma4zoXXutXWNcuHiFUlM
TJb6huaHeu086QzfFVpXoaOzR0rLKiUpOU36+odEP26Zt62A9yLgiZPHuG+o
X37AH3j8fS1232jXL6yFf5zHXfhYC/d1v/x+4fYojxUtvw/of4fMmJj/fgAA
AKwg5PcAAAAAsHZpFtHb0yeF+YVyJzFJ+vsGxDXluae2+Ilk0asA+f2zZ9ny
e3dwnoH2zh+fcElVdZ2cO39JUlIyROvdfb6Z2B+rMz6vz3mN9w5KeUW1JCQm
W59/v1/fACK2FfBeBCy7iE3zYa/Ha3PWwlm83+cP9pEPb/fbx0zwM1T3lNvZ
j28ux1/qWML96yM/85TgdR63R/xe/71Z9sLcexnOjT1+uKeAPrbLI5MTU/NM
OVyTLjtmj9sr077pR/+sNnQMMxFzA/Qc6vNxz/kAAAAA+T0AAAAArGH6b8LO
jk7L79NT06W/r1+mptzkxQ+T+T4D+f1qXc9g2c/3o+zDPZff2xrzdU1y+/Yd
W2e+vaM7mN9H1MDH5FgX5PeJiSnS1t5l45+3rYD3ImDZhTbNiPWzz9bmVlsv
xuv2ytTklH3+ONA3ID6vb+7Gi+xLM2bNs5ubmm0/A/0DSx9LQMTn8YXycI/4
fdOzDzs16ZKGugZbw2Z0eHT+fe+X30ermb+fyPvN6H8DTNs5KS4qloT4hHvo
vL6M9AwpKS6x/1aYHJ8MzoF4xOdDz2P4HCidr7DsvQUAAABWAfJ7AAAAAFib
tA5O6wibG5slP69AcrNzZbB/0NbMXs58erVY2FN/+fc91+9ALzV39XqnxRN6
HublzLq2eSgXnr2Pe/5zNm+cofXQZ28fvl14P67Yn99YPY+P8lzO5vfOpc95
noaGx6S6pl4S76RISUmFdHf3O89dYPbcx+xYPcH5Bdozv6qqzsbX0NAsI6MT
EtAITt8LJPbvRcA9Irf7/Tza7RfcV2vHG+ob5PKlK9LS1CJjo+PS19sn16/d
sLVjxkbH5va1yLrvmll3dXbL2dNn5drVa5Zna/48vVgd/sI+8c7mdrltH1UV
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
Ll6nvTiG2Zlb93oqqFQqlUqlUq1CKb9XqVQqlUqlUqlUqqdTJr+HL7G4qER6
unp4/3x62tIz3b7X+sPqkfT8tvM5P2o97PgeyX6nLCJbnb3DvvadnT0SF3dD
tm3bJa+88jo98dnZ+QIGDL90e3sX/dyJN1Jk774DsnHTVjl+wpWe+5HRCenp
6ZfMzFx69MOuRZLfj49Pkc+GXAmTV373Ote5cuWa8VqjtLV1crvYPnLeg4KC
ZdPmbbJ+w2au39s3SO8+svTpL5+5c9+5mLZyYft5we84JvR8p+yy42ettSBc
ZubOwm0tVS/wGM/7o7p2zPoWCHNeV98kWdl59OBjfpGpgDk05/G71oyV32Mu
MQZca+jPUFpWyTFWVNZw3PP4LJDl/yxSPb2C/35sdFxuJt8kr33v3fclIy2D
30V4Hz5r3LOEB/ujDz6iDxsebXjWkUH/xedf2Jh3e1sH8+jByy8GXhSvM170
msOnn5ebJ05Hj7HfOtZFvZqbq5vExsTyuw/fhWDj+xz2yaGDhyT1Zqo0NTZJ
V2c3t5mRnkG+/ptnfyP79u6jjx11AGDTRw8fJYvPyc6hfx/++fbWdo4Z3B8+
cvj84VEPvhxMDz+Whz9+aHCIHL3BeP+483HydnjwUb+AecAYwbvjY+N5LJ0d
XTxOZAec9fNnPQD87tj+8NAIMww++fgTefGFlyQmKkaqK6tZ74B8/6QbSWT+
2D+Wg7cf+fkYB7z3yNBH3j74vVk7YX+ucJ8WtRWXgy7Lp598ygwCLI+5Bfs/
aWw7PTWd5wt+e7D4RGOecB4wFwP9g9LU0CRXQq4a+9othw8e5jzjfCJrAD5+
nI/XXn2ddRmYT9RZIHsBefw4p88/9zwzFrAOcvuX+/pVqVQqlUqlelxSfq9S
qVQqlUqlUqlUT6fARSy5xbns7wsPJJjJ1NSMjT3ay+TPX0uPit8/zD4f4/js
+fu32ac97+4fGJaiojL64D/7bL1s3rJd8vOL+Dr4N/zR5PET0+xvHxoaTm/+
7t37JDevkDy2p2fAwu+97vF7MPjExGTZv/+g/P6td+XUKW+prq7nfKJXO4Tt
g/+XlFTQ579hw2Z686tr6smesU94yLt7+tkrHd78+vpm5vx3dPbI4OCI7ZrA
TzB/ZMYPDIzIiN16yACANx3jR1bApLHcQhb+Ffz+cZ37R3Ae79Ur3JFbt+ak
qqpWUlMz6b/v6u7jfExbj+87Pxa7axvPzfOD+a+srJWbN9OZ4UB+L9bHCvg8
Uj2dwr0/sFv0lw+6ECS/ff4FiYqM4veR2XsdPm/47g8dOETPPb6nwL1PHD8h
Rw4flYK8AvLiocFh6e/rJ1M+63uWPvm01DT66vE9B/+9jd8br4HHI+MefBu9
3D09PMVhjwPz78G7kdHPcRoP/I78eWQAwBsO/o0xIjP//LnzzNdHTQC2jfz/
vp4++u1Rk3D61GnyebD35KRkcdznSH86xmD2CQDXRm955M8jcx+ZAPD/HzSO
GQwf8zM9OW1j6vDm30i8QQ5+yvO0ZGflMIM/LiaOeQTrv1jPvvHm/VXUScDj
7+vtS/YODz3mCdkGmD+T36MOAJ582zlaxPExTvD7d99+l7n8lRWVHC+88eDq
mAPWVxjnB7UMqMvAvCOXADUN8OBjDpADcMrjlFSUV9q2jfOakpzC/ADMJ+5T
w9+PeUbtw3n/8/LjH/1YfH18uR9kN6gHX6VSqVQq1WqV8nuVSqVSqVQqlUql
ejqFbFzk/8LHB78f7pOT38N/PTm7UGS1D8Hwld/fJ3NbzFQ3focHPioqVr74
cqMcdTpO/zbYuY27WufdzELA8teN5T1Pedl83mCy8OsjD9/Mz4c3Hz7+T9as
Y1Z+eXk1twNfPN4Huzd94UNDY2T7fn7nJehSCLP4wd+HhsekqblN0jOyJT4h
ifuNiIyWmNgE7ru8vEoGh0bJhcH6h4zn8PMXFpVKbV0jjyUhMZnrRUbG8HlB
YQlrEyYmZmzH+ETye7vzOWv135eUlHOeINQu8D0zg+BxXscPurYXZT7gfA8Y
c4/6DNQY4Fyp/161kgTPd2Z6prz/3gfkw2DLqDEbHR4lp3Y76cZ+9ODHYPoW
33gheX59XT35bmlJKXPa4Y13OuokO3fsYp/42po6yc7KZt/2kuIS+ubBf5Fv
D187OHpNdQ2z2b29fHh/dHpq2jI26wO/I+t+7Zq1cuTwEa4HFg1PPDL062rr
OebK8krycIwL3B71AKgzqKqs5n7Qjx78H7598O3bS/B7jBXeddQfwNOOfPnF
48E6zY3NzM/Hetcjo8jHUftwyvOUBBrbHx8dt/SJN5aFV72jvZM1CFu3bGXG
Pbz54Pc4LszVUvwe6yFL39y3ZZ+X5O3fvy2hV0N5/NgvtoF5QGZBRXmFFBUW
01uP48F2USuBuent6WUOwNEjR9nzAOuY256ZmuE9YayHDIXa6lr67nGe4+Pi
xeWEi/z8mZ+Lp8cpvn9r9pbeO1apVCqVSrVqpfxepVKpVCqVSqVSqZ5Ood8v
OAY4Q3lZBVn+1OS0ldMvpcfHx58Gfj81da8OApy+rLxKAgIuyuHDTvTOd3b2
km2by4HfT1uz0LF/8PLKqloydfio+/oGDQ2RlZv8HmPNyy+SU6e9ZdfuveTx
4MkTVt+77XimLIwX+8N24OfHesiBH7Pm74dHRMkeh/1y+oyPnDfGCZ8+PPou
J93F3eM018G2R0cn2AcAyx056iwXg4IlOCRULl++KoEXLnGdw4ePyUlXD/J9
ZAZYju0P9E1YAYz+QTKzBzBWePELC0skNi7Rwu+7+2xz/Y3+dh7Z+Oz2i1qN
4TFpaGiRpORU5j6A3+O2Cx8r4PNI9XQLLBZ8F2wc3Bt938GR4XuHzxveePrJ
h0dZewYvek11Lf3doVfDyImh4MshzNNHxv32rdvJ/C38PoecG4zf9N+7u3lI
QlyCtDS1kLmDC8MnDi8+MgE4NjHHd5t917ds2iInnE8wFx795luaW1gzAO85
svGx76tXrpKno14AvnYweNQXYJ+oRUCfePSLx36X4vc4dvS1QSY99oUc+emp
GbE9MC5jHWTL4/j27d3PbHnMR/T1aPE/e06uhV277xhwXHh95/ad4ufrx+NB
3wCwdjD2Jf33hpCDYN6jbahr4HF+/tnn9NGjtwD6D2CMqB1A7QWEjHxwftQS
bDbm7KTLSZ5f5BKQ3x+28PvysnLbGDHettZ2Hj+OC3OJbWBbgecDmb/w61/+
Ws6cPkN+j74DttoClUqlUqlUqlUm5fcqlUqlUqlUKpVK9XQK98pxLx1eP9xX
h1cPHr/p6a/o2a38/lvxe7M3OVhqZlYue9m7unpKWnqW1WtvOWYz98B+7sHa
kVHf2dVLHzs4e2/voGRk5oiXt5+EhkawLiAu/gZZudOxE9LU1CbjxnK2/geL
zidex3aYxW8Ifv5e42dERJQ4O7vIwUNHJTomnmwf/nmME179/Y6H5IyXL3k8
8vpbWjrEYa+jrPn0MzlhHFNiYgqXLyouk+zsPHF185SduxyYB4Cs+TFrzsCT
yu/N82lm0+M4wcXT0jI5H2a2wPIch2VMlpyHWdu1jn4Jzc3tciPpJs+N8nvV
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
MfESH5/E/gPg9+ZcTn1FJv6y8PveAcnLK5Tc3AJpamrl+k8sd7X7TJuZnpXI
iEh5/bXXxc3VjTVJyBnHw9JLfZj9woMvB4uri6u4HHeR2JhY+vThKzd5Oj4X
8RmIzHQIz+9lm88z53vO9J0v/ly1ZqLPWfPA71r96+b7yEnHmJCvjpx3Sz7A
vXWXfT6XEMaH/uvotXIj4YYcOXREtmzeIkEXg6S6qkamJqbusXt7rYCxq1Qq
lUqlUqlUT7KU36tUKpVKpVKpVCrVKpf9w/oa+X1nt2SmZ0pBfqG0Gv8fBIv5
Zvx+9j49Ei77MNxzJelhGSwY+MSMhXkb646NT5GNo998T88APd5L1URMMJt+
2pLRvogts+c5vPQ2/7dlu+hN39nZQ54OZr/AI24V2fO0JdseYwKPNtcbHBrl
dkxvvfkTPN48Brw/bo5r0TjM7U5Yc/UXjv0Jk3EcyEIoLa2UqOg45ieA348Y
8zUzc4fzuNLy85HXkJ9fLLl5hay1wHtzTypvtXsgzx3++/feeU9OeZ6SgrwC
MnKwdOS9l5eVy6Wgy3LQ8aC4nHCRpMQk1i+BqfNj0drrfGR4hJ+FNdU1hmr5
HOvDu49+4+Nj4zI6PCoTYxML+3Fb2T37pRvvjY2O8bMUn7PYNmoBsL/amjqp
KK/gz66OLvJ8bHdB7++VIutxoY95R3uHBF0Ikt+/8Xv50Q9/JG++/qYEnAvg
PGFuWONgnQPl9yqVSqVSqVQq1beX8nuVSqVSqVQqlUqlWuWyf1hfA1fq6uyW
jPQMKQS/b/mm/P4Rsfqnlt/PWhm2JY992to3Hfzb5Plm/rqNBU/fWsCFwcEn
7c+DdZvjVs5urm/WBiC7fnR00pYBb47B3Ka5Ptm7rUf9PdZucnrWDlgZPERu
P27h9ub7Jr+31ATcsvPcz1i1As7XtzjPqGeoQb5BagazDOobmlnvYNZWfNW1
sGz8vsDK742x4hw8sfze7vMN/D42Olbef+99OeV5WgryC8jQwd5Rn3TxwkXZ
67BPzvufl5zsHL4OXznXN44fn3tg1MgiCb0aKmf9zspZ37NyJfgKM0pamltk
aGBIqiqrpKS4VGpramVifELuGJ+jttz9u/MyNDgkdTV15Nq93b38TMU9t4qy
Co4P2zxz6oz4+/lLZHiklBuv9/f1MwNg2edx8feF9XfUQKBuoaSoRDzcPeS1
370m/+0v/j958bcvirubh3S0dViy9NV7r1KpVCqVSqVSPTIpv1epVCqVSqVS
qVSqVS77h/W1b8LvH5gB/5gZ6Xe+z8c15gfI5kE3swsmZ+/zbdsz9SWfm/u1
4/e2HvT3efYtsh/rxORCL7z53Mbb7XIV7L3zE4u4vmW7MwvqAe7lxz8B5+5r
yKxPmLLye/QuuJF0kwy/wY7fjy8x/1/rGn7I6+frjBnnEfUV6L+Qn18kmZm5
UlZWSZ4/Mmzh3MiYB6MGg8Z9IjBZ5MCbnyG4RwPmjfx3+NSHB+8tj5+DhuBN
x+cIlkPfdJPngm1PT05zu9iPTdiGsT6egxFb1pu/99llrG962u97z+4xO2Px
34Pfe532IqNvaWqR9NR0cTp6TLZt3S7n/M+T64OX2/rdz1u239zYLNfCrjFb
3+2km/h4+4ivt6+4u7rL5599IWdOnyG/jo+LJ9sPPB8oTY1N9NWb964wvsKC
QvH18ZXo69FSX1cvPd29kpKUwjEddz5Ofo8agtOep8XpiJN4untKclIyl5t7
gAcf279z+w597jNTlnNif78M9/XwHuZvbGSMcwzhOc4rz4kx99iG2OX+M3PA
GDPzArCesZy5/IihoUHL+cG5xjlCFkFiQqI47HaQ//Ln/4/8+Z/9ufz6l7+W
06dOS211Lcdmv/1l/957HDIzBpZ7HA/6jv+6/wZYqv+DSqVSqVQqlWpFSfm9
SqVSqVQqlUqlUq1y2T+sr30Vv18qD3+1sFeV6tvqHr+/JQMDI1JSUs78/MTE
FPrvkZ/P5SZWUMaA8beLfgng9/DeJyQmS1zcDdYdxMcnyvXIKAm/Fk7v+bWw
cImPjWdveGTQmznxYL09XT2SfCNZIiOuy7XQa8byYRJmCOtdvRLK9ZBVDx6P
XHh+3qCH+q3b9K7fSLzB7d+TZRvhxvObyTelp7uHn0EmIwWr7u3ppX8dfna8
dx97FEvGO/Pz331PPNw8eDxxsXFy/NhxZr5//NHHkpaaJn29fRZObv0sxPPh
oREy9pMuJ2X/3v0SGHBBEuISONbLQZflzTfeZM93jPVqyFXZv89R9ux2kNyc
XBkcGORYcf8K99auR16XbVu2SfClYDJtMH541Hfv2i3Oxlgwd1kZWXLdmD83
V3dx2OPAbAD49fGZfN9nt3GsmMeBvgHWIzQ3Ncuk8Tltq6swBG7fUNcgN1Nu
SoJxLuOMcwDhGGKiY43jSJKykjJugz5/6wN1C8j0x3hwrKhNwJxFR8UwGwDn
FdcEtpF0I4ljx3nG8f/VX/6V/If/5T/I9/74e/Lsr56VoItB0mhcL8hBmF+l
HnwcF84RrkHM40q6Z4l6FFwnHJf1esS1jdfQowHXyL36vBnWe6z6WguVSqVS
qVSqJ1zK71UqlUqlUqlUKpVqlcv+YX3tq/n9CmGOKtWKlSVbAP518PDQ0AiJ
iUlYufx+0sLv+/qGJDsnXy5fvipOTifkgw8/kWd//Rv5p3/8J/nBf/+B/NX3
/1p++IMfyq9+8SvyeHxG3LVmxOM+DT4vXn7pZfnxj34sf/PXfyt/81d/I39t
rPP9v/w+mS5YLvzrjQ2Nlnx6fNzMzbMO4MxpL3n5xZflb431TGEbWP9v/+Zv
5fVXX5fM9Ezy+jvWvvTgjMi/9/XxY449fOq8V7ToMw3+e+TTv/v2u3LA8YAc
OXyUHP2F374gLxn73L1rj5SWlNFbbuOW85bcfXz2wR/vdcaL/Bqec7Bt3C+b
mpwiE0fmvcuJk2TbqAkAjwfvRj0DOakxR7inFhIcIvv27pfUlFT2t0fOPvaN
TH8cG3vdYz4mJjlHV69clYjwSCkuKr5X72AnMGPkFuTnFRjLRZD7o8bBnFss
09zUIhcCLsibb/xennv2OfnFv/2Cwjn813/5N3nt1dfk2NFjUmBsY8y812Y8
4LXPSMuQz9Z+Ji+98JJxHTxLPfOTZ9jjHufz737wd/LMT38mLzz/gvzulVep
F377ovzrz/9V/vR7fyp/9O//SP73/+3/kLd+/5Zx7FdksH/QyvDnl/977xF/
fzJDwvh+7O7q5nVk67+w3OLf5ijrM5CTgOsI1yTqbVCbgmuwtKSUNSJNjc3S
3trOWhgyfPs/peU+DpVKpVKpVCrVAim/V6lUKpVKpVKpVKpVLvuH9TXl9yrV
N5WlNwAyKeC/Rw59fEKSJKekrXh+39M7IFnZeRJyJUzc3E/Jjp17ZM2ateSv
r736urz80ivk6J9+8qnExyVIb0+fjd+j33txYbGs/3IDlwXzfenFl8jHX3zh
RXJdrBdwLoBMGXwQ/Bk5+mDQFwMvytpP18rzv/mtnZ6X3zz7G/mt8fzLL76k
Fxxs0Z7fI7cefDovJ4/83t57Tlkz9uNi4uT1196Q54ztvf/u+/S2u7m6kbXv
2b1Hgi4ESX1dA736eMCzPNA/KLnZubLXYR99+wnxCfwsbG/rkI72TmlraZPU
m6n00O/cvpPM/vy583LM6Zj4ePkwFwDHhntrRQVFzNV3PekmleWVzJ1H5jzY
/4njLnIh8AKzCXDvDZ+9ncb2K8orpL62Xvp7+5fMZcf8oYYAY4T3HTkF8Mzb
+L3xAJM96+dPxv7MT59hLQb0z//0z/IP/+MfOR/IFcjJyuH9P/M7Aawdvnqc
75/+5Kfyj//wj/L3P/4f8t/+4r/Jf/6T/yz/8X/9j/TXo9c93vvpT56Rn//s
X+RfDP3kn38q3/tP35N/9z/9O/mf//0fyS//7ZesUcBY4O9edffz5iz9EXA9
4PrGXA70Dyz/uOYtGRXlpeWSmHBDkhKTWKOBepZu4xq7Ybzm4+0rfr5+xrlO
ZqbClZCrzGbA+Pm3tMS/D1QqlUqlUqlUyy/l9yqVSqVSqVQqlUq1ymX/sL6m
/F6l+qa6x+8HB0elsqpWUlLSJT09a2Xz+1ELv8/JKZDomHgJDYuQK1fCJDDw
Iv3t6PmOPu/eXt7k5WDLuDfDXvHzFo97W2sbM+Xhpfdw9yDXxk+wb3c3d/Z2
x2dKvzWr3cLv5+nJhtcbnPnE8RP35HxCnI858znYNzLn0XvdZPTYBnrTIxse
7B1MHPexFmS0m/w+Nk5efeVV+cF//zv54P0P5JIxTtQbIPcevee3b9vBXHlw
eWwfNQI4HvSq/3zd57Jt63b2u4cn/krwFYtCrsi5s+dkr8Ne2bB+A3vVYxv+
xnEccDwoKckp0tfTx/3jvQDjGDA/XZ1dMjM9Q080cud9vX3J8NH3HvwXvQNS
km9KWWk5/dxYdsnPbuPY8B7qBLCvtJtpFo/17XvctbOjS6KuRxnHt10+W/eZ
rPlkDbV2zVr5+KNPZNPGTcwWwL4mxidt28Zc5ufmy66du2TNx2s4Z8gvYB3A
T55hDgNqAFBb8d6778uHH3woH7z3AfsJwNv/p39i8d//8f/5x/LOW+/I5UuX
eSy4TlZjhj6uYXjYcS1ERUax/mK5x2R+lyO/IToqmj0kkA0wNjpmnO8ycXVx
Zd8G1I4UFRaxv8PlS8HMcejv67fU5izx7wOVSqVSqVQq1fJL+b1KpVKpVCqV
SqVSrXLZP6yv4b59t8nvCyz8flL5/WPnvktrqfcWv/ZV23i4MUzYrTdh/X3C
9vpSY17qGL7q+L5i/1OzD9jv4mNeSefmwccyMDgiFZU19N6nWfn98GPh999g
fIsE/31v74Dk5xdJZlaulJdX8feBgSFm1qM3PLLZkQmP58h4v2P13vNh5eTw
ioNPd7R10F+Ozw74kqGO9g7msuNek/1nDmoABo39YJmG+kZDDRbVNUhdbT1f
Aw+1eNmt+0TZgDVrHuOBD93MAlgsk98jKx5e8aOHj9JDj323t7Uz293MkUct
gOlRxhjQq/79995n9sAbr70h69auY04AtG7tZ/LF51/w547tO5jhj17y2NeO
bTvI+quramRocFgirkWQ3aelppGTM3fA+DzFfMIXjRoF8HFkHYCXgwPDCw2v
PrINlrwHZhwb6gxQI4B5xpxj3PbnBKwWWfzI50cNAXzYiQmJ3Cd81viJ7ALk
GthnviPbAF5+ZB4gVwBMOjLiOuseUG+AHAHUcyC3ALwXx4e6DswtPPt/9n/9
mfzxf/qe/PyZnzNjoLqy2nLOkCPwJPB78/vQOmZcs7j2LJpj3YntOMRyHlBf
giyHyPBIngv78zTHbdxdIFwD951X6/7m7tvf3JLzZmZY2I8P65p5DXiv1fi7
Aq8vL6vg3wuuuRuJN5iVgbwI1OJg/LiGkGeBrIiJsYl7+xTL39rcon3MPeBc
zlv/Ns2/0a9aVqVSqVQqlUr1zaT8XqVSqVQqlUqlUqlWuewf1tfAwXCPPzsr
h/fyweHAnMDwJyenl4Gfrn6RVU8skrWPOn6OT0xTNq5tv8yCbUwvWBY+cMhk
4yZbtv1u95zrjU/ZtjtmPB8aHpOhoVHy3cXrY7mpqVvUpD1vX2KfD64BsCw3
NX1Lpmdu8zn2C849bOwb+108D981w1/y3Ex8xfFY1T8wLBUV1czPT0pOldra
Bs6nub1HdRzfdHz2Gh2dkO6efsnLL5Kc3AKpr2/meZidvU0mfMtexmtgeAtY
rJUj3rYuD/4LbziE5+Y2yNiX+By6c/sOl8HyyFgH26YmLT+Ra78Uw+Q+2dN7
0Xt2D3ijY6Jj5e233pZ9DvvIsJkVbzxmpiz+dbeTbsb77zAHvyC/QIYGhpj3
Dja9/sv15NLg8ZkZmZKRnsm8gPS0dPJ+8How7saGJvqWa6pq5JTHKbl44SL9
+OD6yC24FHSJHBXHCF4KLg9ujtoE1AogDwBjw3rwRW9Yv1FOeZ6SvNx8mbLW
Liy+FzZvzW4353nBPIDvG/ON+cN9tOGhYfrzoeHBYR4jfqJeAedmzi6jH9vB
9uDXxnLoJYBMdXwvYLyoe8BPMH746pHzjx4F6EvwF//vX8if/99/Lv/2r//G
eS0tKbN4+0WeDIZr98C1iLwI9HxAHQTU3NTMmgmwcP4NiOX6XYrfg11PGseO
3g5NxvWBeaqvs9akdHRxfs3zinuwuB7RuwC1LHW1dcyVwHWImhhsZ86sfZmz
ZOOPjY5Ll7Ed5FBgmxgf7uHinFl6VMzzOfJ0cJ6QXwE/PrIuPvrwI2ZcIDsf
x4NlUGOD2j3zesCY8LeHuhz8OwDXOK5VPMc6uC5tY5oXLjs+Ns7rCseC6w5z
gdofzNeyn1uVSqVSqVSqVSLl9yqVSqVSqVQqlUq1ymX/sL5Gft/dy77K8N+3
NLeQNeH+u/L7xyQ77/m4HYMH18Z79/P7aRufJUO3LrfYu36Pp1s5+xIs33wd
zNfk4+D4Xd19Ul1dJzU1DdJtPLcxZ3Mb9lrCp2+OefHzpY6d/N56DPCtNza1
Gvutl7b2LhvDtx/fd3lubPO9WA/IJDBf7+8fktLSCrkeFStxcTek2jge1CTY
ztNDMvZHM76lNTI6wfOdl1couYaamts4zrt353n/xSJZ0t/+B/VNPpcexXas
DzDFmKgYefed9+gZx2ca2Su8wcbxgWfn5ebJnl17mDF/0sWVjBOcEqwezB+e
c/Q1B5ccHhrhOn29FlYPTz34PfICcL8KTPvqlVD2HQAfhZf+5ImTEhsdSz4K
3o7PU3yupt5Mk8qKKm4L4wQThWcfvvjDhw5TyAcAp8Xn8rwdY//KuVpC9HUv
0rz1/N43v1bP+FcuP2fh1qgLwNwcP3ZcXnnpFfn+X35fXn7pZfYlQE0C5svk
3Mv+ffc1hfHiGoE3PT42nnUc6KUQbVxH+JkQn8CsBfQZQK3Dkv77OUsfAvSf
x2tXQ65KeFg4swzwE/UOBfmFvKZ4TYxNkNWjLgTvRXF/0RJqXEvIPsBcooYC
cw5mjpoKjAHXHrLxY2NieZ2jj/3N5JusFQBDx3WJ/aAfAnpCoJbFYc9eeemF
l9g/IeB8AHMeiozt5+bkGX8fRcxtwJhw3aGOAPvAOGKNcZlzkZKUInU1dTxG
8x4txgefP7Idqiqrua2I8Age00rpKaBSqVQqlUq1GqT8XqVSqVQqlUqlUqlW
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
dILjQT1CXl6RXLkSJmvXfs5xBgWF8Bjg76+sqpWAwCBxcHDkT6yPGgCw/fFl
PXdfX2ZtBOoOwMNRCwHhfNuOY4X0A8BY+voGWUuC66+srFLu3JmXeXwWyPJ/
FqlUyyHcd0SWPhg2uDQ4OLzv01MzNr4Nz7ltnTnL9+a8+RpeMpYhLze+O9F7
fnhwmBwd24PHH9uH6FG35szjOd5HLj/uf2JdZN9gn+Y6JhPH/jE+5OljOfB8
bB+/m2PhPoxxmNvH73iP7y+6t2ouv2AOrBx/Ztr4rDLGNDkxyeeoBbAf9+J5
s3F75fcqlUqlUqlUj1zK71UqlUqlUqlUKpXq6RTu7YMHWPx/xfQgjo2OifL7
bykbs7Ww85GRCamta6QnHT3l4X0PuRJG1gvPNjg4mDd88+CqYPTDw+P0q6Pn
/H7HQ8y3hz8f60RFx0lAwEUy8S1bd5DVNzS0kK+npmXKCRc3+u9tGe/GWFBH
AN98aGg494XtFRaVSgE8/MY+Nm/ZLh4epyUtLUtaWzulvb1LMjJzuNweh/0c
G7L3kasfHh4l585fECen49w3louNS+SyyObHMugDgOMApwf/37BxC7eTk1sg
HZ09PLZo4zgwH4cOO3E7WLanZ4BjXfEMn73tLfn4YPjg4qi9SEpKlTbjPCBn
YPn4vWVs5jVoyYKYYv1GSUk5azyQ1XD79rzMrYDPIZVqWTUnNv5sy4HH67Jo
OVn0mt3vJs82eb9tG+a2l1rXuj9zOQtHn+d9Wmznvv3IveUWbGOJe6fMC5iT
pbfxgPEvNSfzdj+5zJzIknOjUqlUKpVKpXrkUn6vUqlUKpVKpVKpVE+nyO9H
x6WwoFCKCoulrbXNksGr/P6Rcl7wU/SvLy4pFy9vP/n1s8/LL375rPzS0LPP
/ZYZ9Xv3HpD4+BvsIW/2LQfHBmf18fGXF154RX75q+e47vO/fYnrgd3DTw/P
PLLR4W3PzMzlPuLjkxb2aDee9/cPkf17eJxhj/rKylppam5j/v37738sr73+
e9YEZGbm2Lz2ZeVVzNd/8aXfyc9+9q/c92+ef1He/P073AZy43NzC8nmt23f
JRcuXGauAPaH48C4GptaxdfvnOzdd4B5+8hwB0vGtrfv2C2/feFlefW1N1kf
UF1dL4NDoyua35s8nPn4yM+fvcOeB8goQBZBq3EeUH9hLvPdj9FSNwLx+jPG
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
mdvPuLkLvhcsp/573/0+Jj09yerPL3x3Iea+M9f2nzF9punqzJU/sP8A0tPS
LSe/s73TruuTJ05i9szZmPzMZPO9375tO7Zu2Yp1a9ZZvvxbb75lujvjD5hX
z5x6xh5cDQo234HHH3scK5avwN7de22czzz1DF5+8WXL9eeYN23YZP4AC95d
YHUBXpjygr3Pz5cOZwx2/9brmAkhhBBCiLtH+r0QQgghhBBCCOYjsq4v8/lY
L5u6Y1VVneUTU5Mca11UiPEOa03wsaq6DimpGbh8JRhhYVEoKCz+kMfR5s7z
rbAcXT9fP/PopmY35p8zQowH3Ivp9719KC915cRHR0ZbrvngBq7aMvS+p1f9
ju078Mbrb5iuTl2cj8zbP3H8pOW1U0/39MHc/fi4eOzYtsP89+e9Mw8LFyzE
vLnzLOf9wvkL9n3LXHj63tCz/vHfPW516l95+RW8+cabmPraVOtvxvQZLn9/
n/PIz803/356B3Bh/AHz7Lds3oIXX3jJGdM8G9OK5StNf+e8Duw7YLo8twkJ
DrXPArbBeL2jR47iuT88h5XO9sePnbDPi5nTZ9qY35nzDubPm299b9q4ydn2
GDau34jVq1ab1s/PFXrr98vXQwghhBDiniP9XgghhBBCCCEEod7AnL7kpFRE
RsagoqIGddLvhbgtGhtbkJ2Tj+DgMNPwc3MLPtT+Xfp9i/lysxY3a15fK7hm
Ot9Yf8YIMa5w686sM19bU2dxLz3dPRhY3P763IZ59bXVtSgpLkFaarrVf8/O
yjEfet5XZRsD9Sncj8xNZx0L1z5pVseCXhjFRcVWm57aPe99dnZ0Ws17xhEQ
1rooLXHB56w9Tz981qPv9tLubXH6YXwB1zPnPzY6FrExsdYfY3iYn88xVFdV
2/g5R34W9PUO9svx8POiqrLKxkUP/pzsXGsnxmkvMz3TxsH/H7A91g9gmx3t
HRb/wDHwUfdxhRBCCCHuHdLvhRBCCCGEEGKC4r30u+6/8358enomwsOjUHit
BDU19S7//FG5gZZ4w/2EeNhwa+ctHcjJLUBAwBUcOXpiwMvCtH1nO8bDGPei
z1Guu/q6BsvTjYmOQdCVqygtKR3Q2YQQQ6EeTi2dufYD2viwbXj9cBvm2FMD
Z236tpY208Cp+Y+Ug06NnLq+a58WNDc22yN1fdc+/a7+uZ3zurOjy9obDvV5
6vau8fUP9uEeJ/fneo6HvviE/dh+Tv8cA9d75uiJL/D0y/FwjF2dXfaajx6P
fd6fZQ0BmyfbMbrteV9v/10ddyGEEEIIMTrS74UQQgghhBBiguK9OK/5G4z3
7rOzcxEWHoXUtEyUV1S7dEaP9jgCo+Yhj7K9EA8r/Ltvbeu02Jfg4HDT78PD
o1FSUn7f+hvpuquqrEZGWgYiwiPME7yqomogj1gIIYQQQgghxPhG+r0QQggh
hBBCTHDgeuRvMHroF+RfQ0REDMIjok2HbGhsQXNLu+UX36qGKP1eTER4jVC/
Z9xLYmIKfC/4IyIyBgUFRUO2udH1dFv9jXDd8Xql7za9ukNDQpGWkob6unrV
qBZCCCGEEEKIBwTp90IIIYQQDwDe99w9y1iPSQjxUDD8dxf9cMtKKxAbmwj/
S5eRnZ2Puvom6fdC3ASPnz2vlerqeufaycMl5xoKDYtElvOcvvq8hqive/zz
77rPkfT7hmYU5BciJioG4aHhpuWzLoYt4+AzRwghhBBCCCHEjZF+L4QQQggx
vhnwuwUGH+G1nvmyPb2qQymEuCOGe2rzdW1tPVJSM3Dm7Hmkp2ehrq4JLa0d
o2ry0u+FcGv3ze2m49fWNqCgoBgBgUEIuhqKtLRMu4a4/l73OZz6+iZkZ+Ug
KiLKvPObGpvs3o8t4+AzRwghhBBCCCHEjZF+L4QQQggxvukbrt8Pg1obtfvO
jk7T8cd6vEKIB4vhv7v4uqWlDTk5+Thx8gySk9NQXVPvvHeb+ff3wBtciAcJ
T+49n9OzoqioDAEBQbh4MRDRMfGob2geyNG/V/EtvM6GXneu2IG01HRERkQi
IT4BXZ3drusbY/95I8S4AcOeY9h7d9rmaG3cbduj9XWjdu91n0IIIYQQ4kND
+v09wBb3i+vW9Q9Z7aLfzbD3Od8HZc5CCCGE+PDBTdarrq0Q4h7R2dmDouIy
nDt3AbFxiSguLkcjPb/HgUYqxHjF6tp7afilpRW46B+Iw0eO4+xZX+TnX7NY
GI/mfi/7pic/22WMQHl5FeJi4xEZHom0lDR0d3VjYBkHny9CjDmeZfhr3EYb
xPm/N+9dDty/vFEb7vfN86YPN+Z25jBan3c6JyGEEEIIMS6Qfn8PsMX94rp1
/UNWu+iH9HshhBBCCCHEeKWnuw+VVbW4GhyGyMgYZGbmora20VW3exzopEKM
Rzz++Yx14bXCaygmNgE+Pr44e/a81aSoqKgZyMG/Z303Dur3tXWNFnsTHRWD
2Jg45Ofmu/R7XtsY+88WIcYLvOfY3dXjfN/1ujR1z3Kr+zv7dHd2u+tX9bne
v1EbcO3T1dGFXk+ft6nh9/X0oauzC+1t7dav3TcdTe/vg82N/XGc/X03GZ8Q
QgghhBhXSL+/B3gvo60b6zEKIYQQQgghxC3S29tvebz0zg8JjUBsbCIqK2vs
vbHWSIUYr3jy6nmdkJraBuTmFSIoKATnzvshMjIWJSUV7m3vUb9u7b6hocX6
Zn5/Xv41hIeFIzkpGZUVlejp7nFd2xj7zxYhxgPU21tbWpGfl4/K8kp0tHe4
9O3baMP2z823a6ytpc31vmcZaR9naW1uRdG1IlSUV9jz283Db2psQm52Li4H
XEZ2ZjYa6hsHYweGQd2+rKTM5lheWm4xAwNjHAfnQAghhBBC3Bjp90IIIYQQ
QgghvKGO0dbehZKScly+EowrQSEoKa1AXV3jmGukQoxb3Fq6R79nLjzz7aNj
4uF7wd+89AsKiga2uxd9Urf39Ef9njn/GRnZCLpyFVkZWZany5xd1dgRYhBq
28VFxdi7Zx+CrwajtqYWvT29t9UGdfh9e/cjJNj5fiwqufk15ixFhUXwOetj
+nthfuHN9fthbeZk52LXzl34ySM/wcb1G5GSnOoa9wh919XUwf+iP44fPW5z
dMUouAcyDs6BEEIIIYS4MdLvhRBCCCGEEEIMp7un33KEw8KjcOVKMPILiiyf
eMw1UiHGMZZXP5AT79LVk1PS4X/pMnzOXUB2dj7q65vvWf49NXtvL37G2SQl
pSIsNNz0wZt6bAsxAaGffElxCXbv2mOxLtTvbzf/nnntmzduhv/FSyjILxjU
xjHKPs6Sl5OHQwcP4ZzPOdPib0m/9xpXemo6Vq1Yhb/+5F/jid89gb179qK8
rNziEYb3V1NVgzOnzzpz3A2/C35obmoe9OIQQgghhBDjHun3QgghhBBCCCGG
4Cx9fUBHZw/i4pNwNTgM6RnZltvr0Qz52OCu8029UogJT5PLQ39AX290vc7I
yMGlS5dx8OBRxMYloqy8auh2w7mNPnktNje322Ot268/OjoOcbHxKCstG8y9
v0FNbSE+VDxLn+ueJDVl84DvG7YertfMLyfchjXj+TfNuBTWgacO74HbDLmP
SFt59/Z89N63s6PT9O3AgECkpqSiuallyH6ucfXatt1drhr3fG3Xk3s76u/r
1qyD7zlf87T3bNvNbd1Y3574GWfJycrBvj37cPrUGWRlZts60ueMjf72Npeu
QaxPr2OTkpSCpYuX4q8+/gn88Ac/xPy58xESHIrqqurrtPnqymqcPHES27du
t3iB5ka3fu9uy/p0jhnfMzzjtvPRP3g++lz1Bnrd8+d6zzH3jI+xD/19rnNl
Y+90HTPXeeu/7m+g3z3fHq9jxf2G/B24+/buf8gxdsZhNQGGf655/e0IIYQQ
QjzISL8XQgghhBBCCDEEPjiPXd19yMjMQURENGJiE1BaVonGxhbTCxs9PuH1
TQM6vhATnZH0+OycfAQEXMHWrR/gkvOY47y+UU79bffpjhNgXEBKSgaCQ8KR
npaB2uragdrYLn2tf+w/W4RwL7wf2dLUYj7vrS1tps16r+fCv9mGugar897W
2m66e6PzvKKswu4d0sOenvSkvq7e1ve7NV9qx6wfweuA9enb2zps33JnX77H
vumhX1db7/apgOnKne2dNibmtTNHn9743K6qospy2D2adHZWDtauWWt++IwB
YJvF14qdMRWjtLgUpSVl1h/jDDzXXnZWNvbt3Yczbv2e7fS5++S2rFfPuBvP
Y11tnc2h362BJyUmYfXK1fjWN76Fnz36M7zy8ivYsH6D6frU573jdDz6/Ta3
ft/a3GrHnOs4Bx4TjrmstNzGWlpSas+rKqtsHfVx9svcfrbN48tjxnZ5XDjX
SueYNDU0Oce9y+ZQ7xzLEmfuPF48Rxx/W2vbkNoE/Ezi+WbMAedo/Tr983iz
fU8cgndcA8dTw7E629k5cSh3xlpTXWPHd4iGP/DHI4QQQgjxYCP9XgghhBBC
CCHEENwPvOVeXFKO+IRky8G/dq3E9HqPxujJOR5rzVSI8cJIejzjXhITU3Dy
5FlcvhJsXhb3Sr9nDI3161yLRUWliI1NtFiB/LwC0xr7vXNflX8vxgNwPbIe
O3Xnixcumv5N7df+Xt3reU+wtaUVF/38EXQlCLk5uab3Xrp4CatXrcHrr76O
mdNnYsb0GZj+9nSc9zlv9zY9OfLMAec+WzZvRVxMHDLSM3D+3HmsWrkKJ4+f
RH5uPi75X3L6Thu4Vpoam2xM+/fux7vzF2D6tOmYOWMmpr7+hnnlh4dFoL6u
wXLALf9+7fs4fOgwzpw+gyOHjmDWzFl4+6238c6cd/DuvHdtbhXlFfAs2ZnZ
2LN7L06dPIWsjCzTsjnewoJCZ54XsXLFSix8dyHmvTMPCxe8hxPHT5hnPvVr
Ho/EhERs3bIVU56bgvlO+7NmzMLvn/g99u87YHP1Ps6j6feEerzNc9/+gXZm
z5yNxYsW44PtHyAhPtHiGhgPwToBoSGhNhf6ehw8cBBLFi3BnFlzsGH9Rht3
gfN5w3iEkydOOeNeaPNfs3oNThw7YceX9509XgM8xlGR0di+bYfNde47c/He
wvewccNGREZEWUyB57OK54R/A2lOG4cOHMKi9xZh7py5dk7eW7jIOZZ7kJeb
Z7EZA94IGPwbE0IIIYR4kJF+L4QQQgghhBBiCHzod+n3rNWdmZmLgMAgyyOu
rq5zaYce3VD6vRADjKTH19Y1Ij+/CIGXr9p1lJCYYtePJ/7lbvPvGxparI+s
7DyER0RbjADzYpk3e7s1vYW4r3gW53l7azvCQsJML6bOTP2ZujjXUbdl3jbr
yjPf/MC+A6bBU8+mZr5k8RJs3LAJe3btwY5tO0yT/2DHTtN/W03rdsUHREdF
Y/Kkydi4fiOOHD5qffE5tWhq6bt37kbw1WDU1tRa38lJyTh44BDmz5uPNavW
mMbMGvObNm4yfZm166lTU++n/r50yTK8M/sdrFi+0sa4bcs27Pxgp7F0yVIb
4wXfC6iuqnFp/lk51t7pU6etHerjzNdnnfoN72/A1s1bTVMn27dtt9iD0ydP
O+NKMY//WOcY7HDmMO3taTaWA/sPOM+nY+rrU01XZ+68xyOffgGMUxiu3zPH
nbEM9NXnuOkhwJgCHkuOn7q7zxkfG2tHW4cdk7Vr1uG1V1/DsSPHrE32zWO3
ZfMWbN602Tn2H9g4GZdw6OBhm+OO7Tus750f7HLObZ7l51O7vxJ4xc4DYzD2
Ov3Sj2CXsw3jIzjv0OBQ81zg8eLxYa4957bd2tppsQpsk38HjBWglwG9EBiv
MfA3NtZ/50IIIYQQ9wDp90IIIYQQQgghhuAs/DnW0wN0dHTjWlEpAgOvIjU1
E6WlFS7ffOr3DWOvlwoxnhhJj2dt+vLyKkRExsD3gj9CQiNQWVlr19Dd6vfc
np4Y5RXVSExMtbap4Q/k3ku/F+MJz9Lv0tcjwyOxdcs2qyMfEx3jzjOH1Ten
P3rQ5SBMe2uaacHU+qlVM6+dOe+8j0m9mt75kRGRppUzD54+7PTDZ1tXLl/B
97/7fUx5fgpWLF+BfXv3m17PWAHmbVOX9vP1s3boU89a9tS0Fy1cZDnn9M6n
Rzv7OnXiFNa/v95pM8j6YE44c/R/99jjlg9+OfCK5aFze2rO/hcvWT79Sqe9
8NBw8xegzszc/rOnz1r8QEN9g7PfZduGsQBRkVHmEc/xZKRlmKbOuIEjh4/Y
vdLwsHDTyqdPm2HHJiU51WIfnnj8CcyYPtMZc5jVGqCGX1leOaJ+z7Y5VvoE
rF+3HhHhEeZlX1lRifjYeIsPIJy/xQxEx2Lqa1Pxve9+z3R2egDQU4DHIMA/
AMuXLsekZybbsYkIi7D5M3aAsRPc/sUXXkJIcIjTb7Udc+baz5s732IAeFzZ
L2MF/P387XxwvEkJSXavmveG+Zw+C7udY5GWmm7j5zGizr9i2Qq8v+59XA26
avFKY/73LYQQQghxD5F+L4QQQgghhBBiCIMP6O7us7ra1ATj4pKQm1uI2tqG
Qa2yUfn3QngYTb+vqKhBVHQcjh47idNnzpmHflV13d3n3zc0mydG4bUSaz8s
PAopKenmJ20XsfR7Md5wL7wfyRrqAZcCTOemrk492zzTm1sRGxNrmvCCdxda
3j018JdeeMk07dzsXPNV53bUxfNy8y0fm/nZifGJlmPe0tyCwEuB+MbXvoHn
n3seu3ftNi/6mqoa84+/VnAN769bb/789JpnW/TgZz444wqof9MDgLo+YwE4
zrWr15r+zvz1pMRk09xff+1187RnzXePhkz9nDo28+xXr1ptGjzz7dNS03Bg
/0H4nPUxLZr3YqnHU4Om13xdTZ2NjR4CvFcbFhpm/gKMKWD8Aueza+cuy7+/
GhRsOvq1wiJs2bQF8+bOs1x69sO5jKbfl5dVmH7/vnO8WIuAx8Pm2NpudTcY
p8B4AubaF10rMp2cfvmcJ/V5av2cH2va8zjQM+CpJ5+2XPrM9EyLnaCXfWlJ
mZ23n//s56bVMzaA8RRP/v4pO248h5wjz6Odw5w80+gZD0DvAZ4favX8u2CM
BI8xj1dTQ5Od35LiUvub4PHksWHMh+4jCyGEEOJhQvq9EEIIIYQQQjzkeC/D
3xv+um/o675eoK62EakpGQgNiUBSYioqK2ss57epscWh1fn91nLLKGdfPMw0
jgD1+5qaBmRm5eK870WcPeuLmNgEVDjXUZOXZj/gazFS2ze4piorapCdlYfw
sCjExyWhrLQSXR3dLu/8Pq/rXFq+GA94Fufvkfo4NeDly1bg6OGjpq/3dPei
sb4Rvud98cpLr5gXe0J8gt23PH/O1zRk1lSnvs8cdPq20/f9hSkvYMnipabp
UuOlV7vfBT986Qtfslrp0ZHRdv+zq7MbHe2d1h7rt5uGXV1j7zMPPC42znT2
5MRky4e/HHDZ6fe81Wqf8vwL2LZ1m9N/quW+M1+c2jw94VkPoK/XPUHngX7u
zJen7sx885ioGJsHvQN8zp6z1zHRsa589HfmWTvBQcGmywdfDTHdmsdk8aIl
mD5tOs45+3D+Lv1+uq2vq60zLTvMmTM9DN564y2LDaAnQUVZhfnZU7/ne8yl
7+vtQ0tzq7umfZgdw1RnHjymjE+gjz79Dt5+8217zuPB8VBP37RhE0qLS83T
3nMu6TfA+XA8zJ+nZ4LnHHNsjI14/HePW3wBYxmo8f/2N49h1oxZdm6CrgRZ
bn7QlatWZ4C1Et54/Q288vKrlnfP88J4DL43a+YsixWgdwHjGlKSU2x89ANg
DQLObcz/toUQQggh7iHS74UQQgghhBDiIcd76YPpI02NzZZ3R59b3te3usPO
OubN9fcO7kcNsLW5HdcKinEl8CqiImJMH6Sm39TQgubGVnu8VRql34sJhsvj
vhmlZZUICQnHBb9L5nNf6lxHHo2f+jy3YVzMiG2Mdj05+5Q77SQnpSE8NBKZ
6dlob+1Ebw+GxuL0Qfq9GJdUlFcO1Jf3u3ARXZ1d5o/OevJPPvGk5WwzZ5x5
39S/qfkyn5ye8vTDp6a7ZPESPP3U01gwfwGuXrlq9zmp3zMG4LOf+az5wVPP
9txnZJ4887up3/u79Xvq7dSnmSdOLZp56IcPHrZ8e+aFv/Xm23jmqWdMi6bm
TY2f46ZGzhgEtms1KzgvLs71lpKUYpr1W2++ZR7vrBFw9MhR0+KpW1Mz57qp
r7+B9xa8Z9vSJ4C15fnIuS16b7HVDKDPv+/5C+ZJz/x7av30K2AuPL3smetO
T/xF7y2yeAJ69TO2gdo79Xt+5/P7nbn2rAvA2ALO88zps1Zfnn3TK4BxEKx1
Ty8D5tPzeB48cMgZ9zHzIfA+d4wTYM0CHn/GR9TXNcCz8L4uz9Vzzz6HNavW
uGver8bjjz1uejxrIrCOPY8t58r1y5ctx4xpM5zjMRVJiUl2DnlO9u/bj2VL
l1u9+9VOW/QkOH7shOn+yUnJ5jXAuY3137IQQgghxL1E+r0QQgghhBBCPOR4
Lb2m3TchPi7e8t94X595hKxNy7w6ahi93X2u3F3u3gt0tnejtrre9PuwkAgU
F5XZa2qH0u+FuDnMq6+rc667+GQEBAYh0KGwsNh5r9HWe+fgj7T/aPp9g9Nm
8bVSi6sh1wpLMOIy1p9BQoxCfV295aMvW7LMtObO9k7Lqd6yeQtefukVqzNP
XZhaMn3m58yaY/ns1H8v+PqZbhwbE2e10Om3T83YPNabW3HxwkV87u8+h4P7
D9q9T0+f1O8LCwrNQ57bsAY7vxepe69buw5vTn0Ty5YuM292+sfnZOdY3veq
Fass/z45KcX0e2r5F85fMO93tmv6vSdOxnmknwC1Z+rRgQGXnWs0ynzpqd9T
F+e+r778qunZSxcvdbY9YP791NJZJ4AxDIcOHDKNnG1Rs6euzvx47m/1Bvpc
3+uMIeDxo189fQgCLgVabAF1ccY7cH6M06PnPufJnH8eS2rrzKFnPAG9C44f
PW6xBIwh8NbvOW567HufO+a9+5zxMc97+hbYMXYv3vo96yNs3rTZ5vj0U89g
xvQZ2OW0v2f3Hsvz53z37tlncz9y6IgdF46TXvy9bj8G5vpzfIzZWLxoMd58
403L06cvQJTzN8C/mz5P/IT7+N8y4+A6EEIIIYQYjvR7IYQQQgghhHjI8Vp4
/762utY8eF9/9XVMenqS3Utnfd3t23aYVhByNRT5uYWmGVK77+7stRz8uNhE
y/FNSUqznF9qh9LvhbgxlmPv9snPzslHqHMN+Zy7gITEFJSUVgxo957tRmxj
lOuppqoOOVl5CLocjMR45qFWuy70Ua7/Mf8sEmIY9NCnHr7cnV+dlZllue/0
nf9gx04UXytGYX6h6cRTnptiNehZB5551wX5BSgrLTM/eOrQ69etx5XLQXaf
s7mp2fL5v/D5L5h+T63b06fl3xcWWc4//fPZR0ZaBrZv3W454Mw1p56d7rxX
WlLqfNc14HLgZdP7mXPP3HB6+G9Yv8H0dOrKHe0dgzngcPVDTZv6Of3iuU1c
TJzp0+d8zpuWzxz4+fPeNX37xLETTn/pFhfAmAV69NNfP8A/wPz701LTLYd/
iH7vjMvjG0+Nm94BjDuYO2cu5s116fNsm/szpoHbM96Bmvf8ufNNN+c4qNPT
+55xCNTOqd/Ts4Bjof8B8/OPHT1uufvemrfp92d9LHYiPi7B+vAs3vo96wxQ
d2fePGsQMEaCvvicJ+MS6GdAb4XAgECL5fA95+sc9zLU1tSZT0JSYrKdY/oy
ZGZkIiI80rZhjMMbU9+wY8JtPT5Cdg6k3wshhBDiAUf6vRBCCCGEEEJMAOB6
ZH499Xtq9byv/tOf/BSP/PgRPPJvj9jz//z1f+LtN6dh88atuHD+ommD1Ak7
2rqQl1OA6MhYy8Gnn359bSNamtqk3wtxE6jLNzW3obikHFFRcThy9AT8L11G
RkaOy1+fefc3uDZG0+8ZR5OakoHAgCBkOW011DUPXOtD/PMx+BkgxHiCdeep
kdMrfvas2aYVL12y1PLvWX++tqbW9F3q4Kylzhx1arus+8J8cHrHxEbHYu47
88zHnZ7wzNenlsz8/C98/otu/d6dG259dpn3u0e/pzZMfZ3a/aqVqy2egJ7s
Lc0taG1pM22bmv7cd+Za/AB1cmr49IOnRs48+arKKvt+ZfvMw3fFD/iZZwD1
aurxyYnJFiPH/Hvun2GeAuudPldZfjvr2TDOgPtSj2eMAmveHzt6zOILGFPA
2Dv65FO/5zw9MQO8v0sNmxr4yuUrMemZSfjRD35k8XnUutkm58Tnc2bPsWPM
PHzWqW9tbnW+y1ssh58xE9OnTXeOzSbzQaBvAM/J8WPHLUaBnyv93vo98++X
Mf8+3u7lehZv/X7zxs0Ws8C+n3/ueaxxjiH9/Tl+HmM+Fl0rwlmnrQP7D9g5
YU2ASud4JCUkWQ0DxhnQq6G1pdXGzHPGeIbJk551+l9h2/JvqV96vBBCCCEe
EqTfCyGEEEIIIcQEoQ9WK5d1cJm/uG7NOqtz++hPH7UcxT//sz/HRz/yUXzq
E3+Nb3/zHzHpmT/g1Mmz5s/t8dBPSkiBv18AcrLz7bX0eyFuDer0lVW1iItP
wv4Dh3Hg4BFERMa46t7TX7++yRhxX6/rZ+BacvZjHA3z7q9eCUFJUZnF2Yz5
54wQtwH90etq683jfcG7C/DspGfxzNPPYPOmLVaXntoyc7XpVc/68ydPnES9
sz1zwak5My+dXu/cj57qRw4fMR2cmjDrxX+R+v2Bg0O83ZmnzbzutWvW4oLv
BeTm5CL4aoh5ADCHn17t1NHpDVBXU2ce+gvfXYgnf/+U5aaHhYaZZ/vi9xbj
d4/9zurTs9Y9Y+M8+jL1+W1btmHF8hWW/84YAOr1zEOnHz7zyKk5Hz54GPPn
zTfNnZo250xNm21c9PN31YnfsdPGGBEegV0f7MJbb7xl2jj1bOr3nvun/H6n
7/yJ4yfwh2f/gL/4H//TeXwO533O21yoiZ8+edr0f8YMsD2Ol+voY3DR7yJe
f+11lybuHIsQZ96sL0BNnf4AHe2dgznrgGnunAvjJmKiYlweB+6Fx5u5+5Mn
TbbYC/bFWj0vTHkB78x5x2rX8zzxHDJGg/EJrG1Pv4DI8Eg77jzP9DCY/vZ0
i9ugZs/t+X+Y0uJSa/PFKS9aPEBNVY357SufXgghhBAPC9LvhRBCCCGEEOIh
x3vpd/0OZK4ga/rGx8Xj0MFDmPTMZPzVx/4Kf/R//RH+6P/+Y/zlX3wc3/3n
7+PokRPm0c174l0dPZaPf+lioOn41AvpoU8d8Va5UY6xEA80Da769SPBddTv
qc/TQ/+ifyCOHj2J4JBwlJVX2fv1N9Hvef3Ue11vvC7TUzOt7n1keDRqquvR
290v/Uo8UDBfmnnr+XkFpnf/7ac/g1//6tfmjc7cd2qyFWUV5tPOfPJXXnrF
cvWZk00te8P7G8x3n7rzU79/Ci++8JL51NNrndrz//mH/2MaOfV8z8L8+9zs
XLwz+x3T++nDTy2a+vGrr7xmfvCsz87a9cxHZ/48NeeXnLafeXqSvX/29FnM
njkbrznbz3HaYbwBPeeZH79x/UannVedcb1n9eQZK9DR1mE+9fS+YZ/05mc+
e3Zmtunzs5y2GCNA3wHGI/Bx5vSZFmPgqnXfaBo522ZuPbV2xj2w5jvvn/I4
0kufc6PvPX3+v/XNb1mN+NOnTlv+fUtzq3kAsBb9L//jl5j21jSrO0993mIN
nHnPnDHL/j/A+jr0vaf2znX0AKDO3+/l65Gfm2/1AN6ZMxcx0TFDYiSo5dP/
4Kc/edR8Dvh/DcY3MF+fMQ2cL3386X3P9pcsXopFCxdZe/z/CefBeAGem/Xv
r8dSZz1jDvfu2Yt9zphZX2HZkmVWNyHgUqDFeTB+QfeShRBCCPGwIP1eCCGE
EEIIIR5yvBb+zqJWwry9nKwcq+lLb9vfPfY4PvmJT+Ij//Ujpt//j//2P/GD
7/0IPmfOW4492+nrhWn29M+nZpibU4DamgbT8Buozd8K1DLHWmcV4n4winbv
0u+bTb8nrHkfG5uIc+f8cCUoBNnZ+aipbXDFtoxyfXj0e0+8DGtXlBSVIy4m
ARFhUUhPy0JzYyv6nWtU+r144HAW6q/Mp2Y9c34nRUZEmnbP76z21nbLXadP
OzV21qmnrrx7124c2H/QNHLqvtSlqRUzl5v52KyvvmTREkRHRVueuacvT546
PeHp0c9cb2rb9KXZvm279e9pf9/efeZtz22Zx09feX5v0s/96JGj1veJ4ydx
0oE54nt277Hxcazchx74bJt58sxxp2d9pLMvn1N7Z649x8cYgy2bt1rcAPVp
Tzv04Oc9W+rZebn5ptvzfdaEZ7s2J7envUdb53w4vtUrV1vtANYXoF8Bj2d1
VbUdZx6XlStWWQwEYyUYk8BjyHkwZoHjYB6//0V/XPIPsDF3evLv3Qvb4vFj
bj5z49mHZ2HsBb3vWWMgwNmf8RGcQ2F+ocVVcK7U7jlPwnGcOXXGfAu6zQe/
345ZQ10DQq6G2DlgbATHSnhu+Eh/f8Z+0FOB8Qv6/BNCCCHEw4L0eyGEEEII
IYR4yHEv/I3V1tJmvrPxcQl2r37GtBl47LeP4Z/+8Z/x+c9+Hp/77Ofw8Y99
Ap/59GfxxO+eNF9ueueznb4eWM5vanI6QoPDLfe3qrJW+r0Q5Ab6fb1bv29q
bkN1TT1ycwsQdDUUgZevIjYu0Xz12Qa3GbntliE+FtXOdUcvjLDQSIulqSir
cl2n0q7Eg4Z78dSMp3d9WWk5mhubB7bhOmrDxdeKTd8NDQmzOu/UqFmznVo4
veF5b5P703ed+e7U7FmjvamhyXz6vfvq7Oh0vr+qrU+u82jF1KGZS87a6vSP
53cl26T/PX0ACvILzfedueTslxp2RXml6dLMbWeOPPX4lOQUlJaUmt+7xSHY
HDosroC56ezfMz+OoaS4xPlOTUd8bDxiY2JtnvTM5/ZdHV02vmanrcqKStuW
900Zh+CaEAavfWdhf5wzjxfHwOPBOXIMnho6WZnZzjhjTBsnjDNgrjvnWFJU
Ynp7cVGxveb8ON/ent4h58zacvphLATjL3iPeXBdr9OPaww1zr6m7Tv7djpz
4fFj/QDOlcc6IT7BagewH/4fZWBO/a76Cow3LCwotDGGh4Zb/QLuRz+DSvc+
uocshBBCiIcN6fdCCCGEEEIIMQFwFuYw5mTnDuj2j/z4J/hff/2/8KlPfArf
+Po38dvf/BbPP/c8fvrIo/jXH/4Ys2fNRVxsovnmUxvo6WauYDtKi8stBz/R
7aFfL/1eiJvq965tWlBb14jyimrT7QMDg3D5cjCKS8ptf+r7I7Xd2DhY876u
ttGuQV6bQc6+8c5jR3u3+WOM+eeMEHeK2/+d2jO1X8uldq+z3HLTnntNq6X+
zZrpzF2ntk1dmVBPHvBQh2vfIW15L/2uNqmLe2rI8x4p87iZZ857pdSfGQfA
Mdl2HB/7cF5zO8v5dt4f2K+j02IGqLO7xtXn9rbvH5iHpz/vPHauo07Nfvk9
Teit79H9PcfH2up147lniqHH0dOf53hxvDw2A/u68/Q5Pubv8/4rYyU8/bmO
l+u4uF73uNtwD9g9Du++Pe1fd4z7XPedB+YwsD19/rttnjyffBzInx8+pz7X
sTE/fedccMw879yPx9sTl2DHU/FLQgghhHiIkH4vhBBCCCGEEA83vLfNurXM
cWPt3Sd//6TVxf3Mpz+Dz/ztZ/DspGethiz9a9964y38+89/gd/8+jHs3b0f
eTkFrprabMvu+fegtroeMVFxiI2OR3ZWnnl5S78XE56b5d97bcs69ykp6fD1
9ceRI8eRmJSKiopqNI+i39t1wzgZB3pe5OcWIjw00ureMw9/oO69NCzxIIJR
ng/fhk+d7zNqtpZP3zfC9sOXm7XpPPZ7Xzvu66fXo7OPsF//cA3buzv6vvf2
DXtzlOfe4/Lo832D9exHHPtI8+sf2s6Icx3h84E6PbX3gXkOb9d7DMPfHzbF
21q8j2Vv/6jxFSONf0j8Qh+un/do+wshhBBCPGBIvxdCCCGEEEKIB5jhi/Oe
5d119aCxvtG88umTSy9f1rKdPXM2/vmf/hnf/ua38aMf/giTn5kMn7M+Vi+Y
NXJffflVPPqTn+EPk6dYjj398vsHbYfNQ7+lqc3ZPgvRkbGW+0sv7/rapgFv
75vq91bnW4iHixtp9y793uWNbz76DlnZefDzC8CevQfMS7+gsNiVf+8V4zKg
+ze4at5Tvy8rqbDaFcFXw6yWRVVFzWDde68a2EI8EIy03GibG713o22dx+s0
3/sx9tHm4v3a6/l1ev3t9nkH4+6/WdzDrRz/m41ppGWkfTzjudncbqGdm45T
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
+XvLJf/6176O1199Hdu2bkdocCiqK6utFrynnYlAV2cXiq8V44KvH6Y8NwXf
+sa3TL///RNPOsdlG8JCwhB05SpemPKC5eN/+UtfxvGjx6Xfi4mL+/Olva0D
CfGJeOJ3T+CTn/gkXnzhRfhduGiaPmtMULf/1je/hS9+4YuYPGkyDuw/gLzc
fHR2dKGvt9/V1vBlrOcmhBBCCCGEEOKOkX4vhBBCCCGEmOj0e+ewemq5e57D
vU1vPzo7OpGclIzFixZbLffv/st38dhvHsO7899F4KVAZGVm/f/s3Qd0VFeW
L/w3Pf3NNzNvffP19Ew/j9sd3G27nQh22wYnHHACjI0xttvgSAaTweScRTQ5
5wxC5KwsEYQCoIAyQTnnHP/v7l2BUiHZYANVSP+z1m+pVOHWDRVO3X32PsjO
ytE4v+1jGzMd11BeqfPd7965Gz2690TLFi3RvFlzdOncBRvWb8ClC5c0tu/n
44c+vfug1fOt8M7b7+LQwcPIMfaXo7eByGGMVl5qfK5cDEXPHj3xxONPom+f
vvBw90BKciquxF/V95Xk5Et9D3lvffnFl1izeg2iI6ORl5OHqspq04Jslunw
7SIiIiIiIqKfjfF7IiIiIiIiM4nbV9dq7nxZabmhTGvCW2L6kmMedikMSxcv
1TzYeXPm4eiRo4iJjkVBfsGNOJqlOXp77gGp452fm4+DBw6iV89e+M/f/Ba/
f/AhtG/XHosWLkJ4aLj+5szNyYW/nz+GDx2OTh92wqABg+Dr46uPbUr7i8jK
3GT8S1RkNCaOn2i8bzpg5IiR8PHyMd4zpti81Ms/eOAQhg4ZqvX1H/7zw3i/
w/vYvGkzQo3PI3kPyedWrW0uvqO3jYiIiIiIiH42xu+JiIiIiKhJszS5XGOK
pWVlZCEyIlLzxpMTk1FWUqa31xi/n7KzshEWGgZvL29EXY7S+1aUVZh+v8Bu
eU2A7BvJvZ8xfabW+P7X//df8XHnj7Fi2QrdfznZuTruQWqEJ1xPgPspD+zd
sxenTp7S/y37lqjJMTcZI5SVmaXjW/a67oWnhxeuxl9FSXGJ3i71PJKTko33
jjsG9B+AFs1b4g8P/UHfZytXrMTFkIsoKiy2jjWynfeDiIiIiIiI7j+M3xMR
ERERUZMEm8s10Hz7tJQ0nYfabe8+TJwwCWPHjIW3p7fG1ixNcvML8wt13vaS
ohLNP7+pOXrb7tT+uYVtkhoFCdcSsH7degwZNATdv+muecESu5fa3hK7lzm6
JbZYXFiM9NR0JCUk6V+JT8pvUodvK5EjmJvE22Uu+yzjM0XGC2WkZZji8TZ1
8WWMUKrx+ST1PsaMGoO333oHzZu1QMcOHTFtyjQEBgQi3XicvN8cvl1ERERE
RET0izB+T0RERERETQbqXpaYcklxqcbiIy9Hag34WTNn4Zuvv8Vzf38Ob7z+
JvbsdkVKUgpuavbLre/6+91PbJf8ZpN4oeTYnz93HsePHde6BFLvW/arxO1h
kwtsre9NRLcHN+p/+Pn6YfbM2Xip9Uv40x/+pH/nzpmLM6fP3Bhr5Oj1JSIi
IiIiop+N8XsiIiIiImoSbJv5Osmfj4+7gpPHT2r8q3OnzvjjH/6If/+3/41H
/voIvvrya3h5eiMzI9P0+6Sp1aWur8n1NSaWvPqqyioUGL/hcrJzUFhQqPW+
b6rhbX6Mw7eJ6H4kZSqM91tNdQ1ys3MReD4ILrNddJzRb//zv/Dcs89hwbwF
CL0UyvcZERERERHRfY7xeyIiIiIiahJsm/m6lOQUuO52xZdffIlXXnoFLZu3
xAvPvYBPu3yKyZOmYL/bfiReT0RpSanj198R+8rmOokd5ufm40rcFVy6GKq1
vGX8g+QEy20Sw6+qqNL4oiV+WFtzA+P3RL+ApRmX5X0mtfaDzgdp7fxOH3RC
m1dfw/y583Ex5KL1fkRERERERHR/YvyeiIiIiIiaDNtm/H/tyjWsWb0Wb7V9
Cy+9+BI++vAjnVt6145dCAkKQXpaus5L3eTqvtvsI0uN/NycPM353bhhE2bO
mImTJ04i4XqixhKtcXm7/QvG74nuDNtWazqXU1xYjHNnA/QzbOSIkdizaw9i
Y+Ks9yEiIiIiIqL7E+P3RERERETUqNnUna6xxOFhuj4pMRmHDx3GhHETsHD+
Qhw6eAgx0bHIy83XfHLL/Ry+DfeaTZP8eqnXHRYahkULF6FD+/fx6COP6T47
e+YsykrL6j6mnmVYjkOT3JdEd4Jts7musrwSGekZuHTxEhITElFUUHTjdvN7
rpbvPSIiIiIiovsK4/dERERERNQo2DbzdfJ7JysjS2Nb/r7+SLiegNLiUtN9
aoCiwiKtAx8XG6e/iWSe+5LiEo3da8wLt/H8jYll043fZFKDwMfLB7NmzMJb
b76Fp554Cq++/CqWL1uB8LAIVJRV1N3/9sfD0dtC1BhYmt11pvoYlSgsKEJ5
abnxmVett1VXVut5lZSkFD3XU5hfZIrh17OMm64jIiIiIiIih2L8noiIiIiI
7muW3FJLM66T+eozM7IQGxOL48dOYI7LHIweORrHjh5HUmKSKcZlPKaqstoa
76IbpF6B7EMZ2+B+0h3Tpk7H223fRovmLfDO2+9i/Njx8PXx1di+5Oc7en2J
6AapMyLneQLOBWD7tu3YvGkLgoOCkZeTV/e+ts0J1puIiIiIiIhMGL8nIiIi
IqL7lrk2vjJ+P0gsvqykTH9TeHv5YPWq1RgyeAjefONNvNj6RSz+YTEuXQzV
2DTruTdManKnpabB18cPkyZO0tj9Q79/CO3eaweXWS4IPB+kvyNlTgJtTrDO
RGQiufdJCUlYs3oNunX9Ap90+QRLFi3RGL589umYG9vmBOtMRERERERENzB+
T0RERERE9zVzDL60pAypyakICb6AbVu2oW+fvvjbY4/j4T89jNatXkTvXr3h
uscVsdGxpvi9o9fbiZWXVWjtglUrV2u+/ZNPPIV277XH8qXLdf8WFRbrb0mO
fyByPlJXJPF6or5f3zXevw8+8KCOYZo+dToiwi+jIL/AdF/b5gTrTURERERE
RCaM3xMRERER0X3PaDLPvY+3L6ZOnoounbug9Quttd57xw4dMXrUaOzcsQuR
EZHIyc5FVUUV6jRHr7+Tkfx7mWfg8MHD+H7E9+jftz+WLl6K4KAQ5Obkar0D
a+ye+4/IqUhdDKmV7+XphSmTp6DNq6/pZ+G777yH2TNnw9f4nJT6GnXy8J1g
vYmIiIiIiMiE8XsiIiIiInIqtq2+/xu4f0pSCva6uuHTTz7Fsy2fRZtX2mDQ
gEFYt3Y9/H39kZiQiIqyClPs+VaW21RYtt8ynwBMvxML8wtxJf4KPNw9cerk
KURejkKBcZ3cpr/VbEtwO3obiKgOeZ9mZWbh3NlzmDljFtq/1x7Nm7XAqy+/
ismTpsDTwxP5ufkN19LHL3t+IiIiIiIi+vkYvyciIiIiIqdh3+xCS3ofmfO+
xpRjar3duF7yTc+fO495c+dh+rTpWLt6rcauZB5oqfeucSpHb58j1Vfr3rL7
akxzZlvrEhi3yf6qKK/QWtsFxu+zOmMf7Jfh6G0johvMTd7DEqO/HH4Zq1as
wj8+/Qce+N0DeP655zFh/ARER0ajpLikzmP0MsfmEBERERERORTj90RERERE
5DTsmv4mgOk2iUVJjP5q/FWEXgzV3w0SW5b7iLLScqSmpGoMPzgwWOe5l1rv
ZaVljN2b1ZrHPtzYwUBlRZXWJggPDUfYpTD9LVZVWVVnnIR1rIQTbAMR3QKY
/sqYnMKCQly8cBHr123AN19/gx7de2LJ4iWIMT4jS4pL6x8nRURERERERA7D
+D0RERERETkdc5O4cXlZBfJy85FwPQHeXt6aVz9t6nTsd9uPmKgYU3y+ulbv
W1FeqbGqspIyzSe/qTl6uxzNZs56ic0XFRZpjfydO3Zh4YIfsGLZCt2nUq+g
1nZ+e+4/ovuazIcRdTkKbnvdsGXzVrifdEdaapp+ZlrvZ2lOsL5ERERERERN
GeP3RERERETkdGD6K7mjGekZuBByAbt37sbgQYPRulVrPPjAgxgyaAiOHzuO
7Mxsjd9bH/dTzdHb5uj9am7lZeWIjYnF9m3b0emDTvj7s8/hg/c/gIe7BzLT
M0059/U8zuHbQEQ/rZ56GVJrQ+bCSE5K1s9Nvd7SjMs6P4b9uB1HbwcRERER
EVETxPg9ERERERE5FaPJvOsSX7ocEYl9bvsxacIkvP3W23jqyafwTItn0Pmj
zli+bAUCzwfp/M7620HCzZKHb/zGqf2xeL6jt89B+9TSZKyD5N2HXgrFsqXL
8M5b7+Dvz/4dH3b8EDNnzNQ62zLvgNYvsI0Bsn4+0f0D5r86D0atXpaaGtVV
1TrXSGVFpekuNaaxPNlZOYiKjNZzQ3m5eTwfQ0RERERE5ECM3xMRERER0T2H
Bq4zt6KCIkSEX9b5mvv17acx5lbPt0LbN9uiT+8+WL1qNc6dPYfkpBStla+1
3s1xKskbv+m3BBp4zsbIttldJ+MaJDZ36WIofljwAz7q9BH+9Mc/o9177TF9
6nR4e3ojNSVV58SWOF+tTcy+lvF7ovsHblyu896FzV+jVVVWaz6+p4cXpk2d
hvVr1+PsmbN6nkhj/HzfExERERER3XOM3xMRERER0V1XY0P+h+mv9PlrbfJD
LS0vJw/+fv4YOGCg1nWXnPt+ffphxfKV8PHyQVJCkuaM1tovl+o2u+vKyyoQ
FxOHDes26JiIP/3xT2j2dHON3Z/2P4OC/ELNu5c4v7WWNvctUeNhV1OjwvhM
CAm+AJdZLnjs0cfQoV0HzJ0zF5cuXkJWZrbOYWJ7f2ttEyIiIiIiIrprGL8n
IiIiIqJ7wVLjXv83N8mVLy0u1RiSzrdubuWl5bgSdwWbNm7ChHETNL4sc91H
R0VrbXfJGbUuxwm2zdnIuIYa+zib0WRfB5wNQO+evbWewRuvv4EJ4yfqWAmZ
8966X83LYOyeqJGxe09XllciPDRcx0a99247tGjWAq+/9jomT5wMTw9PpKWm
29TfN9U3cfg2EBERERERNXKM3xMRERER0V1lbtb4fY3pd4jkesvvkKDAIK2V
n5aSZqrXLHczbs/Lzdc52iW2HHg+UG8vKSqpE+c3LZhuUoN6ax7IOInIiEjM
mzsPI4aNgMvsOcb+PY2M9ExUlJvGUGjuPWP3RE2CzJORlpoGf19/zDE+Dzp/
1BnPP/c8Xn35VYwZNQaHDh7SOTUkzq+P4ecCERERERHRXcf4PRERERER3VXm
Jv17ye8uLSlFTlaOxu13bt+JGdNnYNnSZfDy8NK6+Zb8TrlvSXGJzm9vievb
L9O0YGqI7MMqcz18abJvc7JzERwUDF8fXx0fIcfD8ttLxk3ovPeskU3UOMHu
svFxKzXy5XNBxkktmL8QXTp3wV8e/gteefkVjBj+vc5ZIueNbno8ERERERER
3RWM3xMRERER0b0gMWH57REfFw8/Hz+t2/7m62/igd89gKefehrjx47Hlfgr
mgcOc/132xrwdWLKts0Jts3Z6FiJiiqtcSA1CyQmb91vxl+Z4172c1VlVZ39
KHn3tcyvJWqcLM32f/Nl+YwoLCjUMT0b129Et8+74Ym/PaExfJfZLki4nsBz
NERERERERPcI4/dERERERE2MOUZr62cvy7Y18L/E3SWGLL83Thw7AZdZLvi4
cxe0fqE1WjZviZdfegXffvMtNm/cjJTkVFOuve16WZZlv562z9MUNbD98juq
uKjY+I2XAC9PL/j5+iE2OvZGnn1DzbKPGb8napwszfZ/m9ulPoecHwoPi8C2
rdsxbOhwjBk9Bvvc9iErM8v02WDXbvqcJiIiIiIiol+M8XsiIiIioqal1pzX
butnx/BtWwP/S15nZkYWjh89jrFjxuLtt97GY488pnMsf9LlU0ybOg2uu10R
dilM8z81V5xx5Fvf97bHVmL3hcWIiY7Fgf0HMG7MON2/bnv3ITsrW2vp33Sc
bJfD/U7UdEkz3v8y/udq/FV4uHvA08MTsTFxKC0uNX1PWD4fdIxV7Y3zNnCC
9SciIiIiImokGL8nIiIiImpa7lj8/seazX0kHp+UkITZM2fj1VdexSN/fQTd
unbDrJmzcPDAQcTFxmmd9zpxe8aRb/8Y1Jj29dUr1+C6xxV9+/TDk088qfUN
ZK6CpMRkVJRXao5tvcevlvudqMmqqXtZzhWVFJdo3Q65LJ8bNcZf+YyReTcq
yipQaXyeOHy9iYiIiIiIGiHG74mIiIiImpZfHL9voEn/XXI0iwqLNOZjmbte
rs/NycPhQ4cxe9ZsTJo4GW573XDxwkWkpqRprqfM1W7t/zN+f+vM+0mOqezH
K/FXsXrlanzR9Qs0e6qZzl09aOBg7N+3H7nZuRp3qzUfl7oHj/udqKmqNX+G
1L2u1hSzl+vNnwkSr8/JzkFYaBgCAwK1zn5hQZGeV9LmBNtCRERERETUGDB+
T0RERETUtNyR/HvbZjy2rKQM6WkZGtcJOh+EqMhojSdLvqbcv7ysHPGx8Rrz
OR9wHsmJySix1GO2XybjyLdF9rHE0C6HX8aGdRvwRbcv0bpVazz/9+cxcMBA
7Ni+U+tfl5eW1/2NZWm1YN0DoqbMXAvf+j9s/uLG/SQfPzIiEnNc5mDM6LFY
uGAhgoNCkJmRqWOwHL4dREREREREjQTj90RERERETYvE72/yM2K28hiZT13m
W4+Pi4enuydWLF+JeXPmYdfOXUhNSUVFeYX1/pLL2WDut/3/jCH/NPO+kmOQ
eD0Ru3ftQccOHdGyRUu89uprGDZkGA4dOKS/86pl3vuG9rlleYzfEzVt5jR6
bbU2F83nZuQ8jbeXN15/7Q08/OeHtb7H4h8WI+BcALIzs01zc9iPyXL0NhER
EREREd2HGL8nIiIiImpiNNeyrvpittIft8b1YXMf+VNdiwKjz341/qrGbpYt
XYbu33bHS61fwisvvYKR349CXGy85mvWGw+2bfX9Tw0yHRfTuAv5PSc1rWNj
YrF82XI8+tdH0aF9B0yeNBnup9yRkpyi81Tf1GrtLhMRWcDmL278X1Zahtjo
WLjMdsHbb72Nx//2ON5q+xZmz5wNby8fZGVkaZ2PGvtxWo7eHiIiIiIiovsM
4/dERERERE2Mfa102xg9Grif8X+tucZydVU1MtIz4OPlo/WTe/fsjfbtOmjO
97vvvItuXb/QnMzr1xI03uPw7W0srOMtaq1jLuSy5N+np6bj+NHj6PFtDyyY
v0Bj92mpaaisqLz5uBIR3QrbZq63kpebp/OguMxyQacPP8IzLZ/RGP7wYcNx
zPgMSkpMQrn9mCFHbwcREREREdF9hvF7IiIiIqIm5lbj92bWHP1aaF6lzFsv
OffTp03Hq6+0wf/53QN47JHH8H6H9zFzxkxs37bduP08crJzNdZf3zLp9snv
I6lPrTn3FVWmWtUwHT/JwU9NToWnhyfCwyJ0Pmr+niKiX8TSjMu2dT+kpkdI
cAgWL1qCDu064M9/+jOeafGM1l0JOBugtVmsj3f0NhAREREREd2HGL8nIiIi
Impi6onfW/K67e9rra1vbnKfvJw8rF+3AZ0+6ISHfv8HvPziy+jTuw9Wr1qD
iLAIZKRnoqykzFRD2fpA+tls9mFVRRWKC4uRnpaOgvyCOsdG9nd5WbnG8uV3
ntyfdayJ6GezNPk4kc8Say2WWhQXFSMyIhJrVq/Bhx0/xNNPPo3WrV6E625X
nbejpsr2i4OIiIiIiIhuB+P3RERERERNTL3xe1NepbZaaG53RXkFCguKDIWo
rqy2Pr6kqAQe7p4653H/fv2xdMkyHDt6DJcjLmtMWXLDa+3z+h29zfczc5Na
BmkpaTh35hz27HbFGf8zyM7MNtU4MN+3wd9QPAZE9EtY5+6o1XFB8rkj55LC
w8Kxds1ajBs7DqNHjsb5gPPIz8031QeRx8EJ1p2IiIiIiOg+w/g9EREREVET
Yxtbt7nOEpuR2siSY38l/iqCAoNwIfiCznlcVVml95W/iQlJOB8QCC8PL8TH
XUFuTq7G+2st+d61puXd9Dx0e2D6K7GyjPQMeLh7YNqUaejTqw+WLFqCSxcv
aR6sJVZWY7P/rY+HE2wHEd2/YP5r/p6Qzxn5K+eTSktKERcbp3Om+Pv669wd
OoZL72P67NLvjvq+C+prjt5WIiIiIiIiJ8D4PRERERFRE2MfR7E043qpe5+e
mo5LFy5h5/admDJpCubOmYu42HiNE9eJ/dc3DoDu2LGx1EOo0d9sBfD19tX5
pR995FH89eG/4uuvvobb3n3Iycq5MVeBo9efiMig8f3KahQVFOnnl1yubWh8
kX1zgvUnIiIiIiJyJMbviYiIiIiaGEsz/y+52xJjSbieiMDzgdiwfgMGDRiE
d995F6++8ip69eyNkOAQ5GbnmvK8GbO/68dF4lw15tzWhGsJOHniJHr16IXn
/v48nnz8SXzz1TfYtHET4mLiUF5abjomuMPrQ0R0q2ya5N2XlZbhSvwVnDrp
jgP7DyIiPELruuh3yI81R28HERERERGRE2D8noiIiIioCbFtxv/S587JztHa
x6tXrsakCZPwRdcv0ObV1/DSiy+jQ7sOGD92vGlue+mj2+dP0p0/NrWmMRWV
5ZW4Gn8VB/YdwLAhw9C8WXM8/eTT6Na1GzZv3KzxMInvW4+J3bElIrpnbJqM
PcrNyYOPlw9mz5yN7/p/hxnTZ8DP1w9ZmVmai1/nMY5edyIiIiIiIifD+D0R
ERERURNiacZl0zzGNQgPi8D8ufPxYusX8cTjT6L5083xVtu3MHLESKxauQre
nt6aey9zGtdZVo0dR29bY2DejxL/Ki4q0fnupWb+4397HH/9yyP47JPP4LrH
FdeN326S33rTcbU5vkREjlBlfFekpabBzdUNPXv0QotmLfDwnx7GhPETccb/
DHJzcnV8kp7zsXx3WJoTrD8REREREZGjMX5PRERERNQ0Sd62xFDcT7lj0MBB
eOzRx9Du3XYY8N0ALFuyDEGBQUi8nqh59/K7QR9naU6w/o2RzGMv+7qivAJ5
uXnYu2cvBn43EK+89Ioel107diElKQVlJWWmOe/lsFh+N/HYEJGj4cacLDHR
MVrXpcvHXfC7//4dWjRvqZ9jvj6+yMzI1Di/fo7ZN0dvAxERERERkYMxfk9E
RERE1Eg01IzbKisqNZ4i/WzJo681x34lzhJ6MRTLly7HV19+jfnzFuDQwUMI
Cw03xe2lzvGPLJd+oZq6l+W4CNnvJUUlOH/uPDas36jzGhw5dETnk5Zj2eAy
iIgcSZrxmVRVWaXfOcFBwVj0w2K83uZ1PPrXR9H6hdb4fvj3OHH8BJITk437
NVBL33ZsEhERERERURPD+D0RERERUSNh34zrJA4sc6SnJKfiQsgFnDt7DtmZ
2agoq7A+RmIs4aHhOLj/IC5HRGqt/Oqqas51f7ePlexe82+eGnPOvcTma8z7
XcZWyBiKa1evIfB8EHKM4yL3q5Nv7+jtICL6EcVFxbh04RJmzZyN9u3ao9nT
zfHC8y/AZbaL1nipt46+8dcyvwvHJxERERERUVPE+D0RERERUSNg32qg8eDM
jCyEh4Vj3959GD1yNPr27gt/v9Maw7eNHUs99vzcfJSXVZhjxE6wTY2ZpdVC
808LCwqRnpaOjPQMnffelHtqiuHLcZTbLXmqlut5jIjI2cn3jNQSuX71OrZs
3oLBgwbjw44fYv7c+Qg4d14/3+o8xtKcYN2JiIiIiIgchfF7IiIiIqJGwNwk
Z76stAw52TmIjIjEnt17tFZxxw4d8fxzz+Ptt97Gtq3bER8Xb6rDbq5RbGWu
q2+7TIdvW2Nk3q9SHyErIwtnTp/B2jXrsGHdBgQHBqO8rNx6X43X242pqJOv
SkTkxOR7paK8EvGx8Vo3f+WKlTjtdxqpyala60Xvo/n2tTc/Ho5ffyIiIiIi
onuN8XsiIiIiosajqLBYY/Mnj5/E8mUr0KtnbzzT4hn88Q9/RItmLdCtazeN
6es86uWmedRNsXvT46153bbNCbarMbLUR/Dz8dPa0h9+8CF6fNsDrntckZeb
Z7qfZf9b/pqPE3Pviei+AtN4peysHERFRuncIBq7N9cakTFLUmtfasFUm2uN
WB6nzdHrT0REREREdA8xfk9ERERE1EjUAAnXErBr5y582uVTPPfsc3jskcfw
1BNPoUP7DpgwfiIOHzyMlKQUlJfa5neb5hmWHG+db1iutzRHb1MjJjUSzp45
izGjx+LFVi/iv3773/jow4+waeMmJCclm2oh2DbzsZLra2zrJBAR3Sfk80tq
v1Tb1BSR63KycrTGflJiEooKi0zfRfyMIyIiIiKiJorxeyIiIiIi51VvnnVD
zbjv1fir2LxxMzq064BOH3ZC9297YPKkKXDdsxdBgcEaFy4tLrXWLLY2fa7a
urXznWD7Gx1j/1ZVVCE1JQ0nT5zCiGEj8GLrF9GyeUt80PEDLFm0xDhOQSgu
LK5zbOo0R28DEdEvUGvzPSOxezkntdfVDaNGjsKY0WNw6uQpZKZn3qgHY/84
IiIiIiKiRo7xeyIiIiIiJ1WDm/IPJX4hfXipvS7z3FvqD1tuT01JxbEjxzBk
8FDMnzsfu3ftQcC580hPS0dpiSluX2s/v72lOXp7m4Cqymrk5uTCzdUNA74b
qDUSmj3dDJ07dcaihYsQdD4I2ZnZptxT+2NSX3OCbSIium0w/a2sqEJSYjLm
zpmH19q8hpYtWmLk96Nw8sRJ5OXk6XcdLHO62H4n4sYyiIiIiIiIGhvG74mI
iIiI7g+Sp1hRVoHc7FwkJiQiLjYeWZlZGse3xOTlstQglvzFuJg47Vdba+Kb
5xlusDnBNjZ2cnyuxF9Bj+498MD/eQC//c1v0eXjLli+bDnCQ8NRUlRyY457
qZHf0LJ4zIjoPiefcTLfvXyXzZ83H6+1eV0/E59t+SyGDx2OkKAQ4zsuG9WV
1bA2/R6rvfG/E2wHERERERHRncb4PRERERGRE4Lpr853bpD56rOzcjQmL3PY
z3GZg6FDhmLb1m2IuhylNdklNi9z2EuevcT1S4pLNN/buryfao7e5ibAEr8f
P3Y82r/XHl0/74b169Yj9GIoiotKTHGqW8kv5TEjovuZudVU16IwvxCBAYFY
unipzvvS6vlWaPNKG/Tu1RtHDh1BUkISKisqrfn3PFdERERERESNHeP3RERE
REROxtwkN7G8rEL7xrExsThx7ITWGO7Voxfe7/A+OrR/H/PmztP50uV+1v5z
jSkmUqf2vm1z9PY1YRKDknmdjxw+ijWr12Db1u0ICw1Hfm6+9djd9DjO+UxE
jZiMW5J5Q0KCQ7B61Wr07tkbbV59DU898RQGfjcQB/Yd0NtlnJq1hj4/F4mI
iIiIqBFj/J6IiIiI7in79hP3l9rvcm6/qrJKc8klv7zW/rz9LS7L4W5nHY0m
8/6mpabhtN9pbFi/AYMHDUbrF1rjicefRKsXWuGLbl9gzao1CLsUVjd+/1P7
3dH7oYmQ4yGv2cryStMcBpI3KnMgGMdV4vXpaelITkrROgn11so355nqcWWs
iogaG5tYfHVVNYoKinAl7gp2bN+Bnj164Q8P/QEvPP8Cpk6ZqueJykrL659f
xNIcvT1ERERERER3COP3RERERHTP1NfMt9Xa1sQ1Xy9x+8KCQmRlZCE9NV3z
lvNy81FeVq7x0Fr7+dwdvX23su21MMdk695ea8mXN2+T9NNlu48dOYZ277bD
3x79Gx76/R/w2KOP4f3272Ps6LFw3eOqsQ6Jecj9b2cd6C6wO6Yyr7PkjEqM
vtA4RpJ7L8dZyDgUiVfJuBT+7iEiMtWNkfFNcn7KdberjlH7sOOHmOMyFynJ
KaiwjFOzfPfL4+wbxzoREREREVEjwPg9EREREd0zMP3VfPqKKlPs0rbOe82N
2wvyC3Ved28vH+xz26/5eFs3b8WB/QdxIeQCcnNyNf5pXS6cYPt+atuBm2v/
2q6+Jde61hTHkNjv8WMn0LFDR823b/tGW/Tv21/nS/f388e1K9c0d1tiwYxZ
OA/5jVVcWKx18V337MWSxUvg6e6JpMTk+vPsiYjIqrSkFHGxcdi/74B+95/2
P63j1Gos49Qsc8TIZUszX8/zSERERERE1Bgwfk9ERERE95LE5nOycpCakqb5
9JJPp7XFLfcxLkpt8YiwCGzdshWrVq7CiuUrsXzZCsyaMQvTp07H4kWLceli
qOY012lOsH0NMq+fbS10iT9oDnZFle4HydeWHG3LYwrzCxEUGIzJkyZj7Jhx
WLhgocbzE68norS4VGuzN9hndvb90UjJ8czLzcPliEisXLFS53H+qNNHWLpk
GcJCw0zxJ0tzgvUlInIq8sf4mJQ6O9JXyMnOQXFRsSler7fV6vdlQX6BfmdW
mz9Ta83zk/A8EhERERERNQaM3xMRERHRvVRaUobwsHD4evsi4GyAxuplfnBr
TdzqWsREx2Dzpi3o1bMXli1ZhpCgEGSkZ2gO3qyZszUPfeOGjVo7XpdraU6w
fQ0yN637L/XTDZUVVVpnID0tAwnXEpCSlKJ9cx3PYDTZLzLG4WLIRWOfxCIt
NV3j9tKHrzXnH9rX4a+zP5x9nzQ2xrGQMSUSp1+3dh3eNF6nj//tcbz5+ptY
vGgJQi+F6VgNh68nEZEzsjT5fpM5RiqrzXPl1Fpvl7h+Wmqafs5ev3pdvzNh
G7tnLRoiIiIiImoEGL8nIiIiontJ6r1LPFrim0uXLMUF47LUFZecZamPm5eT
Bz9fP413itN+p7VWfllpudbTX7t6LTp/9DFcZrnAz8fPNPd7ZbXDt+tWSR9X
1rekuFTHJHi4e2hdgc6dOmPC+In6f7mxrZb7Sz6+xPhLiko0nm9dlv38v7U2
l22bE2xzUyB594UFhQgODMa8ufPQ6oXWeOjBh9DmlTaYPm06goOC9bXN2BIR
0U8zjVGrqXu90aIio3T8Xt8+fbFw/kJ4e3nrZ2tFeQXPIRERERERUaPB+D0R
ERER3Rbb9jMeL7Hp2Jg4jd0PGTwEPyz8AQf2HUBIcIjmnycbThw7gQXzF2D/
vv24Gn9VY/eShx5wLkDj9zIH/Lix47B923bERMVoLFz7jvbtXu6LH3s+aTXQ
fPuiwmIkJSQhMCAQu3bswqjvR+Gttm/h9//ze3T9vCtc97hqjn29y7d9nhrc
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
6FisX7cBX3T7Au+8/Q6++vIreLh76nw+DTZHbwMRERERETVZjN8TERERkZC+
l5D4euTlSEwYNwGjRo7C2jVrtX8mc8k29NjysgpEhF/WnP3FixbjtP9pXc6x
o8e09vjoUaPh6e6JuJg4zbHftXMXNqzboDnN0VExSE5MRl5Onsb8beOjddg2
J9hfTrtOdGePr/ytQd36CvISrTHH7hm/JyJyPrbN+L+stAypyalwc3XD6lWr
dXxhrNEnkb6Kw9eViIiIiIjIDuP3RERERE2UpRmXpd8lc8VK/r3E0GXeeTnH
LXXvZc5vqakv8fWGliO5+zJf/eSJkzV+L7H6gvxCXI64rOfIJX4/csRIjBo5
Wu+zbOlyHD54GOFh4SgqLNLnlOe2xu5t1o3I4Wzbj93u6PUkIiIT+1YD7eck
Xk9EdFQ0rsZfNfopBTofSo3O2VOXw9efiIiIiIiaNMbviYiIiJoeyRuWmHuV
OV6fm5OLuNg4Pa8ttWSLCooQGxOL5cuWY+jgodi3d5/20W6qoW9uVZVVmls/
ccJELFm8BN6e3ijML9Q+3aWLl7Bq5Sr06tkbH3fugh7f9sCObTs0X1+eR2qQ
W/KZrefMbdsv3lZTXQFrznR17Y2653dgP96J5dDdJ68tidOUlpSaxotUmRPn
f87y6mtOsI1ERPQjYPpbp79RY+rDSJ8lJTkVSQlJyM/NR2V5Zd3HwQnWn4iI
iIiImgzG74mIiIiaHoljFhYUISsjCynJKfD18cXkSVOwbu06nDtzTs9jFxcV
w/2UB2bOmKl5+D7ePigw+mjW5ZibxK+l/mxIUAi+6/edznUfHBis9fbl/LfM
G56RnonrRl9TcvSvX0tAVma23t5grXzL8m9322rqknWrKK8wVGrenayPzGEu
dXRlH9Qyx67JKCspM16HGTouReZrKCwohLU5wfoREZEDwFRbPzw0HJs3bcaK
5SsRdD5I+yk6zst8H22OXlciIiIiImoyGL8nIiIialok9/jqlauaI79542as
Wb0G06dNR9fPu+Hzzz7H4h8WIzEhUeOdEut03eOKsWPGYs+uPTpXrDUHH6bl
Sd37yMuR2LxpC/r16Yctm7dqnF7y+005bjWorKjS5y0vK9e/Vcb/tfa59ndi
+26K39dqjr+ML5A+77EjxxB6KVS3Tc7Xy7rXmdf8Tq0HOQd5DZhfZ8lJyfDy
9NLXu4+3LzLSMm4cb9ZQICJqmowm/YNDBw+jT68+aPtmW60TJHP8pKakcV4f
IiIiIiJyCMbviYiIiJqIGqDcHLuX89JLFi/Foh8WYdnSZXCZ7YJ+ffvjtTav
Y8B3A3Hm9Fnk5eYjNztX89CmTp6KeXPn48ihIzpfrNSalXPakkMvdfe3b92u
Mf7pU6fD28tb6/Fbm+X5G/rf/vpfuI114vfVtcjLydNauEmJyRgyeAiWL1uB
mOhY7QPLeALJy68zlsDRx4nuGPmtI8dYXvehl8KwZdMWzJoxCx6nPJCdlePw
9SMiIgczmtQWOnb0GL79+ls89shj+ONDf0T/fv2xz22fxvDLSstN/Qo4wfoS
EREREVGTwPg9ERERUdMgceqszCwc2HcAE8dPxJhRYxBwNkDnvI+OioGbqxu6
ft4VX3/1tdbRv3b1mta+l3r3Euvv07uv1tGX66X2uOS0Sx9y7eq16NWjF778
4it4uHsiPS3dlK92KznNllj7ndrOeuL3Odm5Og4hOjIaz7R4Bu+92w6rV61B
YkKSzhNgjeGz79noyLGVY5+elqG596tXrsbO7TsRFxNnGrNhicfA8etKREQO
AGiNIOkLyfi+9u3a4z/+v//AA797AJ90+QQnjp3QGL7Mv8NaLUREREREdK8w
fk9ERETUNEgOspyflpr5Mserp4cXsjKyUFJcojn1Mj+96569mOMyR/Pozwec
19slfz04KBhjx4zDwAEDcfL4Sc1fPnTgEDas34CZ02dqfP/okaNITUnV2vQ3
1ca3tPrW7cduu131xe+zcrQeQExUDFo2b4mHHnxIz8+vX7te6/7L9st5eWuN
XGocYKqJLHn3e133YsrkqRg2ZBj2u+3X+SEs96mtMXH4+hIRkUPIfD+lRt8l
IvwyNhl9pG5du+H5557HS61fQq+evXFg/wE9X8YYPhERERER3SuM3xMRERE5
P4lDS7/NMqe89TbbZnNfmV9e8uNl7neZ513mrJcY/eWIy1i5fKXWz79uPhct
95fYdUV5hc5bv3PHTnw/4nuNb18MuWg8rhDZmdnYsG4DRn0/Ci6zXDBvzjyt
uy9jAXbv3I2zZ84iLSVN6+rL8qzraN/st+3Hbq/vHPlP5evXE7+X/Ou83Dyt
md/s6eb4f379L/j9//wenT7shBXGvrh08ZKOOZB9IfuY5+YbCaMVGe+ByMtR
WjdfakR82PFD7N61W2tK6BgT4M7XgCAiovuL+TtAxvPJnEB79+zFoIGD0e7d
dmj7RlssXbIMFy9cRGlJKc9TERERERHRPcH4PREREZGTqzGdU87NydNc+PLS
8hv16W2a5BBLDNrUt0vQuHRI8AXNO89Iz0RyUjICAwKxeNESHD923LguA9WV
1abnMDd5HvdTHhg2dBh69+qDnTt2aQ6+5O4HnQ/CqhWr0L9vf43jr12zFheM
5Uu9fKmzL2METCuC2+/HWTfixjZb65vb3K/O2IAG9pV9/F5i99K3jImOwVNP
PoV/+l//hF//86/x7//673j3nXexxNgfMvZA5r+Veus6RqL6NtefHM/y+rHk
0xtkHEtOdo7O6zCg/wC0efU1LFq4yBqHcfg6ExGRczA36QPI+Mejh49i3Nhx
6PxRZyxbuhzBQSHaR+J5KiIiIiIiuhcYvyciIiJyXtIfkphyRFiE1q2XuHvC
9QRUlFXcyB+G6b4Si5fbjh45hlEjR6NH9x749utvMWTwEOzasQvnAwI1nr90
8VJdjswJbo3fC3O8U2rlT582A6+1eR0zps9AfFy8jhnIzsrWXGYPdw+N2ydc
TzTF7Y3H1NjOJW5e1h3ZB5blwOY6/MT964nf5+XmIyoyGs2eaoZf/dOv8M+/
+mf8+le/xm//87/wVtu3sHb1Wo3vFxcVo8zYVtkmxvDvMzDFXaSOhNScKCku
1VhLsfEazUzPxJHDRzBi+Ag93jKGRXIsa3iMiYjItq8h/xrfDTLuUWoQSRxf
+mAyFszh60lERERERE0G4/dEREREzkvyiCUeGRkRqXH5bVu2IToqRuu9m/KM
a/V2qXEvOeRn/M9g+9btWtte4vTz587H5EmTlVwfcDYAixct1uUEBwZrfX2t
eW8+dy2XL4RcgMtsF7zz9jsY+N1AHNh3AGmp6RoLlXrkMse95KrL8+p61td+
wTZbYrClxaWaAyfxV4nHVlfZ1Apo6PH11c/PydW6BdGR0Xj6qafxq//1K/zq
n/7Z/PdXePCBB/F++/exbs06RIRH6PPK8+vzsba686sxvW5lfojYmFh9jXt5
eClvL2/4+/nrvBEy5mT/vv0YPGgwpkyeqvWRk5NSTO8lR28DERE5RgNNagoV
Gn0r7fMYf2Vcn7U5ep2JiIiIiKjRY/yeiIiIyLlJrfzUlDSNtx88cAjxsfGm
OVira7VefuL1RJw9fVZrhLu5ummMMjwsXPPjJWZ97MgxfD/8e8ycPlMfr3H9
eQuwZfMWXDf6f4Uaw6/W5UmMPuBcAOa6zMWA7wZozfE5s+cYy4tAUWGRrk+l
5NtLjXm7fLWb2s/ZXmOZhQWFuk2hl8KMdTmPM6fPaA5cTlbOjfPnP/J4+/i9
PE7mHpB5BJ5+8mnNvf+XX/+L/v23f/03PPTgQ3j5pZcxeeJk+Pr46lgBmS/A
VFeghvF7JyevRRlPEma8Xg4Zr++N6zfqWIyNGzZirfF3+bLl2LRxE3y8fTWO
f+zoccybOx+zZs7CqZOnkJiQqPUsHL0dRETkAPat9sZf6UPId0y9tYCIiIiI
iIjuIsbviYiIiJyYuUkuuNSqz8rM1r6bxNkl5ihxy72ue9Gze08MHTwUWzZt
0di91IGvKK/UxyQlJmkMc/So0ZgwfoLGN8ePm4BhQ4ZpjnKiuQ6+LE/yzNxP
uusc4RILXbpkKWZMm4HTfqeN586yrpf007SvZhsvt1lfbT9je2U7ZczB7l27
MX7seK3/3+nDTujftz9O+5vW4Ufr2tcXv8825d9b4vf//m//G7/9zW+Nv/+O
J/72BLp/2wPHjh7TcQLSJ5b+sYyLEFW28wuQU5L5DmRMy5pVa7B86XLjtbNH
3wNxMXE6rmX1ytX4/LPPMXXKNJw7e05z7g8dPITZM2fra+zUiVNau8LR20FE
RA5g6TNYmv3t9TVHrzMRERERETV6jN8TERER3WX2sW3b236s2S2nsqJS56CX
PHtPQ0pyqv6/320/vv7qa52vfsmiJZp3L7Fn6UvJHK6Sqy+5+8uWLMOggYO0
dr7EOmfOmImpk6diyeIl2LRxM3bu2AmX2XPww8JFOLD/gM4HL7n8c+fMwz63
fbh65SqqJZ4NNFxXvoHtkLi8rGtyYrKpZnlpmSm33fwYWdfsrBwEnQ/C/Hnz
Ned/44ZNWk9AtmnCuAk6B4CXpzeyMrLqf17LvraL3+fl5iE/N9/Ynlg89/fn
8WKrF9H18246D3rLFi3xSZdP4XHKQ/fp+XPnERcbj7TUNK0DILUGfnS8AN0T
Uj9BalDIsS8vLbf+TpC/SQlJevwWLliIPbv2aK0GqaUvQi+FYtXKVfj0k08x
ZfIUnA8I1HoMUZej9LU9acIkje9LzQlHbyMRETmQpTV0fUO32z9W5zaq53ZH
bx8REREREd1XGL8nIiIiussaqLv6Y/XnJWYs9dslVil16yXeXVJcioz0DKxf
ux4L5i/QnHHpw532P4NpU6fhhedewMwZsxAfF6+59LU1N55TYplHDh/BqJGj
sGb1Wuxz2w/XPa6aWz9l0hRMnzodc1zmYMzosRrbl3ngJebt4e6hz7V502ZE
RUZpPNt+O25l+2XsgcTFfbx8cPzYCa1ZLvPKVpjHGcj6Rl6OxNo1azFs6DCt
8S9x2OzMbIQEhWDVytXo1rWbxmIlJivLs8b/7fd1PfH7PGNbrl25hi+/+ArD
hw7XuuqzjH31xmtvoO2bb+lcAkcOHYGfrx8uXrik6ye1DUw19Gsd/xpqguR1
IeM+ysvKER0VjTPG61xqJKQmp+p1ch+payx182VMisTvvT29kZ6Wrq8PGYPh
7+uPZUuXYeyYsVi1YhX8/fwRejEUV+Ku4NLFS1qvYuvmrTh35pzDt5eIiO5T
5ib9kjLttxXrPDxae99yu6PXkYiIiIiI7iuM3xMRERHdRfY5WJa4sjm2bL3d
JtYu53vl/K/EnSXHXuqAS059eloGMjMyNZY+fNhw9OvbD4HngzQvWeKPn336
meaoS4xS6udL7FOXDdPzSZxz5YqVGuvfv++A5qNLrXpfb1+N7ct4AJlzPj01
XccNyJiBkydOaS685OdLDLXKkn9/C9teY543Vs5nSz2AsNAwzXWWmuXeXt6I
i43TfGqp3S/17SX2OvL7UXqfwPOBKCsp022Qfqrk4Xf/pjsmTZystc9lbIEs
07L/ZF/eVM/fvI9zs3O1hn5meqbmZx85fBTBQcGa6//NV9/gxdYvYZTxvMeO
HNO8bMnnlr6o5dz7TXl0dE9IrYdi47Uhr3t5bch89lKLQV4bcjz1PsbrI+Bs
AFYuX6m184MCg8zHO0dz8mWsyg8LftDXm7wvDhive5kbQuaNkPeUzB0hdSXk
teHo7SUiovtbqdFvSTP6UDKOUuvFyFgzOH69iIiIiIjo/sP4PREREdFdUoOb
csQlniwxR4lNym32Ofi15nr3kovuumcvZk6fqfPWS0767FmzcfbMOc1D1jm9
/9EV+/bu07z2K/FXNE45bep0bNq4CRlpGab4NkzLl1i65O7LY+e4zMXG9Ru1
VrzMJy/5zNfN/UCpLS6xf8k9v3jhIhYvWoJRI0fD/aS7zhGu/TPc+j6wbJ88
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
eY77fVovQuaX2Lljl+bbb928VWtXTJwwSce5bFi/AVuM6+S9tXTxUn1d+fv5
axzFWpvC0dtPRET3DemXSb9I+k7JScnGd9F+7a9I7SLpk8k4M5nfR77DZBya
1A+SPpH0M+R6eYz0eW76DmI8n4iIiIiIbDB+T0RERHSX1NMkhix52xKjTExI
Qm5OnuaVlxaXau675A9L3XrJNda895obC5LaqzJnu+QcT50yFZ4enjh+7ITG
L0cMH6H5+BL/DDh3XscBSGxc4sv5ufmm/HTb/G5LM6+rPI/mlxvrITnmGr/W
mvTmfPqyCl1PqUN+U96YOX9aHiO59pLbLDFuyY//rt93+OqLrzTevm3LNl1/
iY/LOAOJpU6aOEnHJGgOvcTVjeeQOgQy5/nC+Qs1Nl9UWKzXyznvo0eO6niA
uXPmaWxW8vEl7l5pid/X12pvbLduk+TOGcdB9q/EjGVdwkPDtb6tjGMw1c6v
se4X2S65TeYc+GHBDzp/+j8++1y3S87Xy3wHst3Sr3b4a+4+JftZ5jPw8fLR
2IfUypf8eJlP4fsRI/Fam9fx3rvvYcmiJfo6T0tJ07EXMp/91MlTMXnSFB0f
InX0ZW4Kl9lz9D0x4LsBmg85bMgwfayM/8jMyDK9XixvLSfYfiIiuj/I95WM
iZS6QDKmb47xfTNj2gytWyTn1KQfVW2uJyO1h+Ji43V8mYfRX5GcfOm3yVhJ
Gc8pfSodI9kUa+8QEREREdGPYvyeiIiI6C5poEkeucSMd+3cpTXxpX699Hsi
IyKxYvkKzZ0/eOCgxvclb9yyPMkxl5zxLZu2YPy48ZpjLPFOidPLXKurVqxC
SPAFJFxL0Lnh5byyxKUlXl5tWU6N3bpZ1tXmvLHG7M21YSW/TOuPG+si9eZl
Xcu1/qup7r+19nl1jY5F8PL01vPYo0eN0bi8xFqljv/8eQswfux47N61W+Pw
Mi+A1JuVGP+okaOMdfXTPqmMMzh+7LjGZIcOGYrTfqc1Vit5bFL/XPKot2/d
rrFeycvPy83X+L51+xpqtttpXmd5jMwlEB0Vo/MPyDGRba2xxOFhqnsg59g3
rt+o6y/jCjw9vHD2zFm47tmLEcO/1/ETkg8ux5Xn338GmMaISK0FGZshsZDL
4Zd1fongoBDNvX/+uefR6oVWmGS85v2M10pGeqbWRJDXusxHMfL7UZg3dz68
jfeD/K6R16vMVXHy+EkdD3LubIDp+OYVWMemWF8vNrUjiIiIfpTxfSFjzILO
B2GOy1ytDbNrxy4dPynj/yz3kz6U9OskJ3/I4KHo07sPevXshb69+2q/Z8vm
LYiNidV4v+b08/wXERERERHZYPyeiIiI6O7QnPaKKs31VRUmkvctdVSXL1uu
eeoyL6r0ySQmefTwUc2dl/j1yROndK51SzxZYo5ynldy86UWuMT597q66Tyr
Mqe3zAMuc8zn5eZpzFtrkRvL1PwuSx6/7TraNvPyJS4vMc5rV69pjFpyziX+
uWvnbh1vIPF31z2umuMvMVKJ7+t6lZQiIvyyrrfUL5e69rKNknsmc8zv2e1q
bNcwjXXL3ACSWy11ZaXmgOTo7961B3ExcSgxtk9i85s3bcbE8RN1uyTHWuYE
kOvcjG2V/H5ZrtQEsNTE/zlzyUrMVvLtZXmr/y977/0e132d+/4F9zk/3ptz
8+Tm5JyTntw4LrKduMR2bEu2c53YstVFFYpFFIvYeycIghWsYG/oBFEJgihE
770RHSA6UUmiEXXW3e+a2YOZAUCKEsUBiXf7+XgGM3t2/Y5m8fuu9a5TpyUu
Nk7r5HCNcRzIU8C1RD241z4v2bljl2rM6FPQ3nZP9WH0YF+7eq3mTsBDANfa
3ePuhUOs3xV4HCCfBeO+qrJK/22C3grQRTBu4DkBvwNoHtlZOTpO4WVRVFik
OR24P/BkgD8+fBWg/yPvA2MZfhf43jnmZuhiavfU7wkhhDwJ47cCcV15WbnG
QtDugwKDjLil1F5Lj9+ZPpt/DHq6eOzxkIMHDhnx3kWNodAHBjED8tWuXrmq
eZaINdx+boQQQgghhJBZBfV7QgghhJBnD7xVEc+gtzr0YdRswzsVPVDRYx1a
L3RIz72ecvH8Rent7lWf++KiEu2r/uG8D+WY9zH1CHfUhKFX93T1SFRklMz/
eL74XvWV9LR0/VxpSZmtPn5Ya4y1x/3I6GStsQ2La72xWOufoVk31DdoLTr0
9xPHT4rPSR+tPccxQj/HnPOO7Tt13hk97JtsmnWPcfzwkf/jH/4ohw4ekqKC
ItX2oZlCi4X2v2TxEvl8xUrdHrwF7rV3qDa+bu069aWPCI801q3WefDYW7G6
HvZz2ueM6rOREZFSkF+o2jmug/0cbP3TNXZ0eO2JmqyxoH4f+QT7PPfJ/n37
dT/ITUAuAnqkI0cBc/S7d+7WY4H/AfR95Fqgpy2uxeJFn8qG9RskKTFJOoxz
cupP4LrMgrHpVlyvgcN1Qd8GeDggPwJjOe5WnPoRQ6svKy3Tvvf4zkDLRy+G
MmMdaCTI5YD+cfbMWWPsHZaLFy5JoTFO4K0wMjyiuTPI8dDvgevtcBwzhBBC
yOOYsPryIOZCzqSfESshzwz5ZLoY6/Q97NO6e8Que3Z7aO8W5P4hlxExAuI0
1O5Du4e2jxxJ5K9Nm2dJCCGEEEIImbNQvyeEEEIIeToQo0zYesPbX3fRAFEX
DH0RuvdHH3wkP/rhj+T73/sX1XlRHwyfdsz/7vXYK5s2btYaYmjDPd09UlhQ
KO+/+77q2mmpaVb/+7FxuyaN2q/amlq5FnRNPeWLCos1nrP62o9Za4xdNWTb
MVrMHvATFvvzCa2ff6R6NXT7pZ8tk9/8+jfG/tdLUECQHid8yqFlo7848guW
Gets3bJVYm7GaI0/av0xB/3aq6/JqZOnVJ/HdqHFwg9/6+atMv+j+fL671+X
T+YvsNbQd/fqepcuXpZlS5dpv3LkCKCWDbkA0NCR/4D+9tg//GqhneP8p+jz
dg3f4XwtLudv3ieHHgLIA6irrVcP9t/91+/llz//peYZnDx+Uj3x4WeAnAXU
fUPbRw+D/of9qhfj3sLjH164qz5fpX0MCguKrF7+My2zYPy6Bdv9Ma/BhG3c
2ZeJyXX6jOsbeytO/RreM74HyPGARg9NBLo+ci3gow/vCnjiw/thoH9A6yHP
nT2v9+qMzxmprqpRnWVOX3dCCCHPHOQsNt5t1LhJvV1sHkCIv+rr6tVzaMEn
CzQ3MdeIm9Dvxf4bKNY4Dhr+kUNH1P8HsZX990rcf36EEEIIIYQQ90P9nhBC
CCHkK2DTHe2aufEa6s6hu0Pnhqc39Gl4wJ88cVLrzw8fOqL96aFLw1sVfezR
QxV+8qjhghYO/XjP7j3qtwoN3PSp18UiqnFCu4SuDc1f64sdYyfXZYbjh94N
/T09LUOOHT2mvcfxCE/+nKwc7XmPWBH66KPBR+rxCp97aNnbtm5XjR9aPPwE
oGlDu0f9Po7rTnmFaqzwEYAmj17kRw57y/JlK/S8kd+AnAXkIlw2rhF86D/6
8CPVy1HbjuNCHsRA/6DmFyCHAeepuQwWl3OTyfOxuOYuOGr7judvLPDxx71a
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
ew/5Ash1OOp9VNatWSeeHp7qEYB+5zi3CVO7d/gc6uvRlwDrbtywUWvs4f9f
WlImSbeTjOt+UbV71LqhDh/3sqSoRHsh/PhHP5ZNGzepRtxQ36DaM+bA8T58
3dHHtqK8Qu733tcauSn3Z6b79YzG5YsGrl1hQaH2YsAYg0c+rjP6RGRnZet3
Rf0Qyu4Y351UzaPA9b3Xfk99F6DRI5cCfSysfvqX1HMB9YyaJzOTh8McusaE
EEJmCeYy3Wv406brw6cJ8R5yH0+dPCU3o2M0n801dlLN34gnkVsJLyDkscHH
BvEHXke8Bk9+5F9u27JN+yABxKzwLEIvJsRzzgdBCCGEEEIIeZGgfk8IIYSQ
F5bHLU+7DeO5zq0asdFA/6C0tbarxpuTnau1T/CbR006Xse60Onr6xpUV0Tt
9qWLl6W8rNxaQ2WxevBDI8/OzNbepdAvMQcb6B+o/dQL8wtVC4Ye/mX7o1vn
g51BXbLqngVFEno9VM6dOSc+J33E+7C31j+jjzjqnuH5Dv06PzdfvI8c1Tlg
6KjwOod2irlh+M5DO4d/fEZ6pvauRy0+tHrUjW3ful3nixNvJ6r/wKijZ+tX
wdgGdNq2ljb1hEUewaYNm1S/R4w40+dwT/CZ8LBwXR+91dNT0zWHIeTadfX5
Rz91bAf13WbNPrxpod9//NHHWm8PzR8aMubJoePjPkJvRl4DjmtKbwN3fw9m
IfAuCA8NV80h5FqI+vrGx8ZrHgTyVnA94UeB7wDGHMYP9HuM24K8AtXtUVd4
8fxFzQ9BLwr8W8Xd50UIIYR8YczFeI4YDTEm+iQhLxCxWUJcguZ76rqO3kWo
0zfiuTvG72JKcqqkGuD3Ej5J6OEUb3wOuYqbN27W/MvbCYn6m4tYDrFeZHik
evZrTqnDMRBCCCGEEEJeHKjfE0IIIeSF5XHL025jwtqvGzVQqG2CdoseotDC
4du+b+8+rd1GXb5ZY48YCnX3qA9GX3bojf3qrW7dNrYDnRy9vivuVKpuifnU
zo4urS+f9ji+4jUZGhwy9lOumueG9Rtl967d4ufrpzo+dPgP530oWZnZqp3i
fFEDffniZdW7D+w/IOXGZ6FZQ8O/a8SG0LaXLV2mvgFh18NU/1+3dr16EsAz
H/XuuEajpjcs/PKfgYaPeWt4HMBPfeuWbbJwwUKtU4O3/8RjavzhLQuPe/jn
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
xg2bVJOHZ3l7W7vWuqPmPSszS73kof3D+xxxHvRV6PWofYYP//3e+5P+qzJ5
HF8E1LZj3jcsNEzzAjrudcjoyJi9Lh/afWZGlgT4B8jZM2fVt//ihUty+tRp
OeB1QOeR0dv+rnEsyCdAf3uca0pyiuYfmPGfY+3ZqZM+sn3rdgk11sc5oG4b
On51VY1xLKWaC9Db02vtC+vue/qiY9PTkS+i1/7EKa3jQ9/6aGMsYvzU1dZp
Lgb6OWD8FRngvkITyEjLkP6+funs6NT7jPyMJZ8uUe0AfR7w7w3kWOiQY6xP
CCGEOCO2R6QiGrEhct5qqmu17xB61CAfzmvffv19Rpx1/Ohx9SlCzIgYEfl2
JcUlGhsixw6/1xfOX9AcuqPex+TIoSNGbHZZio337hsxm9vPlxBCCCGEEDIt
1O8JIYQQQtyEWB9N/R59wOGBivlU1Fqhl7v3EW/tcw+9Gr7jfr7+6oO/edNm
9UGFDzlqqKB193T1SFhouPY9Rc/UwoJCrWk39zOl97s8/TEP9A1oDTVqraMi
o7Tuy6ybh+aL2mzML3t6eOqxJiclay124u1EOXjgoKz6fJVqwQV5BZKRninn
zp6Tt996R9etr6vX/urYlsU2b439wfN1r8deOXzwsOQbn0NfWFyzkeFR3Tfq
xe2LXk9xXtx9n180xDpOMBaRU4LcC2jw6oWfmCRNjU0K7j3GIDwStmzeqo8N
9Q1aM4gxido/eP4ibwPafmZGpnR1dlnzPXhfCCGEkCeCmAjxTldnt8ZT0OKX
L10uixYsUo8c+Nyg39J+47cWeZGo14fPEfLo0G8IOXfwTYK/PvyaLpy7IFuN
32x46FSUV7j9/AghhBBCCCHTQ/2eEEIIIcRNiPXR1O8tNu0a3uLwIEe98rat
27XmqqW5VX3jMS+LXu/btmyT82fPS1xsvNbrZ2VkSXhouNZg7dq5W/Xyttb2
SW3bth97fbuxH7vvvSsTM2CxeqvjODAXjGPUnvSjY/o6jhH+rfD1R79W6PGo
x380+MjqeV9RJSeOn5AF8xeon35aaprcunlLFi/6VH1hU5JSVK+fsHnoY3/w
wi8vLVcvd2/jvPGZzo4u+/Gr3/7E5LmZ13DK4u57/aIwMfmIa4+xiPuGuj3c
twP7D2g/e9wn3NNk4555eXqJ515PuZ1wW3NIcP3h9xB3K04OHzos8cYYhR8/
ckzg0cAYnxBCCHkMjovF+nuM3DjEVPg9RcyXlJis/e7xW4vYCDlyaSlpEhkR
JcFB1yTkWoj+XiPnEp9DDgBq+VGTf+XSFfHY7aGfdfu5EkIIIYQQQqaF+j0h
hBBCiJuQyedW/VmsWjRq2R/2SXJishw6eFg10NycXBnoH9S4DfOzVy9fFe8j
R+XkiZNa7w4t/+SJU3LGeA5ffdRcoQZae8E77nPCYX/QuZ9wfIMDQ9Ld2a29
z+Fbj+1BN+972K9zyNlZOXLXiCFRVw2dfc3qNXocOcbr0Gt1/2Ld76Bx/KjH
h967Y9sOPU70cMWxI+8Afq7wiIXebz9WA9SQwcsdHvvVVdU6Dz3FS8BhfXGt
vxd5+nszh9Fav0cj6nMAL/zurh6d7z9z+oysXbNW++eiTwP67uKeoB/v1i1b
5fq161JeVq61fpHhkVrj53vFV+v7oPU7jj9CCCGEzIDjgr/NHMqxcatPU899
jbs673VqTiM8cdJT0zUePHTwkHrrw/cGv8HBQcGaXwcPJ3wOPYcC/QM1DxS/
1Zo/asSEyJ1EnIe+SNgetm/fv0WcnxNCCCGEEEK+dqjfE0IIIYTMEhw0adS0
V1VWS4BfgCz9bKk+ot4dOjp0c/QZx2vwNj95/KRqq5irhT7eUN+gXvzmnOyX
Ohbbgv6p8EjPzc5VvRb12FhQR11aXKo+rvC3h1d/elq6zHt/ntbg4xidfOxx
GBPWuuzoGzdl/boNcvXKVcnLzdf+6aitRw03+ga0t93T89djN7YBLRn5DOhx
D49+nJvb79XLgIu/glUXGJJ77fdUc8/KzJbM9Ey5YzyHJl9cVKx9DNADAX4J
yL2AF+/lS1e0nwM0A+SVBPgHaq8Dn1M++n5XR5fVB8Ld50sIIYS8bIho3AQt
fvWqNfo7Dc8c1OajDh9aPn6PUWuPmAv+TKd9TmvMdTP6ps4Hdtzr1H5MiN2g
9eOzyMfTxWE/bj9XQgghhBBC5hDU7wkhhBBCZhm2Gvye7h6twf/jH96QtWvW
qV4P3R5++ah1h54OH3t46sPjHH75Dx/0yejwqH07X/VYMH+LeeAjh45oP3PU
UePYhoeG9W+PPR6yccMmuXrFV+eBP5j3gXrjI660uOwf+jDq9u+U31FPAeQb
YC4ZNd7wed22dZvW7+fl5lnrtaerr3f3vXkZMBfzmtqAJ35tTZ2EXg/T+f8l
i5fIgk8WyP59+yX2Vpz6MBTkF2rOyAfvf6A5F7fjb2t+B/T8BZ8slNd/97rM
e2+e/o1cEnwGuRj2/RFCCCHkmVJVWSUXL1yUJZ8ukajIKLnb0KgeTMjBhK++
vxE/Htx/0IjZ9mq+3ZpVazRug5cOYkjkYSK3MjgwWDas36DeTsjfs/sZYT+M
wQghhBBCCHmuUL8nhBBCCJlliPURdeeNd5u0Tn3j+o2yfNlyOXTgkESER6gG
Dp/ToYEh9dUHWB91zvYYSia39dT7ty1tLW0SGxMrmzdu1houeN7Hx8VrP1XM
F8fFxsnWLdvUy//K5Svy0YcfG8+91T8ferBZR2/1Zp3QY66vq5cTx06I71U/
1e+xTlFBkYQEh6j/P+r6Hz54yLnirxnkV5g5Fuh1gB4Ffr7+6nsPX4VLFy+p
lwLuC3JG0LcAXvoFeQX6+u5de4z1Lmo/h8SERAm5dl176iLfA+u3trTKyPCI
05gmhBBCyLMD8VVdbb164kOXR5zWUN+gsRX8itCDKDcnTzX513//uvzh93+w
92VqvNsolRVV+ruNPjgLP1koCxcslNCQUPVL0n2I+8+REEIIIYSQuQj1e0II
IYSQWYhYH9ELHn6mly5c0rnVo0eOSkJ8gvYxtTymz/sUDX+adR67b9vS09Uj
txMSZfGiT+Xdt9+VpZ8tU9/VwvxCudeOHqnNOieMHugHDxyUVStXae02eqEj
voSGD90eWjx6qz40Yjz0Use6flf9pLiwWF9Hv9U7ZXdU98Wc8WD/oLN+/7Tn
QB6Pw7WFnwJ63d6IuiF79+yVa0HXtO4ONXllpeWaK2LeS9wX+OwWFRZpPgfu
4+VLl7UGv7qqWscq1r3f+8DqA+HSQ4EQQgghzw7Egoih4Hm/z3OfeiDBuwk9
l+613dN4Ed5NqL+Hdr9o4SK5FXNL30NfIvgsHT96XN568y35yb/9RD6Y96Hx
fqzxO37fug9zmQXnSgghhBBCyFyC+j0hhBBCyCxBrI/QU+2Lxeo7jxopeJej
zzx886Hr67rT1NpbbP770MWd3hPn9Z54LGLrqRoRqdr9X/yPv5Bv/fO35Ozp
s+rfj5p/1NOjVyr89eG5ipquXTt3yaGDhyUlOUXr9+ELAA0ftdh1NXVaG7Zl
81btBwDNF/HosLEOasDh96o+AsZr5nlMew7uvlcvOg66OnR26PVnTp+R3Tt3
S1FhsWr19ktt3IOxkTG9L9AIAGrxUXcPPwj0PEhJSpH21vbJ3g3mQv2eEEII
+VrB7zM8kQIDAjUP77ARgyHGir0VK6HXQ+XE8ROyYvkK2bNrj4SHhWtNPmrz
u7u61V9/08bN8ptf/0Z+8uOfyIL5C+RGVLT+1vM3nBBCCCGEEPdB/Z4QQggh
ZJYgM/w9IdpvHj3h0SseOrhdm5/ps3jb5ltvf1+ct6nvzeBRb34OdVvwyD91
0kdee/U1ee2Xr8m14BCpq61T7R5+/ajdRg325ytWyoH9B5R9e/eJp4en+rkm
JSar5zr6oR8/dlxWfr5S55JNT3Zzf9D4J1S3n+a4XBd336sXHVvPe/xbYGjw
kc7nw0fB94qvNDY0Wn3vzUtt3A/48OJ+JyUmqR6A/gk11TWSeDtJ++XCex/e
+trr3nU88p4RQgghXwv4jUaeZ9+DPvXAiYuNl6DAILl44ZIRu52SFctWyHvv
vi+rV62WyPBInffDb3yfEVMi/3L7tu2ybOky8fL0Et+rvurBk2/EbND47bHY
dPmUum9hryNCCCGEEEK+JqjfE0IIIYS8RJiL8RxaOPR+1MCjrh1au8XRN92m
4WMd1E5Dk62sqNQarrtGXNjfN6D+qvC1h/7utc9L54FRa5+fl69e+NjG0MCQ
euzDN3/b1u1y4vhJ9fs/5n1MOXnilJw7e06Bf+v+ffu1XrvVOC7Udbv9ms1F
7Pr9uAwa9y/AP0COHPaWwIAgaW1u1bFiX4z1xoy/4fmAeX3oATdv3JTamlqN
2zFeujq7NA9gSl4JIYQQQr4+HPLx8DvdYvyGl5aUqjZ//tx5efvNt+VXr/1a
4zHTOwkeO3k5eeJ9xFsWL1osx44ek9TkVKmvq5fKO5XaNwf+SOhndL/nvuaQ
Tuf3RAghhBBCCPn6oH5PCCGEEPISYS4Wqy86fPfj4+K1Vhq17tBrzXVR745+
5hXlFdo3NSggSPx9/cXPIDQkVKoqrLos9H1os/Dux1zw4oWLJex6mNZpox4L
oB4f2u7yZcvF59Rp3R7q7VH/Bb0envqouQ81PodcAPRVpXbvRmyeuLh3Q4ND
eu/gm3DauHcN9Q3We2Mu0AVs+r2fr59xL3fL0SNHpbS4VHM4dEw5jDtCCCGE
PH8stt92eOF0tHdoLf6ni5fIe++8J7fjb0tnR5fmZkKbP37shKxeuVo2bdwk
BfkFqtMj1sPncrJz5NbNWxJ9I1qfw2dpWg3fXGbBuRNCCCGEEPKyQf2eEEII
IeTlBHprfm6+7PP0En8/fykuLNYeqfq+scA7NTc7V077nJa9Hp6q3V69clUO
Hzoia9es0z730NrRlx4xY293ryQnJsuqlau1jis1JVW13wlbPJmRliHzP54v
O7bvkMiISJ3vRW5Abk6e9kovKSqRlqYWrf3C9szjsC+z4JrNFew+uMZtgI8u
7o/3YW/118WYQc4G3p+w5WdAo8d4Qh9deOwePHBQ76eux3tICCGEuBeXBXo7
/PThl2PmZHbe65Sy0jLNxVyyeIn6JqWnpttr7Lu7urUu/6j3UdmwfoNs27JN
tm7Zqp5KxcZvPvyW7H75MgvOmRBCCCGEkJcY6veEEEIIIS8ZtgX19/C+9znl
I3t27ZGw0HBrvfTouM7TWuuvjsuhg4e1f31mRpaUFJdITHSMzul+Mv8TfR3e
+qjlgs5bU10rFy9c1Frta8HXpL2tXUZHRnVfiCfP+JzRPIAbUdFyr/2e9Pbc
13lhzAmjN+vwo2F7zb7jseri7us2h3CMs+HDAP8E1NYv/WypXDh/QXMukK8x
OjKm72O84H7u99ovG9dvlOCgYI3ZHw09cr6Ps+DcCCGEkJceczGe62/6hDgt
qMXvf9ivuZT4jUc/e3gxoaZ+z24POXzosMTeitXXERciF/Phg4dScadCwo14
8dLFS+J71U976xw6cEhjA+TtIabT/cksuAaEEEIIIYS8xFC/J4QQQsicR2bB
MUx3TObyuGOWGT4j1jgPPebjYuNk/dr12t+0urJa+552dXZL4u1Emff+PK2z
gj+q+uQPDKnmf+b0GXn1F6/K5o2bJTcnV/1WMb8L33v4rGLeF33us7OytZ4L
n8U2iwqLjO0mSUZ6pnrva72/6zJhret2nWt2+zWfS9j65ZrjBrkVqSlpOqe/
Y/tOnbfPzsyW5qYW6bjXYfxboVH/xjjavm27FBUU6Rw+8jqcxp67z4sQQgiZ
C5iLZdIrx/U9aPjIw0OuHeI7eC6hlh6/84jVmtUTaUB6e3o1ZmtrbdOafWj4
8E9CnmdSYpLW6yMPFLEB6vcRDzot7r4WhBBCCCGEvIRQvyeEEELInMZc3H0c
Boh9pquh0vdhNw8c69YdH13PZcLa/7TvYZ/GVnv37JVtW7dJUGCQtDS3aC2W
7xVf+cY/fUNOHj9pvNaqddbdnd3qpY4669//1+9l0YJFcuHcBfW9R+08tvmg
94HW2cNTFXVZSYnJWpNVVVktrcZ20DsVtdvwW0cfdXud1iy61nOFKXP6Ji76
Peruujq6NI8Dve2h0Xt6eIq/r7965gf4B8iRQ0fk1IlT2k8XNXpTtHveW0II
IWTWgTgM8RjyNuHJhBxM+Cn1GLEa9HrU4YeHhUt0VLSkp2VI090mzfWE9o/H
0pIyuXzxsvoywYt/Sm7mLDhHQgghhBBCXjao3xNCCCFkTuO4uL72vI/FRVN9
4nHI1M8gfkKNVWtLq/Yxj42JleDAYFm7eq388fU/yjtvv6N96ysrKiU+Nl6W
L1uu87WNdxulrrZeIsMjtb7q/NnzcuL4CdmyaYts2bxVa7PVY3VsXP3yM9Mz
5eSJk7Lq81XqtQ+PVdTcw2Md/e1Vt5+uxt4d15VMHWeOY8h2T3BfMZefk52r
vRbglYteCBgLVy5fkQC/AJ3Xb25sttbeuY5T3tvHY7s+2j+C/84hhBDyvJiw
5ukVFhRp7yNo+BnpGZKclKy6/KaNm+TggYMa/6E+P8A/UBITEnWeEPl6tTV1
GksihkQ+H/I5dbvm4u7zI4QQQggh5CWE+j0hhBBC5jzmMtPfs+W4DKD9wase
XqfwL380NKx18+aCOin0N42KiBJ/P3/VYH1OndZ66t/+x2/lm9/4pmqyebl5
cqe8QiIjIo3n+fp3UECQHD92XC5fuiLJSSlSXFis6y5bukxrr1GXj9p69LqH
Tp8QnyD7PPcZeInfVT/12bd7qs+0uPuazkHQux7j5eGDPp1zn+KH4HJ/sF59
Xb32RkBux83om5KcmKy9EdArYWR4xHl8ivvP8YUAi/aOmJjeE4EQQgj5msBv
P7yU0AsnIjxS4m7FycULFzVPc8O6DRovxkTHSHDQNTl7+qzq+MgBLcwv1JgQ
HvrLly6XqMgbVv3eMT9zFpwfIYQQQgghLxvU78kLx9e7afefHyGEkOfPNF7i
qok/7+MwF4fX1DPf5qmP44IWW1NVoz7nWZnZ0tnRNamXG6shpgsPDZeVK1Zq
X/uQayFyU+djg2XFshXy3e98V5Z8ukTnaOFx39PVI+Vl5VpPtXjRYp2z1X73
D/u1HjvmZozW6EP799jjoXO4iNOg4cJrv7S4VOu175TfsWv7TuciM5wreS7g
fjQ1Nqs3QnFRsd4j1Y5dF9cxiD/HrV4O6IMAD12nhfP2T4XFvF4Wcf7vDSGE
EPKcgO6OuK+2pla99L0Pe8u6NeskKjLKiBWaZMj4vW9vbZe01DTNyzx04JB6
7e/ZtUe2bdmmfjzFRSVT8/hmwbkRQgghhBDyskH9nrxwfL2bdv/5EUIIeb44
LPAE73vQp/Oa7W333Hos+Bua3/CjEa2XQn9SzK3CxxS1UH6+fjqfir7z0Fix
jAyPqjc+6u0BNNvmpmbp6uyWxoZGrbXy2rdfVixfIVcuXZHqqhrpe9ivdfTw
ysd7yAvo7upR7R7ab6zxmc9XfC4//befyvyP52utVse9Du19inXgBYBt4Bjw
t72u2OE8iJswxk9lRZWcP3dBe9Zu3bJV7/Vg/6CTZ4PTfXK5Z1jPms9isW9z
So8Hd5/nLAffC/SUcPq3DfV7QgghzxH8BiFGQz4ecjSRC+rn66+6PHonIU5E
PuijoUea31lUUCTnzp6TN994U9575z05sP+A5nd2dXZpLyVdZsF5EUIIIYQQ
8rJC/Z68cHydi7vPjRBCyLPHXKZ7zWXBnCXmL6GNo4a9ob5hsp7cDccL3RT5
BPl5+XL92nWJCIuQro4uqaqskugbN8X7iLd64KM+Glp/38M+uRF1Q04cP6l+
522t7TJm61OO80BOQkZahuzauVtrqlCXjzgwNCRUvDy95KTxOeQu4DpAl8fc
buj1UPHYs1fWrF6j/e5TklPVX93e/9z1err7fs9VHMfN+ITc770vpSWlcvzo
ce1X+8p3XpEF8xfoHD3Gid1fwvWeYXHU5133Q935qcF3EN8p/tuGEEKIu7A4
/H4jvoRGrzX4Rix5xueM3E5I1BiwrbVNmptaJDM9U44eOSrvv/u+rF29VuPL
9rZ2zSt18pSxPOY5IYQQQggh5EtD/Z4QQgghLy2Oy3R1w2L72zYPid7x5aXl
sm7tetm0cbPE3LylteX2zzzLY5uYij32sR0vdL+e7h5JSUqR7Vu3y2bjmFCH
Dw0feQY5WTnS2tIqgwODWnuPmqjwsHDtUYr3oRnajxubHLdIZ0enXLp4SbeF
3vWo7Q8KDJLdO3eL515PKSwo0vnZ6qpqCQkO0XXxfmZGptbxu/2eksePdVse
R15uvnF/veTnP/u5/N3f/p288p3v6phOTkqWgf4Bp3l8QgghhMwtkNeJWO96
SKj6OcGHCTmbSYnJ6qd/5vRZI27YJHs9PCUyIkp1fcSVdj8eE3OZ6W9CCCGE
EELIl4L6PSGEEEJeSsxlhtdQP44+oOgnrzGHscATvrW5VYICgyUwIFB9QqGN
2z/7LI9vGv3e8T3UR8OfFL70DXUNWh+PvvWon0bcBu9T9J+Hf35VZbVq6+hZ
GhYaLhfOXbDq94OPJvdlPMI3FfX8qM1fuWKl1mWnJqfqvOzuXXvk1V+8Kh67
PbS/6WmfM9rzNORaiJQUl2qdFnzA3X5fyYzg/mIM5+Xmyb69++Tb3/y2/MX/
+Av56U9+KnuM+wrvhHYHTwZCCCGEzEE0Z1TUawl5obdibmnce+H8RfE55SPL
li6Tee/Nk+VLl1vjzvq71h5Jj5ujsy2cxyOEEEIIIeTZQP2eEEIIIXOFCVvc
U19Xr570hQWF+ly94Cesmj5qk2uqa9Sj3qp1jtk//0xjk+n0e9uC/UC/hx4L
DR9aPerqzRp51FYjVnrQ+0BrpYKDgm297lskIjxCfE6dVg0XtftaJ4V52nGL
Ph8afCRlpWWybu06+dlP/122btmmn78WfE12bN9h91G9dOGS5gIUFRapdq+9
TmfBPSQzjyd42sI7ATVzv//d7+X//u9/qjkZu3bukrTUNO2fYM1XmQXHSwgh
hBC3gthusH9QWppbpaykTJJuJ2kPqbfeeEv+6z9/p3mceB3rPG47iK8RP6NG
v7a6Vnp77j///lOEEEIIIYS8ZFC/J4QQQsjLisVWXwQNfqB/UGvr09My5OKF
i6pVozd4QnyCatqYezR1TTyHlo9HXbA9mwb+zI7vCfq9o5c+nqPGPjAgSOvm
oyJvSOPdRtXVL128LHs99sqpk6d0zjT6RrQcP3ZcAvwDtX89PAas+QBW4H1a
cadScwF+8fNfym//v//UudrysnLV6m8n3Ja42Hi9TnW19RqT2Xulk9mLcYvg
FYF7vmvHLvnlL34p3/n2K+K5d59kpGfI/Z77TrkohBBCCCEmyO9DnIx8v8+W
fCaLF30qMdEx0nmv0xr/movL5zS2RG5oSZlEhEVo36U7ZXe0l4+7z4kQQggh
hJAXGer3hBBCCHnpsGntpp84+sJjXtHvqp96gf7L9/5F/uT//BP51Wu/llMn
fdR7fmxkTGZcLNP8/QyOcUb/fBNzgcfpw37Jz82X7dt2qLcp5lfhe5qVmaX6
/ScffyLZWdkSH5egPUxXrVylz1GDb+YdmP758MzHOis/XykfvP+BRIRHSldH
l3qjIpcBGj+uh7Vmf0LjRc1lYN327MW4N0ODQ+pxi3Hu6eGpeRxFBUUa6z9u
7p0QQgghcxCHxWKLI5obm+VG1A0Jux4mJcUlk3Nz9hWdGRkelXvtHXLM+5i8
8Yc31PcHfvyIvd1+foQQQgghhLzAUL8nhBBCyKzHcXF9zTL5aPcF15r7ca25
h25/PeS61iT/9j9+K9/51nfkG//0DXntl6/Jju07JfF2ovT3DUzW2k+3zHQM
XwWzJ/2ENc/A2vPeojr93YZGKcwvlOzMbMnNyZWK8grpuNeprwcFBMmObTvk
3JlzWhOF165euSqfLVkq586ek5ibMeq1v2HdBtVvb0bf1Hr7hvoGqayokrSU
NK3VP3/uvIRcu659TVHbj9ptLNDrXevtTR8Dt4+DuYbjMuHw2gzrIK6Hxy3G
S3ZWjpQWl2pehnowUL8nhBBCiCOOi8XqP2Vq+A31DZrfavVxcl7PEeR+QqsP
9A+UnUZcjTxT+Dk9fNDn5C017f5nim0IIYQQQggh1O8JIYQQMvtxXKZ7zfa6
1tzbatlRdw99OzAgUJYtXSb/9qN/k29/89v6OO+9eXLU+5gkJyVLa0ur1Vfc
Hfo0HiYmNfOe7l6tdYL+Dk979KC/cO6CXDx/UXKyctQzvyC/ULZv2y47d+xU
jRa9RlGL7+XppX6n0PLT09Ll7JmzcvDAQTl65KgE+AWop+m14BDV7Q8dOCRR
EVFSW1Mr3V3dqt2jX4D1eCyMwWYDrotTfwXr+Ea8DH0ec+3oYWt+Dj62yAOB
lwL6z+K9Z9r7gRBCCCEvLYgJocsjPrbHDzLDukaMAT+owoJCuR1/W5ITk6Wj
vUPjFPNzjrmqTp+nfk8IIYQQQsiMUL8nhBBCyAuJ62LTwU393vQS37p5q3zv
u9+TP/m//kQ+/OBDOXXilOr2zU3Nuo7bj99iPW74j+bn5au+vmb1Wjly+Igc
P3pc9uz2UI971NLn5eRpHf4ZnzOyaeMmXaeyolLP5dbNW/LjH/5Ytm/dLrnG
eug9ej0kVPZ7HZA1q9YY62/W96DzwxO1uqpGtV2330fydONFUOs2Ju1t7dpP
IfZWrOZhoM7NPjfuMLYIIYQQQr40rst069hicNTqD/QNWHNCbZ/FvB60/EdD
w+qNZV8YrxBCCCGEEPJYqN8TQggh5EUGej3mCnt77mtMY2r40KbvG6/F3YqT
Y0ePac16eGi4lJWWa0/44aFhq2e+O44buzV70hvP0W++vbVdtXuPPR5y7ux5
yc8rUG0+NSVV/UgXL1osO3fskvq6eklOSpH9+/bL7/7r99qjFHX51VXV6qsP
vT/kWoi0NrdKQ12D5OXmSWRElIReD1WNHzkA8EVFrZTpqT7pAWBx+/0kLpiL
bdzAH7+hvkF9Fj5dvER+86vfyMkTJ6W0pNTqI+G4PiGEEELI14m54LktvsVc
HuJK5Mm2NLeoh1RGWobU1dbJ0MDQ9J+XL7AvQgghhBBC5hDU7wkhhBAy63Fd
Jqx+ndDt4X+PenPMCxYXFqsujbofvD8yPKLvl5eWq27d0tSi+qd9u7Za/ed9
PmMjYzI4MKTHj3qknq4eraXevWu3eO7dp33ve7t75UHvA9VlPfd6yh9e/4PW
4acmp0pZSZkEBQbJO2+/I6dPnZbC/EL1Ko2JjhHvw95y1PuortPd2S33e+9L
Y0Oj1NbUaZ0+4j7s3x5n4ZBs86zU72cZjosxTvuN8YKcjuDAYPWS+Kd//Cf5
y//1l+qpgLFvr2tz93ETQgghZG4w3WKxxrod9zok8XaixilbNm+VK5euaEze
B8+gCZdtuPs8CCGEEEIImWVQvyeEEELIrMZlUR/OYWvvb2iZEeER4rXPS0Gf
9+amFq1nN+MIi03rRx9P+/bMbU/I1xNvyGPegw77sF9amlulrqZO+5c3NTZL
9I1orbM/f/a8+gYgzwC5BynJKdrr/t133lX9/tzZc1JWWqZe+9Dp93rslciI
SK3fRzx39fJV2bNrj0SGR2qdPXIZHtv7fMKFr/s+ftHX5xqPWbTf/fCo1FTX
SGBAkHwy/xP5x3/4R/nz/+fP5Yc/+KHxWqB6MDD/YpbjsuB2jRqMwIPDgeFx
62tjFpePOWwLn4V9yOiEdV1sZ2KGfeHPCdtnRgyGXfan+5qwvm9x9zVy5315
ntt71vt8hsdtjhcdX+PWMTZmjg3bCubY03Ez4fzedGPwsa85vvesrtMMn8N5
jDoeu8W2+kz7f87jyP69drjuEw7HNm5+3x2v+3M8PjLHcIwLHZcnfca2PuIW
+EBdvHBJXv/9H+T73/u+vPnGm3Lm9BkpKiyWocFHjFsIIYQQQgh5DNTvCSGE
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
Asw5Il6Bl35RQZHGvr9+7dfy13/117Jh/QbJSMuw5rrOgmMlhBBCCCFkNkH9
nhBCCCGzicH+QdWsHz7os2uYqPeCR3hebr72AF+xbIVcvnhZsjKzpLmxWevN
MfentWHT+Yiby9d9/HqsFuNYH0lOVo56AgQHBqsfPmrsTW0WcU5xUbH2AUDd
PGrrsfR092g9/YfzPpRLFy5JWWm56vaDA0NSV1snMTdjxGO3h3gf9pZLFy9J
VGSU3DXiN2xbtVzX43Fn7ZvjU/yf6UM87rwO5/dlcrFYvRtMvQR/YzzDfxb5
GRgPZSVlqudjXFgciy7n8vWb5WDY9xmDvOX+qARVtMmqxBL5MCRJ5oWkyfyo
fPk8uUp2ZzbIobwWOVzQLlsymmTZrXL5KCRb3vNPk89ulsnx/BapbO+XjhGR
amNbYQ9E1scUynvBqfLWjQJZZXwuqXPErt/XGcMnrrlHjibmyqc38uWd0Fx5
73qOrIgplS2pDbInr128iu/J7twmWZNcKfOicuVN43gWhSbLnvhsCWm6LzWD
4+rBP/6YsWUvJ7Y4rIQHN+j3jv+J+VL6/WPq1V1P0YplGhxXmfSk1yN7jH4/
LjP8J9LlWk53iF/k+jit6/DXdKs3GgcR2TIo64NiZYF/nCyLKZAjlb1S22+R
IeO9jv5RuVnfIb5ljRJQUidJFXel5sGw9Ns3P81Nnc5H/YvcY6cTnjpgHFdx
+sMhGQJTChjHXcMWie8Yk8CqbvEvbpSbZfVS1PNIOkYdr830Y+BJQ1r/76vo
92LV72Pvi+xILJcPLkTJQv94OZDfJMndo3r89/sGJKu5Q87faZILFU2S2HBP
7nb3SZ/l2en3dqt8m4bvukC7H52wPn6RMeeURvmE9clLjPo2WDRORXyfl5On
MS5ycMNCw6W2pk5zFd1+nIQQQgghhMwyqN8TQggh5Lkjzs9RLz40+Ei6u3qk
qLBI0lPTtX87+sKP2fznoXv3/v/svXeUW1d6J/jXzn975pw9c3Z3wu74jNcz
O2fd7WN7HNrtsdvubneQWoFUYM45iaIYFEiKIkWJOUnMlBgr55yRUcipkFGF
CkAlZKAKQAEoAL/97ntVxSKbanfb3aYkv3fOr94D3nv3fuk+oPC79/vCUa6+
vVaj49a3s3XrT7e9wN8/1cfC9rvUiR3O8fcatYarS//RseMoeVTC6ROLxDh9
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
NrmlqlEuW7RJLpixWr4zdYWcojhz2gr58aRFct3iOpm4aa9sP9QlzUmRTv0z
rgOP+pyOEvr7AuEqhzt9UezPsIzn0e9R+Wdxc69cWdMm5y/YKmdMrZOzJtfK
mYoL31wtl09aLjcvXCdzNjbIvo7DcizRL30YD4q5tcqhr613/10vv1M9Ll75
pFe5vkaaf4rxm+P5FRDPhjy319ihuwCmtJdP9CT0OPoli5fIvXffK5f86BK5
5+57pGJlhR5Xj/WHBof0/c4wpMfap7LP/0jzY8r1Hud0I2S0+HXxG0met7/T
ebxT1tatk/vuuU++8G9fkg//ycfkU3/9abnj9rtlTXWdur77dDzy7Vroh901
OOO3zCvqtIsDYqWTiYH5pmvk+01IzMk7Rtnll5zP/sCL111W2uRMO7744iua
F65Vn7mQMsaXj2fc42aGWQ8xrrenV/Y17ZMJL0yQM884U/73H/2xfOaEz8gv
fv4LWbZkmW67HXI/781zLkLdiwgZR7ivw4x/u66f8UiuNCKEjD1l4f9GQuai
ToyhwQHp7RfpUnQq6o/0ysyNO+TuWYvkwukr5YypFXLalAo5dWq1nDZ9jVyy
YIM8Wr1L5nYMyY4BjHsewoz91jajPr5RQn9fIMw1hl22MZ8NKZp6RSr2dMhz
q7bIhfPq5YxpdXL65DVyzrR1cuHcrXJ9RZO8tP2ozGhNyaZj6pwkVR5Neeay
kCLs91hiXq5/4xzDr/X0JqRb1VVAT2+v9CaSGZ85f1P09iSlt7tc6NNuwgs+
j37fio/fsQdRkN8s5rZLFb/0sNOkpyuh/92fHIxX+4vaF4w9OHbkmOzcvlMW
zl8oD9z/gPzohz+WE796onz5//uyXHnFb2TR24v1uHwdl7WnSvnPP+IXn/IA
29P9B1Ss6urs1u0t6EvQ25PQ74SUI73dvXruCjf4bCT5HtfMxvUb5emnnpaT
vvkt+b//+P/k61/7ptxx211SsWK1NO9vle7OXh2LehCT8sDENnwHc+7rvkgj
uL7LDbT19iX7dZr3dPfoZ4p4z2MuTHwjhGSD+OcXGwOvJxMze+3v9lj/1s/9
MV4mTuWuqHC90A8TZbpeJ/0IIdGRjnv4N65N1Ikyrtuo40cMQDs8yl4JO63w
bt0HerJAOuK9q7NL13Hraut0+fic754j//JP/yInfeMkuenGm6RyVaW0trT6
n5cQ9yFCxhu4RlDuAvh3t6oL4ZocHBiMPFZEBeaqtNqyulx1w3B1REJIYTHl
BStmJa0YNR7qhZmLYgpSmA8/oYAj3a/eN3YNyOIDR+ShPZ1yefVeOX/+Ojlz
1lr5zrQaOW/qarl6+jvy+Jo9srzpkBzv7tQOP2PjJQr9fRHTVqw57o+r/y1t
7ZGnq7fLVbPQP6RSTptWJRfOrpUbFtXLQ2ubZcbebtnYKbJLfelQynqmvbvJ
OWPbpXrdeo9FUJ/pk/b2DtmydZus37BRNmzcJJu3bNX/xnv95i1ZbK5Xf6/f
VjZs3bw9i6j3KcpjD6Igv1nMbZcovumh2Kz+tq5ug9Rv2ioH9rUIPH7WmNaI
6O/rl7bWdpk3d77cfefd2tt/4+vfkC998UvylS9/RS74/gXy1BNPyYZ1G3Sb
iW8cCoqveYL29WQiKfv3HdDz8a9fu16lVb1exhz+WwgpV+pxH96cBfJ+vtvY
ugVs09+bP2++3H/f/XLO2efK2d89V6668hqZ/OZUqa5cI5tV/BlJjMb31tau
l4bde+Xokc7SLTcVENQDmw+0yKYNm2TDesT27HOYC5z3yPMeIbHFPy7mvp6s
8gLKDnh+CJY72jqsfoembOLuczgesV9wYGgb2LF9h04/xC+dhoSQscdV10H8
wjPL8O99e/fpdubI40ZcQHtzb0Ka9jbp57eh7IXyL9Iw+76wxfW3LbJNlZHX
1KyRGdNmyF133CUXXXiRXPj9C+Waq6+V6dOmqzJydfT5gJASBNcXYhjKXbgm
0Y/8YPtBa04LV7kj8vgxRqBs1bCnUdbVrdN1xDBlWUJIMbDiFMoNaGNG+aq7
szv93NdyJutl/QFV4UGb44qD6uN9AyKrekSm7OuSh+v2yq+XbpeLZ9XJ+ZNW
yoVvLJXLF66T5+t2Sf2BNjmcsubmj/z4Rgn9fWFwxtwDu62lV6zn1e/uGZSH
NrfIpW/VyZmTFsspU5bJ2fOq5bcr62VefYOsO5yU1j51LgZd2zDb8WyzpNtx
3C/7M8QhlJ9mzJwlb7w5SaZNny7z5s9XLJC58+b7Mm/uAsXCsmA+mPdWNjHY
t8iOPSA9CpEmvr9ZoG2XIubYvWmCv82ZPV9effl1mTp5ulStrpGOtkPWOPyo
4wjiRlePrm9desml8qm/+ZR89CMflU9/6tPytRO/Jr++/AqZMmmKVc5R66VM
XSxHHMqIsbl+2/V39IHsPNYplaurdNvKZPWbs2fOFvQpWDBvgUrX+XqZkLJj
zjyZO2euh3nqb/Py3sZ8dY3gOsF3p02ZJq++8qo8/+zz8sJzL8prr7yhrqW5
OjYtGEGMxrqz1PdfmfiaLF+6Qhr3NMlgf6p0y04FAHHwYMdBWVu7VsWqyTLp
zckye9Yc59zlA84v4hohJBvEtXyvJeeaUiAWzlJ1IPgYlCFQdsG4S1NeQV14
yFuOGYdgfNjexiYdh2bOmOmUtwghY4uOeSjDzbfKcXNmz5WpU6bq63LF8hVy
qOOQnitjPJe5DCh7HTl0RKcLyrqT3pyk0m2h7rfql65IU30/mWOVp7He7Fmz
dR1z4oSJ8vxzL8iLL0zQ25oze07gvYgQEoC6thCzUP+ZOWOWvrZQB0VfJD1/
iHvO6nESw9Dv6h0Vo1575TXdpjXP1OlDlmkJIYXBXHuzVIx6eeIrMn3qdN3H
CGPYoo4XY4p+mQJVenFo0HKnKGp2Kw72imxu75EX6zvk1iVb5NIZ1XLy1Co5
bWadXLV4o8zYuEe29lneP/JjGiX094XBz9/3qLcD3X1S2dgiN1ZslovnVMp3
Jy+Vb01aLD+r2iXP7euSrWqlJrE8v/6qe5tQZV5vX2b+/rg6zxhDAV9fs6ZW
duzcKfsPNEtLa5s0t7T60tLcJq3N7WVBCzjQlk0M9i2yYw+iEL9ZxG2XKrnS
vG7NOnln2UqpWFkp+5qa9ZzUkceRlNXvZ93adXLB+RfIX3zyL+Vzn/2cfibg
G6+/ofspYoxpd1e3FT9NvPGLnWFiq34WUcr5N+p4Rw8fleqqGlXneUf350bb
cktzq54bAPMatjYTUn60qOur2QM+awmznRZcJ20a/PvA/gP6+mncs1eaGvfr
+NO8v03Pnw/Cxmg4e4zf37i+Xn8/6pgVNXjeSEtzix7LtXzZO3pukv379uvP
cN7yQZ+zljZCiA+tLW15X0stdhw1NOxu0NfkindWWOPAOg5aRRdT7ijVel+h
GBL9rLV9Tftl2dJlsmnjJt1mEfW9kJDxijvuoQyIseI1dn0Ic4igv01Jt1kV
CMRw+Hs8z235suWyQcX3XPVDq0yWLk+n/92i53vb17RP9jft1/cNpH+7qm+6
Yf2TkNzgWtL1VvXeuKdR1tat1eM+4O+1G3O1HWWNASlT9qgy6MoVK2XpkmWy
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
1NvAOfNNk5DpV1bnJnz899uGEw/p73MTc39v7kVjGusKkS8LQUGuybHf7zBl
3Vz4bSNwu35lcUW+24gmTwWfM/r7TBobxtbfm9hTnPtqyOsp6PoYGMz72vNb
dyTbznfdQsUM//3wvyc4eWJU+xGcJqHiVIg0KUS6Bm0j7H6H+b7J3/T33kWP
v09BXqTE6NMuwfPLU7Jo71G5fPVe+d7MNXLW68vk4ikr5L76dqk9Uvrph+uI
/r6A2G+43Vv+vkteqlgvF86oldMm18jFM2vl8ZUbZHFrtzQi2w2kv5f297bD
18TgmApJCH/fr2KllwF9//FzuzkIcJ9+DBi36iH0bxaAou5HnulRUEL8ZuCx
j3IMehgC/XiuPJKvY+8bwfkN6BtQHKz+EmPi7+0+lJjHDM/sw9xdE158SX79
q1/Lf375P+XTJ3xazjj9DHnz9Telva1Dl831V/3G4NnbyvidIsR4vOf29+Hq
tEEeKdQ2CCkLCnOfo7/PJIy/tz4LSzHctpUn/N27z/r67wN5ErDf/YNZbZRO
n4Ew+ThUmhQircPsR8hrMke71JgStB8hj2dE7U3FuD5Mfh6gv8+J/UJ6uf19
d1f3CM9FHgTEkvQ1VSzC5LVC5c3oGfBN70JsI9c5C5t+ea7bP+j73I7i553R
5rWR3J/o74clwN/H5nqNLNYF7MdYPpenYMcYcH8v2n77g30J56PyLS8P5PBM
+W8jbjGQ/j5NY4Ofvx8L8rvfDIzovpp/fTO/sn/wdRNYLw217XDrhiJnnPc7
xlxlstHvT7i+FeHSu1jpGqreGLTfPjE6KE+Nd3+fUsE35R4c7S1P6n+nHHdv
vtejaEsMyjsHjso11fvkglk18t03lsoF01fInZvbpPpo6acf8iP9/SjRr/Q/
8H9ko2MCf98tE1auV3mmWr4zpVp+OLtWnqvcKO+0d8l+t67XhzqoyfT4JZIG
+RLK3/ug42EIDxnoh4vpPmNOCGdeKHx/L+xvBux3sfx90Jz1oRx7yG0EpUkh
+lyEP2dj4+9RPsHz7TfXb5ZpU6fJzTfdLN8753vyH1/6D/m7z/+dfOXL/ym/
ueI38tbCt+TQQbtNSCQ7rpi5lAZTmb9TjHifGt7fh6/T5lt+JqSMKdD9hv4+
E8SUvP196LgzWFRnW5D2Cd/tBhx7iPbSwPQowH4HbztoG/nOGzAYuH7uuQo8
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
TkizWn/Hzj2yYcNmqaxaI8vfqVDbXClV1bX6XDXu3a/PG/Kucbu5npOesX09
J8Dw18Jw10ynOu729sPapW7YuFnv25Kl76jjXi01a9ZK/eZtui8b+jKY48Yy
0gKfoz+CM2bfxunDkEjXx937krFvPsdh8nmPvS3vvd6bJuZ3u+1z0tLaIbt3
79VtAOb6xXE27WuWrVt3qnO5S5qaDuj037p1h7S1H9Ln1dlXn/3Uzw7IlaY9
fel5FdQ7fM5OlaYbVXm/qalZutzbD7iG0W8C+71JfQdpe/x4T3D8ydW/w/uZ
yRPmeQGubTh5Jeie4sqPQejznBjwPTfmM/NuzUcxqPMQ0mc1/b0veAv090lP
P5AQ94o4lUsiL0eNcL/J+MN9PeHfxt8jvq+sqJT2jsMyQH/vYPx9tSr3NDXu
lwHMbzRMeSQovUlpx6lyfBZQqUJ/n6ZhT4NUrqqUqsoqaVH1GePv4eSxnA9x
aRuI1TUZ9JsxyP8k3tDfO4v+n6e8K1mL9PfRQX/vk2fLgRD+Xt/j/MYWl2LZ
N2isdCEoZjkg5D6PybkpZlqSjDy1a3ejdhYVq6p0Wz/9fZrh/H1J5tFSrVOU
YloXmWK298Umb/emPZx7/+jvs0FZv721XdatXSfVVdW6rUb7ezOfve0b4dnh
TRH756u64muvT5IJE16R5194SZ5+5nnNixNelldeeUPeenuJXs9y2QntfRcs
XKTvGc0t7U47Bc4F7h9Ll66QSZOnqe29rLf31NPPyZNPPSsvvDBRXn7ldZk3
b6HU12+TQ4eOWefR9vc9+jnzrvnrE2mHbLx9l/p9Mx7emz/NteCeE8AimdE/
4Pjxbmls3K/9w+TJ02Xiy6/pY3/qqef0cb+g9vnll1+XBQsWabd/+PAx/btw
39XVtdY8NftatFPMcLz2PphnE1jz7/v4+x4r/U2/APezCno9x5zRr8HdP8G+
Lsy6bW2HdP+LOXMXOOcEfTP2qn1e+NZifYzTZ8yWVeoev3jxcn286F9x8OBR
+xykr3en/GWnt/lN9/MUzPG4l/H3LVt2yBtvTpH7H3hY5yv08XD3AfCW8fC3
jRu36O/ce9+Duo6A/Xc/l8HvPDpxz5OuGTHCuPvevvS++3zfe1zW7yb1OQp6
5oM5JrOf7jzrfVaBO18ePnxc921ZrfIQ/X02ePP6+6O2v/eOvQ+uO45x+SbM
fTJGddvY3N9JfHHlV6vcYPt7dV98Z8UqXRbQ/h6vceK/cuH4+0rMfbRP+pOD
6f5j+aZ3DGJDnCjVOMW+GPGB/j5Nw55Gy9+vrpIWFcvh4/tQfkWeDUHU11fc
rsmychlkTKG/dxb9P095V7IW6e+jg/7eJ8+WA/T3hYf+nhQpT9HfB0N/HyNK
Ma2LzHjx93792envswny92YOV8T2rq6EHj+OdHvl1Tfk0p9eJpde+nO5+Zbb
5cknn5Fnn3tRHn/iabn99rvkhz/6iVx++ZXyyiuv63HDqF9ivpZbb71TXn9j
smxX5Tl4Trhi3Efgj6+66rfyE7W9q6+5Th5++DF5+unntb+/7/6H5Be//LX8
Sm3vySef1d7WjGNPz+lv7ad5d7tV5HW3v7faxZMZY/Ldc/jrPOwzrh/jwufO
XSjXXHu9/Oxnv5Drrr9JH+9zz0/Q73feda/86ldXyq9//Ru931u37dTHZ9Jr
wkuv6LHimIve7d2Tdlu9XrbngHeP+/D2Oei2HTGOCePg8W7OU4/dD8B3G+p7
Cdc1gDnnMaZ++vRZ+lhQxsb2WtsO6nkUbrjxFrno4h/Lo48+KXPnLdT9KU4/
47sye/Y8nRbYXtIzRj7j2nc7bU9amr4KAJ8vXLhIvve9C+STn/wr+eWvrpB1
6zbpc+zn8LE++oS8OWmqnHHm2fKRj3xcbr75NpWndjvPc8i6b9n7YsazO+de
p2XSyh/u8xEQxyy37zofrmNyz/nve/5MPnSlRVI/M8Ka/9953oSrT4dJK/r7
3ODNz9/7zZsfVHccc4dPf0/KFfr7UNDfM04Z6O/jA/19Gvr7MYxTMSrvkfhC
f+8s+n+e8q5kLdLfRwf9vU+eLQfo7wsP/T0pUp6ivw+G/j5GlGJaF5lx4e89
eddAf59N4Ph7+55q+ftePX86xtdf+IMfauf70kuv6vb49RvqpV6l57r1m7Q/
e/HFiXLDDTfLz37+S5m/4G2BT4PHv+WW2/WY/e07duu8gnHeC9Tf0Qfgxhtv
1ePYFy9ZLmvXbtDnB/Pt1tSs1eOs4ZPPOusc/X3Mzw/XbGKSeS699dz2lPVM
dONF1b+9c6Gb5wIY5wqnPjhkOUDnWeq2z4ODb2npkHnz39J9CdCPAM5+0aJl
skEdN9IE+4n74NRpM+V6ddxIG+zznj17pU4dC/z9CypN4O8HVNke+6x/V/0e
/o13g/l9Zx59nYeT6TH6SWufcXzGn1vzhLv6MSTd6eFCO+JB6/jV3zH+Huk7
deoM7VdwrDhX2N/rrrtJnxc8ywDnC8eH84Px+pj/WMcRcxzOb9jHod5NXwQz
bt2ktzkOneZ2WqB/wJlnni0nfPqzcvY55+n5G5A3ML+/N75gbv/Nm7fLQw8/
Jv/11f+WD/7BH8q1v71BtqjzkBF/7N/p0/un0lntF84xQNqZffO6e3ce0mmd
TB9Ht5nrwZ6XAscwYJ8z9/kL8sZddr8L9/wL5lzAZ5n+DG7HT38/PHjL8vd4
1kbY+5Onr1dsyiUxqtvG8v5O4gX9fSjo7xmnDPT38YH+Pg39fZHymd0nOIsY
5H8Sb+jvnUX/z1PelaxF+vvooL/3ybPlAP19cerRRdvvsGWgEk9LkpGn6O+D
ob+PEaWY1kVm3Pl7F7q+Q3+fgZ+/7+7qccYaY7w3XOpbby2Wm26+TTvWN96Y
LFtU+h092uV4TbTTY9w05kOfOPE1PQ7/pYmvaq+P8dG33X6X9trwwah7VtfU
6bHql112ue4XUFu7To4c6dS/Z+7l8LVwl5hD//TTvysPPviodnSYx9/M067n
fT/eI4fUZ3ADra0d+rnuWD50+Jjed6xr/BzWxX4CjOU+aH8Pnh5gWY//Vt/p
UOXOurr1em53jL2HN66r22A5bHhp27WjDo3x7Bhnf+ttd+r116jjgf/GMevx
9yrPGX+P/cFvY973Fnt/zT4jDXT/hB4z3t5yx/gNPCvefAfvAPvS2dnrnINj
x7qttGhDWhzU62JcPZ49AEevY4DahyPq9/c0NMm6dRt1+RrrVFfX6fN0xZVX
67RG22W72if4dNzvca/HOTdj6/GccfPdVvt3OtT+4HPjqvW+q/Q0vw8fjX0G
SOfZc+bLud/7vvz310+Sk085TX5z1bX6GQTmWQlusD6ezYA0Pulbp8gf/8lH
5IYbbtHXsvs6x2/ivGMbSFOA38O/kY7IV5hTwpqbwcrfeC6ASVPM4Y/YgO9h
f3W62cdsHcMxvT0cr3Me1Lp4zoLpo4DzgXOB84nfdM+dYOa0QDphW9im8fb0
9+HAm9ffHxmJvzflnLEo69Dfk3KF/j4U9PeMUwa6u/hAf59mPPt7p0xYDILy
X5DXJ8SG/t5Z9P885V3JWqS/jw76e588Ww7Q3xen3FG0/Q5bL4k4LYuVxuMN
O0/R3wfj9vc19PcRx9cYpF3M6C3iuYx73qa/zybI35tx33DJ8NgYf33zzbfr
ufLhqnG+nTnfe9LP98Zn9Zu3aTePMfq4RyCtb7vtTu39UZ7DupOnTNdjvG+5
5Q49rvuYPee1HqeMueG7LLeKdTHO/Tn1u088+YweCw8fgHWwPtwnPDTuRxi/
jzH/eH770mUr9PhyPLcerlzHAgXuV5vV/mHcPDxxZeUaWbBwkZ4LAO/Ll1fo
+QLgt/H8+kmTp8llv7hcbrn1DuvZ9upzx7N6rifMQ4BnxsPzL1u+Uu8D5npH
P4ZNm7bq8dnY7337W6S2br3Mmj1PHw+e+47ffuedCp12cO44LjNPPurocLiV
lTV6vfnqO/je228vkerqWr099EtA3m5QaYE+BktUWuDvJj2q1Hrw8Mbh4zjg
OjF/ApyKnuv/ldf1vPnnn3+h7q+A38D5wv0e/RG0vz/W5YwnRzqtWlWty+nY
L/zOcnUM+A78tul3gDkTMBcBfgdj5VetrpYlS9/RxzRt2iy5+IeXyJVXXi3f
Pvk72svD8yANvOU79F/A/A7IN5f85Gfymb/9vO5vgDQz9ynk2047T2CfkSfg
/LGPKysq9XE2N7c7fQzwjnTB+UAewHwA8+z0XbFyte6PAu+PMffYLtJgg+2i
9DEr8B2c7507G/T2cA3g2Peq62SnOka8m/3T/TG6rf4F+/e36n3frdLXpJc7
T9HfDw/eCubvx+AeGbpcEqO6bdzv7yQGuPIr/f3w0N8zThmKft8heUN/n2Zc
+/sIrvdSjV9k7NAxiv4+6x/OYsq7krVIfx8d9Pc+ebYc8PX3m2XRoqX6WaJo
t8t4pq03nvWWOMWI8XHa5yjTsrfPabuP+p5b8tjpuGtXg/YlaIeHOygHfz80
OKTKPqr83NMryUSfDA0MScYrz+0Yf19TXSM1VTXS2tImncc79XYTPQnpcZ6/
W0JEHR/jFltLmXGc3iXr7/1eKauc3tvdK92d3Va8GspeJ+P7PtsOmj/ftCNg
DDv8IZ7zDlavrtFjrE3bQ0+vqUuml5GuqytrtG/GeHv4XIyZxvz38NgYr4z+
ALffcbdMmTpDGhr2aU+NbZox285z7NV5w/rwz2j/x7z1cJ1oX8O+wT9j/D72
7bHHn9Lbffrp5+TRx57UHn3y5Gm6f4AZsw/f/eKLL+s5+zEu/tVX39R9DZ58
8lm5994H9bPssZ9r1P0N9zg8Ax77ic9wXPDf7uPtce0vPAXmG1iy5B19nPDF
r78x2Rl/j/X37WuROXMWyH33PSSXX/4bPVYf+/7Io09oMH/9ypWrHU+O8du4
38L1P/PsC/LII0/oY8S6d99zv9x55z0yZ+4C7cXhMGfMmC1PPfWcPp5n7T4P
+A30n8Ac/1gPfSPQN+FtVb7G8eH84Fw98OAjep6Db33rFPnhD38iz7/wkk4v
uOxrrrlOli5doY8R7n+9Ok6kyf33W/v/lEpzpCPOwQR1PtAPAusizXD811xz
vfbjmI8A5wffwXmZN2+hXHvt9frfV139W/nJpT+X1157U8/vgLRO2vPR4/xt
3LhFH+899z6gj+m//utr+h1pa8YkYO4BPKsAfRGwTRw/0gvpgX9jH5cvX6nz
HOYSwLGjz8Wdd94rN998mzyo0uAptc6DDz0qD6v8g/4X6O+B/hzot4I+Gdi2
OVakMfqg3HjTrfKsOj84JvR3wfrIr8jfOEZzPq3yqHWN4O9IY5xb9HHQ7Xe9
mW3I5ebvUc5yYpJaRNmop6tHxaFBSQ2mcsc/n7/hzc/fj+b+1Gufo1jcJ6Mu
P5XQ/Z3EgIy8Yj2jBHXEDRs26/5p8PeDA9HHodBlr4wYllL1uYSu0+ly1yi2
Xwh/Px7w9ay5YnTU18Forx0SeX5D2Rv1l8mTp0t9ifn7IbtumEwkZaB/cFTb
atjdIKtXrdYOv3l/q9puUpJ4llQP/X3Rrveo943EGnMPRHvWqlVVsmDeW3Kw
/TD9vVlMeVeyFunvo4P+3ifPlgM+/n7Tps26fXHr1p3OMzcJCU1vH/s0Fpid
Hn/fU+r+XsUfOLB9Tftkw/oNsmvnbh2D0geR/7bc/r5a+/tW6TzWqetSvaXq
7wkpA8rC36t/w3NhPo+mvU2yaeMm2azKSohXiD0Z8WrI832fbQf5e+2nVZph
rDLiPNwunuO+e/de7SKtOf5sZ9+b2Z4KL4rvYXwx5hXH/eI229/j+fYYp37X
3ffJ7bffrbeNeci7c8RF/B4cPtw3xmXr31e/h76d8KPoG/DUU8/qZYwBN574
0Uef0M+th5/dtm2X9np4dj3Wh6d+8slnZO7cBXqMOhw1XCr+hnkG4JCxvRtu
vEW7cozj7rTnOTd93025wsxzj+PGsWDMP/YX90gc84QJr2ifj/nU4XefeeYF
ufXWO+WBBx6WqVNn6t+eMXOOvKB+H7818eXX9Pfxe0hHjAOHk8cxzlTrYTw5
nC/6LWB/n3/+JV1WRr7GMw4wpzyOGWmBbb/++mT9e3DsGCeOvhIYU485EDDO
Hs+Uxzhw9GWAtz/v/Avl6quv09/FNrHeGWeeLdOnz9YuGePFn3t+gnbn8OMz
Z83VY9ExDh3p/tBDj+pjQB+O7dt36fHyX//Gt+S++x6Up59+Xs9HgLSFO8d+
36L+jvXhw3E8yGvoJwJ3jefV456px+pPn6UdP9ZDv4gzzjhb99Oor9/mnAus
hzTFNuDtkV7YN/RxeFWdU/TRwPMY0LcCY+mRRo899pT271h/uvoN5B/81v0q
78DhI73h+zFXA/Yf67/66hs6fRYvXq7PL/oUII/jt3bv2asdPn4T5+3ll1/X
fU2Ql3U/A5V30BcA5xDzOiDfIV/4jQErC3/vjl2q/p5ScSnZm5T2tg5ZU1Mr
GzdslJbmVt0+7lu/zxG/8Obr70dxnzBzVEZ9vyKklDHPCUEdEf3sMDdLe6n5
e7scZeISvFiXqivu3LFTxa1NsnvXbt0HKcvj299BWS2Vw/ON2t+PBwL9fQz2
jZQfdp0G/VRRfsUcXCXh74csBvsHVX3wiGxR+4wyY1Njk9XXaHBkfY20v68w
/r5F1Q/p7wmJEnP/Q11nVYXl7zvaDtHfm8WUdyVrkf4+OujvffJsOUB/T4qE
GZdFf184ysbfD1njwQb6BvQcYQvmL5CHH3xYJr05Sbcpw7c7x5BnXY3+npB4
UvL+Xi2j/Iu2GLj7KZOnyJOPPykvvfiSjlcoNw3ZY1gtT5bK+r6XXP4e7e/w
YbNmzZU77rxHj6OGJ9PPWze+vic9lzzS17hsc7/FHPjwmbfddpd22XjuPcYd
X/vbG7S7xDz22m0G3Z+d8QhJ5zfNc95RPrz3vgf1mGyMi4bbN+s2NTXrOdrv
uOMeefzxp/WYeLh1uHq42lNOPV3Pi7nXfhYAfgv5Ah7555f9Su8v/C2W4air
qmq1S8Yxmn1KJl3PD+hOZs4brPYBYw6Nv8dxYgw59hNOF78DL4u52eHTUcbF
swYefuRxPQcAyr14Jjs8O1w3/DA8Ouaiwvqot2O+dhwDPP4bb0zR6fq98y6Q
q6+5TvthjB/CvPpIC/h8rAenrP39rkY9NwHG1e/YsdsaU7+hXp9n9FnAPPV4
pj32YdaseXLa6Wfp/cA6cN+YZx/j/7HPWAdj5XEesU8Yk36v2l/0K6hR5/uq
q34r//pvX5TLL79S94vAXPXon4DfRHqgz8HLKj3efHOK7hdwww03aw/e0tKh
0nxQbxu/eavKL1deeY1MnPiaLFiwSM7//g90WqL/AdL9sD3mHfMlwOubc468
gufMYxw95l5AP4KJE1/VcyUgTdBnAk4f5Rqsh/UxxwTWQXqg30qd2mf0X0C+
xVh+lH/QvwLnGnFkxYrVem6EmTPn6r4QOJ+zZ8/XeQfn2s/fY66E6667Sfer
wFz/Pfbfysrf+7xQRtq/74AsXbJM7r/3fnnyCXWuFi/R5ab+vv7g7/tsH2/0
94TEj3Lw9yhDwc2jnoiyFeYK2bNrjy57Pf7Y4/LiCxO0J8Mz0rLKamp9fC9w
XpEU/X1e9KbnRHHDNh1SFErU3+tYNTikPQnqgxNUbEKMmjF9hnY5aH8aiT+h
vyckXtDfu4pbfp+nvCtZi/T30UF/75NnywH6e1IsOP6+4JSLv0d7DJ71jLbk
1159TS684EL51N+cIN859TR59JFHZcP6jdJ5vEvPP5bvfYf+npB4UvL+XkT7
LYz5evWVV+WLX/iSfP6zn5dvfuOb8uD9D+rndaDspOeiHvL5vs+2A+fP7+3X
c9/u2bNXj0WGB4eHhCPX/t5uU3XPda/fe61no2OMPNq/kN64X8DVY8xyZdUa
PQYc47sx7hpj8c3zqv3Ombl34zexHp4vjm1jHgDMY47tYl54/AaeLa/n4U/0
O/P24jfhcjEvPcZQY7w1fD6cP57Jjm3Bk8LNw6liDDnmer/xxlu0V8Z87vg+
7nUJ83xCu48C8lPCnt9dP9dc+4pe59jxHHrH32/cop95juOFY8Z89eg7gOdr
Yq54rIt0Rpr89rob9bz1cNzwkdgnOH3M/46x+HAhmNcTx4x+AfDhVSpd4dLR
3+A3V12r5xnA8WGMu1kP92y4Zewv+lSY8fdYB/uLdeCr0b8BfTUw1zH6HGh/
f9qZ8sYbk2XZspV67Pspp5ym03DVqmp9LeE58biusC/IJ7/61ZVy7rnnaw+P
/fn610/SrhzOHNs0aYXt3aR+D9+Bb8czs5D2et56tV2kK5wP/n2O2h7OBdIP
6XD++Rdql440NXMKoK31l7+6QjtxbAt/wzHD8VdX1+m//+Y31+p8g3yIPh7w
SvgbPDnSAumA8fDoSwFfj+cwIG3nzl3ozN2PPLfGTk/0WcBzCXAOMM8Cnhtw
8OARPW8+9uPlAH+PuQHQVwLzMdTWrs8aZ1gW/t4Tf1COajnQIrNmzpafXHKp
/P3n/17+5Z//VS79yU+1w8ffBu35XlN5zB+CN/p7QuJHOfh708cbDh91xZ3b
d8orE1+R7517nvzD3/+jfPYzn5X773tA1tattZ5jZMa4DlnxS9cbOf6+IHnJ
j6j3i5Qhpejv1b6gnaq7q1vW1a2Txx99XL524tfkc6p+ePppp+v2rV07d+m5
Q8I+84P+npB4QX/vLPp/nvKuZC3S30cH/b1Pni0H6O9JsTD+Xv+b9b1CUC7+
vi/RJ3vV/W32zNnygwt+ICd86gR573veK5/4+J/JqSefqp1YbU2tdLQfdNqU
h4P+npB4Uur+Xruv5laZ/OZkOefsc+WPPvRH8vvve7/82Sf+XE765rfkgfsf
kIoVFXJQxSvd1jTi+fN7dN0QDhzPSV+0eJl+XjvGPSPeHz/e7YyJymhPtcfd
w1Xusp0xPDHmucfY6ddfn6T9Lu4dcOOYKx2eFOsH+XtsFw6zoaFJj2dHe9qB
A23adz/xxDPaf8LBwt/pPgddCb2tZN+g9uiY2x3+Fc4e+wF/jzHYmLMc3tWU
D7A+5udHmfP6G27Wc6HDmV9x5dV6vnSMrzbj7rvt5/p6n1mI44A/XL++Xj/P
HM+xd/t7M+4dY8nhtcHsOfP1Pk6dOkO76V9fcZUerw5fjL4SGAeONIL7fvjh
x/V4c7h1jLefMWOOvPXWEp2e8MfwvHi2PPYbz2e31pusx95j3gHMZ497N/bV
PX++9veHLX+P795446369zB2HfPAY/6F08/4rj4WjN9//PGn5OSTT9P7if4R
cNkYm4/tYQw90vqXv/y1nod/oTpGPN/+zLPO0d69WV1zJs2RjsuWrdDj7V9S
+4q+HehzcM899+tnH2B+erh+XK9IG8wBME39Fs4j+jecf/4P9Ph24+/RNwBz
4F944Q/1nP3PPfei3jcD5vbH3ABXqDTGGH2cBzh4nNt5897S/SQwpz3G2WN9
uPvLLvuVnnMf8/lj7gj0scDxYw5/bAt9SDAHAr4LP4XzYNINvh/7g74jh8er
v3e9zHOj4auuuvIq+dxnPyd/8IE/kA/9zw/JP/zdP8jlv7xcZs+aLfv27tP9
lIZyjFs14I3+npD4URb+PmXFrYH+Adm+dbu8+vKr8v3zvi+f+fTfygfe/wF5
z7vfIyf+14ly3z33ydratbq/N/xYPn2PAP19PlhlyyxYlybFoBT9vQJtTIhR
Tzz+hJz2ndPlw3/yYXnve94nn/zzT6r64jl6nrZNGzZphx/Go9DfExIv6O9d
xSu/z1PelaxF+vvooL/3ybPlQMn6e7v+4Jnby4xBMzjtchn1MmvMmrv9N6tv
sbNda35W1IX19jCXrP03M19s2gsms9qVs8h5PMnM7fV6jtW73z3WsaL9FPvn
3e/h0y8I7989bWq93n1Lptvdevtc3+m3xs3Z6/rNw2b2taBtdlnp7T22UsDv
nJSPv8dciHje/QP3PSD//E//LB98/wfl3b/3bvm9332XfOwjH5Ovf+3r8ugj
j8mamjX6fpiPDxupv88aU2DnHdOWb9rCzDXW655XwpVvM+KCD+bvxkHhujXe
LeN7Y53PMp6j7b/v7rTrdsUg3/3OJ+Z5f3PU10cwZoxy+l7Q5zqnvfb8255z
6j5vfp8HHWtA2nXn2kefeJVe3//4u73f8+yT+7noGXNeRpLH+vR9APUdjJHN
8Pcxj1Nm/9CGvHXzVrnrzrv0uNX3//775V2/9y71/gH58J9+RL590rflnrvv
0R7+oOlzNMyxBY6/t8eUw0WuX79J+1PMbY5xzHCKGWUWd3uq+mzvXsv5w7Xi
HoH0hg+H24Ujxv0DzyeHQ1261J73vscvX1jXx96mA3qedYz7fvvtJXrMeoWq
s8LLw7VbXrjd2h/7OjLzrsOr4rceVMDzwt9jrPcrr7yh+wSYfgN4x/PQUeaE
T77v/oe0A7/rrnvlwYce1S4Zz7d3xtnbZTsdO+3vYz8xLlyPJV/6jv4tPHse
Hh3+Qs9Rr9ISfhjuF9tHPwL4Xbhx+Pkrrrhaz2mPce1tqj6OeQdwj4Xnxhzv
eLY8+lJgHDj2EWPyZ8yco/szYP2Kikrt9nG+cNxY54EHHtZzxMOxo/8E0gVO
GO2S19r+Hn0PNmzcrI8XThlzxmP8f3v7Yd2/4Iwzz9bPj7eeC/+w9vkY5445
4/FMeICx5k+pY8Jv3XLLHXo7cDZ4v+DCi7V3R58Kk7eQfjiv119/s+4vgDnk
Ma8AlnFeMf4deQn9HO5QeeXiH16iHS1cLdbF/PmWv9+mtwWnjzTEOH30u0Aa
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
ZiA/blP1GFMGcs/L5i4D5VsmC3tvxt9w7aMfDeIByqZ6WZVnNnhAjNmqjh0x
rNOu82aUW7zYx6HnL1BxFvVK04/K7Ptw5Yag8mhmGTGpYx3yEX4D6e/Upz31
O10HVnU8rItYhRij+3XZ5eJgj2T9Hceun42iynPOc1jyza+efqlB53YsylP5
XFdl4e/t2IWyF54tbean/su/+CvdbxJzIL1Plb3g8L/w71+Uu+64S9bWrdX1
vqHBoexyl2t5TP19DpeZWVdx1RW6recXoWyEMjPuU7gP4l6Mcgb6auK+qutP
uq3DqseintNs33t1fwBXXkQswzWD/nCod6KsgzIl6raIjajPoayGa8x8xxub
nWth1O0onj466t+Iv4iniGUA8zahDItlE8ewjL6UKK84/Thd17/u56DiOe77
OB7c79FXE/EasRvXA9JN14dQ3+5Ouupe6bTX7YDqnoCyE54fhbRCOiG90CZg
2gFNuQrfxz0FaY8+ms7+btyScTy4/6C8hBjUacdSdxwOqid6cdq81O8jZuLd
mkchIO4U5JwVJs/njLEl6O/Rx+jQwUOydMlSueP2O1Q98GvyiY99Qt7/vvfr
9izUD//ik38hp57yHXn5pZd1uxee9zHcduPu73s8eRTla5w7zIOF6wP1Ltx7
UCfD9YNyCfI+YpbuI2N7bNPHErHLiTkmj6v1UC5AvWmtupbxzC1sD/WhOlVv
2aaf69bq9Lkx+Tlj/H9AGSzdHuyaa9NvvYDyKMoeiAGIWYgRppyFcpj7ukd9
EXEE5Q/v8990W5P6DMcOj4F8b9r2TazBNvB91G0Q692e2+0KTFkV6yLOoT82
YpZV9l2r9wO/cch5ppjVHxXnA7HSiVNqPX0MOBYVs7CMe4Zub7LHCuL3sB20
CSANMstsrnEr9jyX7jmMM/pudVnzYyF2pmNYNOUmv/uTX1kS+57h71X5lf7e
Xkx5V7IW6e+jg/7eJ8+WAyXr7624j3o/7t9oh8aYGsyJiueUPvXUs3r+Toy5
wueLFv3/7N0HuF1FtQfwp2LDrg8VpVof1mdDBVREkSq9Bgi99ypFutKrKNJ7
ExDpEGroHaUpXbq0JJByk4Ayb35r7zlnn3PPDQkQEnjJ9+3v3py7z96zZ8+s
+a//f601V8Saxh/yPdgf7ydvCo4uOjebjBO86KJLI8dKPVHXkcsTNT7z9Y89
9sTgB3F71tzO+N3e2nh3bFq/5+l1dMVtW9vgIrlM8rqOPvq4eF77rmqf/CPP
i8PlIxSOZmLvGfHG1vTRlX5Pk7/n7nvTTTfeGrq73PqHH3wk3Xrz7emG629O
I3JfOk/tmPvvfTDdf99D6Ynsf/nsmYwzhl5xTdpt199mn/uP6dhjTkgnn3hq
OumEU9KJx58cP0875fT0l7POTdeoy5q/5359NT6dFP2+b0w77gKOwNvBG3BM
eTcdz9mMs+iIuZg6jv8P+r0DvzKub1y6+667Y2/D9dZZL+ojfvxjHw9e5p3v
eGdoYosusmj63cG/y2PuhjzWnqt4mR7Xez318+HRwJDZj8AL8vXNf7pXywZk
u6JWsfmvrjGMy/4ULAcnyzuMWNcag7oubAw7y4dli+gXpYYzm0LLOPXUMyKP
kjZRYpmbMb4TO16bfEg3l9hvvtfX4SvQaux9zC+KNjTjk8eMS81cevMMrqep
0dr4BuU7vXyg4ic1OU0/7YGNk7IPsjjjpoY94eccQL8fNbazVlh9vs/MFfPG
PuDHH39S2MnDct/HO61rN9P7brjxllgbRte5LjgudaE9L26sWyuo3lFXHFez
/a9m43uc28n999Avap/0b9k/oyPEupbbyt7TvnB7noUGZq3g51rP8X24u9JH
E8s3D7yeTbxNe0vr9/U/e7GyJ/ffe3869eRTI4/1G1//ZquWPh55hv+eIS28
0MJpn733yXbo5qilr/5rv2dNlZ7WS79v1QWs4+TNEfNszTXXjTxoeexwC5xi
3uEy6aj2ZN9zz32j7rhcbXo3zUlOt5r1cBKNHW6h76pzLlefRsxHZ/cezf65
n86Fmejvq6++dtgtayofm88uljFqte/6m8Bezv/Xv56r9IK/3hX2cbfd94j5
hW+Bu9jHwCjZ/tH3O/X7J+K5ttp629h/3b3xPOqpyyHffoed4plwJPhs6zwu
QT+wWfvtd1Dcz/meT5/R7v3fnMZNi1dwjjr0JW5IHJY5bv7bN3699TaMmAXx
VDRl9hzGcm9txs0au2yX55E7TiM+55wLYv96z3dXzZE8lc9zDefts8/+YUfE
1uBB9L9nxfuUuhS7775n2m67HeMa/6o1JvX+F1lkscB76v/TksVn7LvfgfHc
9DRz2jjAHVmb7D2vveY7/X211daMnPNu/V673M/6Zg3QDjFV4iuMobXWXi8O
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
exg3OGhjT+yCtSe4r9vuqPo4X8/3PBcb5zNjQP+6vnWVnsF2lRopfnoG8bau
L7bCu4DxPTNOy2Gs2XOkWbt4dM376Qd94350oMcffTziDEfnORq2YEJYaHId
LdxU3YetZMNgrQpvDYv/F7sFVxWbOqLGZ/6m7cOzrRMzdNWVV6UD9z8wLb3U
MsErv+ud0wXmksvq/xtvtHE6+6yzMw5/spWHX/4V/V4fRS1gmLyh30wy1h3z
ansA99YlrIHmgBwja7j12viKmhJ1/qLxyUcypvlI6piVfHv2lHZ1SK3fmy/s
LK2L1i8eiY14tvaHK5s2NnDe/XX+knNxucai+VzaVvleo8JONNd0h7lkfY36
s3nOGnM+M9fNrbI2P1rjPu0v+737zj+zXRCDIyeV1nFfXXOs3x5ErXfSWRfI
Ya64ZwvH5HuWPeJhBNczl+DbVVddI2yq88t3Sttib9YanzTxsvPiOVr456kK
u74wqtVOfaiOjDwztV9pN60Yg3r9c7CP8JxcMT46HrzsdfR0jZHhLPbi0XpP
joJ32T+1FOBNMVnscNXnI8Imda9xVbzSqBgLbO6Isq7WdZ1cN3B5jdUCpz1V
4aKyd11Tm30zjg5NuKHfX3FFqVfMdo0JH/zFFwbyEyef/WJ3XmxgsMBezxbs
NazyFTPGah8jAx+22lrbMLjpgfsfSH/581/SZptslr7xtW+kD07/wZav+OEP
fST97Kc/S7/9zR7prjvuiu/8+6V/B9/1Sl2TpLd+PxE26/X48P1sWPl7e4xY
V8UBFVsGq4S+PLKvne86psIzdB3+2vbb7xgcGJwPI7X0ez5bPk9MjPwV16M7
lz00mrmqVWzgncFt8Vn3revrjKjtU8zDuqYc/N9tL4YVW9uIoR5Rz392wPXF
Azza8EfZDHOs1E8stYqs1cVPK7aq3NucZ7dxPHJo8CE+h5G0XQ0PthiWYLeK
71jqHFgTxMirw0PHoqHDTmw2TCxuQBwnno1dh3Uqfq/9vlwTNmBLXEM8qRrU
bL/aLGIS2bFmbZBRtU8bmO7aG+Me2267Q8SNewZ2ZmzdRusFexa2/9Enqz2j
Gv578UFhfmsW7U0MLYxc/OWo01afV2xUscH8SX0W/tvo9v52TVs1kL4+UP39
N8Z+VTY/sGteA9QRve22v8a8Hz0q+0YjR7Ww18D4643hs4p/WPmGFZ81vOEf
vlifV9oS2Krx+zNPP5PuvOPO9KfTTk9rrrFmxEOK72af3pd/zj7r7JGHf/yx
x4fWP7YrzsgBn1137XVRkz/0+zwfmnucTswxuTlM49Hcw73S0dXB5ZvhJ8pe
kIUbN+bYJ3GS8sRhc3xA6PeHV/p9zPM8F/lQamSsMnj1yKMoMcat/ePHVPkk
pd6GmiLmK927fd/xrfojbFSxWcHBmAN5zpkDhbeydpsvMMFT9f5cYa8ynihc
cbm/uerv5jEOTOxA4VdauRm5DWVPJ88sDx+/xNd0b5w1O4FPYzf0h34Ta9jM
SXFftp3GbV1wrj3h2AzPxle3/6XYK21x/WqP+7beHD5qvp+4ZTlF4ij4ZBE3
nzGk9QFu9i5LLfxiFzwX39Y7WmyxJSM+SWys9UdstNh376KMidj7ILdNnxW7
U3QQ7ShYy0/vVQ4RGyYvCo4vuG1UQy95I+3M61nHp+n3PbTQ5q+vdJ9U/TpN
v59yxzT9vseYfTscvfT7jG1jD/W8XlR7AQ/gj0yhw7qEp7Dmwc7WbGte8R1a
sfSNmF9rPL8f3oaVafDWU/xtYPy8hsMAamTRyOn7UVOrGcta17O1tsEcZU8t
3A/+s+hAVZ7H1YFF8Kv+jqfEE+nPwqOWXFb+Nd7VT3G++G/cJ76Yn/FU+DF9
EV8b+4secHDo9IEVRrVz9Qr3yv+wDsujxe+0akFmHwBfiV/lI+I2tS+O3FZ5
Rnff+ffQ6Gn48u+tTcfltf3cjMdeGv+fWKfkyNPwn8nPfNstf01H5jV9zdXX
TuuuvX7aJ/stNPhrrso+0AGHpHl/PF/se//wg4/UuHNc6Ph+V4/ffdTc33Xn
3dOvt98p/fmMv8RnDu0QJ3DFZUMjRuDSIZfH7w45/K75gty+kdUe47hZGEbd
zKWXXj582BvrvVL5QWKzvRe+rPENJ9DsYB347MWac5mYuOI3/RhTaWnwHj1A
rCUdwru+qcZgzeOWm29Nt76Jh/vdfNPN+d3fkK4aenUacvEl6fJLL09X599p
U+3zbolz4+dN/Q/nXHbpZemPf/hjWmShRdJMn5kpOJlyyLOY/+fzR33E2269
LfSu4vPQ73FA9p3upd/3qkNfOFa+Mh9h0KDB4Xvzr1t7L9QYNs6ttWx5k+wH
HgEXKIYWvyn3y3zFPajPKsYHZwKXF52g5DU1D1jVO41awaefFfMWzn02dNl7
gl9QW4y9Mm69d3ia3aN9ja79D9pPybOiT5jjxrqYAHOc7RPTwx/wPO7NVsgz
wIeoEat2BZ6zqr1SjTt2RrtdXw6wfQSWXW7FqOnFf9EWPgd+kJ2RI6qdce98
uDcbSH9kA/km5qv46pZ+n+1LyQ2F8/E0uBO1trXXe9Imz2YOsJHmMvuqzgHb
FhpeaPPjo+/MBb4KTkh7XIPmMLaOeRo9pl2zkj2VS8eP8U7ZBT7pTDPNGra0
4jtGB3dFR9L+qMOd26At6qHQnArXFnFmTz0ba0m8v9xOfeFcdufWbMPLXgve
hZ84mojZzrbfOhB9d+mV8b7vr/OIC8fiPjQ/9o0PRFuUByiuBPckJ9X6wtYb
n9a58D/FUNU5ddYR8RjeT7Qrt9E6VOKeqhjzJ2Lt8u60QWy29ujviO9rzasB
9nqo+9m9Xds7sa6xyQ/c/2C668670q23ZPuR563YG/N3sturbGvYiOuuvT5s
1BWXXRFc7lVDr0o3XH9D2yYNaO9uyWvfbfE7fmXvvfZJv1z0l+nTn/p01EpU
S99+h2olLrjAglXdkL/eUe3J+u8KSTb1++uz3Xww9wWuurlnX3sNqt55xLDD
ILU/XuL/nFti3Ftr1ph2fFLJp2x+XmrRlBoStDe8yXONmMWS+9nk93rVYzCe
nq25hMKXum41z8a2j9qedGpJ41p25qWMCV56qapnUe5bbGbM2/zTuGRL3a/a
u6i+V/5bk7fpn9dTPXPsd5Kxy1N1PJHzyzVe/nelSZZ6Sc2j1Ig0Z8Me9b3U
qrvhHq3+r/miSvep+jLqkTTik8p7afVJd05IX1ubbNX2aOSJlviviE2s8+ZL
nkOvery9cIz7NGu5lLiOMfXnMS7qfi3vIJ6xcYzt0U/lejEm6ngm3y91Skod
7NIXnoGdLDGuMc7zed5Dr8O1I46ILlCfX72zf7frzNTt8EwRH/vciDr+oeqn
l+ox36pvNaatT5R5V2I3xLZcfdU16a+3/y3s1d/v/nu64293xLxlt7qPW2r7
MjkOGMtRbBAbdu3V16bLL8u2O+OtoVcODZvGjg7YjptvaduybMOuvea6jNFP
TuusvU7oYGKPaPhq6du31R6u9jWC6eTsy4Ur+0q/nPudJmPfn4drzNIcA68F
505qnox7WefUZFDnOPbnqHPEi9Za7EKxVbCIHCK158XRWMfVdRCPbb2m/Yv1
hodoQbE/UG3XWrxwzfEZU9YzWoP8UbEq1uYSI/h8Ha8j99Ia617FL4SbSu6n
8W+N1bZmvYDiR0bsSW6HuVJsgDi4ot+rvWKtrzT0Hppxj71dS9wznFhhmMsD
D2grHAJfWhfEQcrtUkdVf1nHr6/jtmhtsCksId7SfNZXsVeIemHZv8PZe95L
al/TZ65ZsKs5agzBlWooXJ3xRbEF4dvm67Hb+s7eVuq48ofLns/evxiSwFfZ
T4SFxDVpU6lx4j4l//6CCy4OXxmWg230QVn3im2CZfHPke+X38fjdbx82JRs
T3Dh/Ev9NaT22bUBNyA+s+ijJa71zfARe+n33qN+MZ7EpvDx7/jb3en22/46
ILaZXPaLvXG4h5hG2IufeGkDe8FVfLtba3zV62B71WG7ZMglaffddk8//tFP
onbIe9793sBdaoi8I9uv//3m/6bfH/L7dEfGXuIBYK7CdfXU71+LzXpd9q18
Vh38CxyQHG5jXKwgX7CswQXDlDxG45NvwRdVo4iea56V+vm+FzrzcSdG3caT
ah0Mzur2bf3fPKGb4sDMw+vytYcNa+em0KJo+vD/kOKf5Plsvoq5w38VTTi0
6jz3xESyA/Jp2cZiA9kMmjcbQ692Pu1JHLv569lGd+1FGXkveT6J35PPOv8v
Fsrr87XhP/IVV1997aifxqcVGzCyua9G4xqemZ0VoyAWSF+JP4NX9J2YLfYu
cnjy83fshVK/h1F1DTS5rvQrz8O3ocfT2awffJyChwNX1bhpeF0TwXrxq+yz
sUn8sdjT/vkXwvfVPn47nufCOkbTZ2wVLYxf7Dm33nq7tOKgVaKWwJnZf42Y
2xp3WVP4fuzvkNr3FKcrdp5tLHGhsU6K36zr+FfcyMTXEh+odskk82c1Zh0R
+v2D4cMOzTbi/nvvjzx1e8bzo+RvTMg+vH4+q7JPsNEVl18ZdgLGuubqa7KN
ujFs2W21HRvI1rFPfFn7Qm637fbZRv04ffTDHw1M9U57Fb2j2qtoheVWSCee
cGJoPriqps7y8EP/jNx7vNoT1h91Xhs86sQek9OeWTfNPfvr4JDYrNCAx4xr
zZOmj4P/wUOpg2bfL1wbLbro9xEv+NCjMQ9p1eqAGPOljmrZu6/UO/S7sWKP
JHyN+N8yhl3L/fA17sM2FjzFzpq/bAfMEvUB81ofdTbU2sxzraztOB5YzHWe
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
H0GLg+n5KaVGkb/BF64tjsAziGN+vFEX3npb+AProOvTmOwbxrej9Xl+/p58
W/GP8uDp9fapfzp/P/T7408O/V7+/a3Zbzjj9LPinIcffDTd8de70lFHHptW
W3XNtPaa64a2rib+tdn3s7f9T3/ys9DvH+zS71u4Uu58xn833Xhr6PeHZ9/w
H/fcF5r+WWeenX6z+57Z9z44/enUM9KQiy5Nlwy5PHL0jzjsqHRw9nH/dvud
6Zmnn2/hN3uWDR68RlpmmSr/XswGHxi2UUNbf5+Zr6vOr9qr4if4SHgePmSp
6Vj4jzclb2JijrpN2ggbqT313e/9IH3xS3OkOeb4er/jq1/5Wvram3zgeL/4
hS+mz37ms+kjH/5I+uhHPhr5qJ//3OeDF/7KHF+tj6/k9n016ol1H67hp3O+
+Pkvhlav3phcMJwMbsYeh5+K2tQLp3323jd4GXmtaruqx3jzJOTfR5324dXe
XcYH/19MKbvXqm3YsCVFI6pyBp9p1aMz93CPod/nz405e9wts+wKwQ2zEROq
ARU1n9UZrffc4B/Qovk0+EqYF/cYOe0Zd7MvdHQ8D7251A6mhctLUEfLHC91
JmBt1zA/6MF45idrfuTUmr+FrdmA4B+yfcHF8jtKfim/6PTsH+BXzSO8ABsa
+ffZHxEviztg5/QFW8U+aS+O1HnsoDaxr+yOc+zzETFNsYftg/F3OWX0aLEG
8jY8H27KZ66PO+V/yLViu/DEfCifO7+8A/PbngZnZJvRzF1v9vvIWgtyRL35
/C7ZTvc86aTT0swzzx5+jfdjv0E1PvA77DL+RTyN59QGXJU24obwWDhT78Jz
sr/eBfsuLoEP6Z14LmuSmpb8RnbL+y35LTimiDfKvhBuL/Yif7HisLwrtQj4
wHLKxGCLY7ZGqBlgjXEe/8419YnP+ID2E/BOPEMZV2xjqVPj/u7F3uDZBq+6
RhXjldtYriXHpaXJhkbbN6D94pd7VuPY2JHfsuqqq4du9P05v5+++fVvpq9/
7RtxvBn26iv/85X0pS98KduoGSNPHtc7w39/Mn1uts+lr2Y79Wq2rvv4/Oyf
j7qt757uPWGv8DP0r+nfN32a6bMzpfminutv0zVXXZPtUV/Yq0nS7+v9NEq8
RJNHbPOU4/rzZo04pG59vVvbbur4k7T2dWjo7XnVqg80uusZeh3dbSjxAuXz
rmuX63fEAIzunTfUrbOXcdrBSTbPHz0uDRTn0I7pGiAOoaPfu2z9hPqvV25x
nTPR1O4HjpMZ25qDncer6EdNvW9sZ9xCz1iNiThKPmEz5uTNwEnNGhGd73Rc
/zHV6900OHpcnBgu9vrww45IO/56p6iDuuACC6UffP8HYa96YZg344CfYCl4
6zMzfjbs18c+8rHY+xne+p/AWxXOGugIWwZzfe3rYXO/8PkvRPyRGq8wVrFh
cNeHP/ThuB8N7tyzz01PPfmvVg2DUj8/9Hv7Yrxu/X7S5gi9iR8DcwQ3WPOg
HWOxET9T6q3LY+cv8Y3U5eJLWpdoP3R9esk+9X6gpcZqv7iYBicND/6zxg6w
2PDYw/fB0Ltgyz9mXGCfiJJPCVPwO2hgfpef5f9zzf3j0PqdW2rwiHeDnbat
YxGt91X+/WOBF+b72S/C94QFrO/ui0dtHvLdxVpE23J74Tn4Utyq78IBF9R+
kZquNDo+Jq7Zug1baBud2t+H1NiSHwnr8sddr9Sag70iLjzjSrlapU4RPKLN
nlXMeon7EPsJV6y19nqhN8kb9fnYumaKZxDP4G/wFn4Xl64erHcP/2mX+2gT
zAVjwWDqxBbdD7bxE8bWVv2pra5fbIK+5UOXXGjtpV2KM9IXp512ZtQ68jlf
HZb1XuEqnzlKrP5r0rFeo4/YS7+H470XY8r+uUsvuWz68Tzzpm9/6zsD2Jav
TdBuvJ7ja/W15/ifObKd+kKa8dMzpo9l3PWRjJvYnsBeA/iGrfbNUV2rYEW+
5ayzzBY26j0N7OXgO/JDxTftu8++6c477ooa3Gq2TTH9vmHnmpySscV+HJVt
mHFrTBo/o+p92ZvrWrFBJa5FHK3xihsTVwvD8//kipor5iDfzxgv+le3Hl3i
Asw5Gk9wZbUW5CfNWK32osGwV+Yav4b9Mk8OPfSImOPa5FnEvahxX+nZZ4Tf
qU4ZX8U85Bv5Dl+Xf0YrYyvNXbVG5MTHniOPPBHcR+Tx5/lnnkWcerYh9Cu+
yInZ/5pvvl+ET8rWlT0vm75eWfcjPi+v7+qg4Yr4s3Q86xj7g3cTn1/t/9T4
fgM/jqrXEf3ODvN/tc2z6mv+l/fSzL9vYnbamDx4z8xHNU/vuefe4KbwdPwz
cTf8XPooP13fs4H6nI33d/UGVlhh5cjjtU54x7FHQO4TvqN4BH3iHbHZrsev
dR12X8xB2Xe0iS8H2q9mYLz3xuj3wa/W+r0xcsABB6Udd9gxYhXVXrSvYviI
NVc0WY5sp/7ny/+TZp9t9ti3/mMf/Vj6eMZYuC0+41dqGzRhjFb7i7mdfE06
PVsEW72jZaPemd7/vvcHjltumeXSSSeelP5xzz+qPPx/vzLV6/diJ2mw9F9j
HjcwrGsvmu73G3U8sl1iH9iYB6KOza2Bv+AJOMoYNWato+ZXtb9pjzj2eszC
NGwlfCN/A2elBoU5RV/+bcZybJZ5VGoGwRqwl9gmn6m7b95Z12n8pa6QOYMD
2WGHnQPjlFr+pd4ubdoeHJ4dD89OscNqI/n9gahZWNVyhIfgQXPX/NSmhRdZ
LMa5WOFW/bV+fn31mZh1mnnEJmabVepysKPiDnDgLd94AJ8v9kt6+vloG5sl
PkLb2Q84IfYie/TJei+if9V7njwZuBoexAN512r2awsejA13XdwZ7GUPUnaN
zde36h3Al2WfKZhLfJj3b33ymXVi/Q02jpyeEgPbjn/s76dN0++nwNH5a+/P
X+k+qfp1mn4/5Y5p+n2PMft2ON6C+j28wCe3lsptLblQLd57VCdH3cTt/u98
cbbwAZxgvRKjT5exfuEFSt2tzvWzwes21hCxAWJv8Ro4H/V++BlRr3N0tUei
tQ9ets7KQaXHw/rwuDxqPovPnOva1ldazQ477JS2yN/RPn8XKwfT0FMivzX7
CvJEYBHnwxz8rKp+Y1+L6/Ye8Qxy0tdcc93QxUpsNcwgnxiHtftue6TddvlN
5M8/cN9DodufWOv347N/q9Y9Lf2Yo46LfenV2L/+upvSzjvumvb4zV7pL2ed
G3vr0d8PP+yoNM9cPwn9Xq37lnbv/dQ18kfn39XJV89vt11/Gzn7ruf/vice
4Oqh16ZHMxZSK98hFuDM089KO2y3Y7o8+1/iBcWZwyL6FraxrwK+xWdqkelD
HA//LPZqw9/ln3JEttxym8Ab+i3iPBu+8VSj39fjjT/r3Rkzn/nsLGm66d6b
pnv3+/od6gi+98083vPeyDstvsl//dd/xfGOugar9tC1povf39M6v+fx3vYR
2v07ah651vBpYq45y0yzpMV+uVg65eRT8/h4NL08/uXIbVU7dmL1+7JPE06B
Lr3Y4ktFvkrx25vvf1TL9x/XYU+MPTiXLi5G17gyT+FXWiqO0PWi5mGXvtE8
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
a+1xE7kH9z8c607ZI896S8+gb4XuId6vxSM18t1Gt32BFg/zz8cCe8trx//g
INyvmSPnvtZEflnkhec1HAdxYF3PhxYHD0Ttvtxm59srBk8g1/qc2Aft8Vbt
IWsqnQeXY92D/9dYc53QdeGec8vegMMq/offRA/br651RitTR63p+7n+Bedf
nHbZabd02KFHpquGXhs16unoF114SeTfq2l/2imnR117efPDcptvvP7mtMvO
u6c9ss9ydr7HqOyv0O8PO/SI9IPvzx3f/ydsAoPgmvPfafywKGwpBkAev9z/
vfbYJw294up0z13/iDz+S4dcEdfyfbr9vRlzRV397CNutskW2R//c7rv3gfj
PRmr8BN/hcaG/8FJwQe0MrHitHy4jF6ozgINTv86X0w47FhqD00teKGMa34g
3eyM7Netuda66dMzzpT+6x3T9Tyi3vwUOIpvUnEy72jo7u+K/xcueKD24Y4d
uJhuXroche+Rb/bD7/8wHXTAQemeu/8e9fOHPTcs9hybaP2+3kv53IyzacN8
98Kbhs8+ss7NfnFMq15z0XZKHWdx/MYYjoSvIPbG2OPTwMT4SXHKMPPAMSFt
bev5us44zM834HvHfh4NXan4t+Y/O8Ze4xthbL5/iefV5lLHy/n8GfyI+nzs
u3EOi8udwHOaDzRgfr04YflNpUY3jF3VBNkt+Hr52uJuab2ekY6Oo8aj8oXY
HxyOHEbx1fwffcTP8Hxih2F4HLnv4FpxPTgi70MOvb7CJ7PR+BlzFRdJnxfD
bB7bC8U7Y1f5X3wDfgJeQv+IK8bflprZTb6hm3+o5llVy1l/Rv38mWYLH8x7
9Uw4HrER7s8Wsyn6CW/GjuC5PQ9fxnogn0MsxrW5TXLKfEfMuT6wDrC77sUP
5peptc9fwpnj85zrOfGw+qHs12bNwGX7XNv4q/qz0u+Pi/s4z1qBU/KecdB4
Qe307i7PfeQ8Y4OvpV/1lTGkxoBcHs9uHaJnlHuN7loPO/aZ6OXz4ODrnJAz
Gvq92qlf/MKX0gc/8KGW/Ziu3nt5chxN+xGccSNXq/NocDb9rvHODjtW8cWF
33lXB9dT9Hvn0NXs07rfvvulp//1TNilSdPvx/bzZcvn7aOtjU/s2lLtg/5y
i/8Y3dCXu2vp9/VNDCdX2dpO3bb9t/Z864pf6scdDuSzd9bpb2pxlX89YR28
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
r72MVz37oXmMiLGAV+lL8K39mfx0bc9urwEY2nc69lyZ3P5kw34b994fbsMe
A2pGrZPx88ILLpq+863vpS998csD+IOT0X61MNjMacbs36mbX2re+50NCnxV
+4m9sFfzenCXn/ZAkpfbWT+/0sdgsrnnmjvttONO6Ybrb0jPPft8+Ipvrn7f
354112fzg5ZFW8URwev2KuNzdO6FPK6toebvjqjrDqojKP4k/K88ZvFYxjRf
1PymkdOe+KmFz+q31tc20zxkv8x5PqM20HvpQ+zT7bff0WFPQ2vJtsp84QcZ
9+KX+cBqwduHA5fFnysYNnL687WPPvq40Lv5h/w8ccL2h2Z7+SnmLdvJN+E3
mVt8SDqZOSlOnO6Ph2MHfzLvz2J+8qWaNajb8QrtdrNxakCvttpaYVdxR/ys
lVZaNXxN1wztfUyjzs+o9jtzTRoW3Y0/S2cXD1D2s+dXl33tyjtr1aTK96ff
sz8HH/z7VsyWOCC+p99xVexZ1E/JtsU7FcMg7vn3tS92Z7d+HzFIVXyEtcE7
KPUL2FvXs974vrwfmhxuUZx9yf1trpO9cPikrM2vxXYZH6UWhfz7ffbZL/tN
26aVVlwp/WieH0Ut+tlqzur1+4M97EvNTcFQn/zvT6YPfuCDwWXZV+gTH//v
8PNafNbMbSwWvFbNg5WfhXNzzU/O8KnQ6Eu8ZOyvptZbtlmfnOGTsSfT/vsd
kG6+6ZbY44PeQnu5/rrr43iSfl/vQTop2v3k1O/xFsZg1KjPNkseeeHei9/S
7cfEfhxPP9+qQStmCY99RF0/35puzOOJYAp2o0PHHtO5nrom/MW2sVnmIxwK
t7MXcmDkPTk3YlRqXwbWwLnhItRJ1HYxQ+YGDFd4jrCzeTyak+wEfgqegmvo
z2rgbpjnJZslJjJs1p/+HPPKnGSncF9idHBocCHswWZo3y8WWDjuHXMwt6+/
j9I5v3yfjdEWa4S+Wi+3mx2Bl5p+avfcLDx5sVnuiYOS77H4Ekun1VdfK3hA
moQcSQd8FnsmnnJ64GRxV96JPseFeQZcp/43X3GE9va8v869b9Z3Ma/ZVf2B
KxWvpC1yRsSvus5Ndf59b996KjjqtngW+j1thA7y0vi3vv48MTpqTy20+esr
3SdVv07T76fcMU2/7zFm3w7HW1C/t77jJ9h7fIt4tp774zRyiqwtVS2bM0Jr
wmNYp+M58+/iZq3jPruh1qKKrtPUewo3BZfTqWB0+Nn3aEs4INdq5nf5Dp2M
D2NdEzeHP4BZ5KLSaKzJ5fkKHhFnJxczfJm8LvItxOZG/eQRo1qxiHwC8Qkw
ynXX3RTrujyI9dbbKHgoGMX1+HHwwym1FtWs9Rj6/ZPPpGuuui7y4Pff98DI
paeZ08vPz+vruHy/Dv1e/fy8bpX6+favP6eh3x+a2/697/4gHZ8xgNx5OBL2
9PeSf+944rGnItff9133/nsfjNr9auMfd8wJUYff59qhdv/JJ54asQJrr7Ve
Oi3/v6nfi+ug79EoYQvPjn+Cc+BD7wce0ecOepd6jfwnfo6YjBfr2gtTG2Yw
pjwLbRZGWmWV1dNyyw1Kg1Ya3O9YaaVV0sorrdx5DKqOlfodK6VBK76+g2/l
WssuvWzESdsb9nvf+V7Ux156qWXSisuvWJ2TjxVXGBQ/tWmVlVeJ72nXKisP
js9WXGHFtMTiS6S5fjBX8Dz8ppKbHz7Uxz4Re7ZustEm6eKLhqTnn3s+vfzS
y8HJPE+/v+nm0PCf/let348aWL+vuMTR4UPgt+ad9+ehveIEumvvlnlS8ofY
Dlwjf9j3vRM2yd/40TizJZZcplULo4ynds5guwYiHx9upevKjT+y3q8SlwNn
4wmaManmPt6Grkq3ZoOiLkn+CU+rfVVq4jmf/TF2tNVYV3+P/2QP2+B36PcH
HRL+FDuFh6RD41X4BPh5OSHOU1PLvau9xQ6LNrJfaiayT3yYww47MmyWucaH
cb8ds41QX16NRc8kJwO/vfDCi8WcVZtL28T74mrY5dDUs71nx3yu7gTcr3/M
Z/4d3kZfs3u4I3UD5CXwK/lS29T1vp6oaxh0+5XFzuOtcPc4KP4Ev4aNkH/P
d8H/sr2u5X7ixfFP8uf0F75J+zbNtkesEC7GuMCd6Au2l2+0//4Hx+/elTUJ
74MPl5+Hj8JXea9irbwTR9H+vVfji/33LsW944C8a+/32NzfePbQ7x+s9Hs+
MT5JX6jBIu8eD1/2eTsut8NzHJW/EzmI+V7eizbekvtAvQ/vsdTafy32Sx/b
R8GYw+l7RrUd99xjr7TlFlvGvtKDVxkc9oBGxiYVe9E8Xq+dClsV9m5QWmH5
FbJtWjr9aO4fxV6w4oF+Ou9P05JLLFnbo1UGtI3RvkHta/kOe0VLUzsRLyMe
4P3vmz7ikOb64Vxp6622ThddeHF66smnojYirB/6/S23Ba9c6fcjO/zv/nni
7fHba5/zqTFefdrxeo52rnCTg27m8bfzTvra53WNi0mJ5/j/fIxqrK+xf/l9
D4b9PPmkU9IfD/1j2nuvvcNerbv2umnVwasOgKcm51HZHxgJpoK3Fll40eB+
v/Pt74ZOtfhii2fbtmJ//NfAga7lOuV3e6/OM9c8wTXLs39Xrd/Tv/DX6uYv
u8yyGcsfn/5+zz/S2L5x6T/Zd4Qrqhzf62L9Cf2+bxL0++74o0kep2Ojjjtu
1RpnzYJVyr6Z3ftLaJuf/EFrtLVbvKTaW9Zoax8tWf7VXvV+aPAbvrJV56EL
O/hpDy9tsKbTku13KqffWmwtFTNsbpYcsuIT0qZhjaWWWi64Y+fLY6PH9dV1
aEvsGzxDw/acMJuYGjGk1mY5q+IYY3/rkb37sfivOHd9BLfJD4MJqn3bOmtY
vFjXE+ArRnxqbhd8g5elv7f0+3zAOfADv1ONfziMBqYvfL+V29mwZ/wtOj2s
CDfqY5+LLfAexTPoG3qh+OvANRmfRD0rNfJzn+DrS+y6v/kJi4ljwElrjzhB
/aWvvUt/97Ol3x9RxUmGfj+mXT8cr6BmXqmLoA6HWFqYSVyA9nkfcBl+26Fu
Ob7eXlr+7/plzMV7eJP8yRJvzO+AKeUXaKe40O23/XVaf90N02qDV+/AMW/K
0fIBV0xLLbl0+tl8P0tzfm/O9I3sL84373xpycWXjBghPqKfsFX3Edis9m+d
t/BCi2Tb95306U99OuKM2nmu70gf/fBH67jJbdMlF18SPOa/X/p38F5vun7f
L9ayvTb31XqyWCh58zQn88n8LrUcm3an5KM+V9eIoeHgh9SToN/zi/hd1jB+
qrgXcShim4bXeyZ222ifGTPsuTgX/oXxy2/CV4mx5pOqG9nUhcbUGESsAH6N
vePX8KXYWPWS+WOxx3qtv5VcBPbS+eYf/Z5vaJ7H3hPZptB2cDL0ePVdaD/i
kcU4bZvHsT4SZ83u8W/mnucnofuFHeyK6yu4qa+OicJtskFip8q+KXxfNpE/
OrTOse11nfIO7IHC7ntnbB0/mBYoZoEfHNzkC6M7c14bMQR8YH5riVXCHbov
O8bHZMOOO+6k8DnZFrmxbBq91Hu3RwiNrZl/H3xC1Ae/L949P1X9F76hmv64
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
0q/qS8N9v6nrc7tuqZ8P96hjBD/6HnwjXrTEfFS1DR6PHFi+JO0SroT1jDMx
9fKZ5Rfzx13HgeN33l8yNoOj1BAPH310Oy7izVinm/p97A+Y+1MurnF6U26v
Peouy1j2jfD7Jg1/te1Y8RWPPfrYdPhhh4eveM5fzokYx7BRF/fHgBeH3bos
2+PLA8f96bTTwxdcbNHFoo4IX7HktvopV3f33XaP+kbDnh/W8hWnNv2+mUcq
fpwtES9jntrfreRvt/T7/Ds7AvfTv2K/hn0PCB2EL0SbofnyV80HmJ9fSZsx
N4I7quODShvZplLnQ412cStsKT9Km/BdYtTZ2vY+S1X72RzziyanHfwk/iAf
wty5s4d+T48X180++un77sG++Z5n69ivKP9OM2FP2Nioqb/xZpGPw9829xZc
aNHQhsxF/nbZL60Zi19ycPn4dLN55pk3uD9rvb5hs/nhbI26H2xdd/2Qcr1S
Z0/NAHYYzyheQX4sn/GRR6p6joU3LLFbI2u+is3WPxE3lm2gZxCftf76G8fn
F4R9uTn0R3of++U9Gh/WCNqavuBH8pfZRvcpe4XgDO3rKU+FLWZn8QTeIT/U
+qbugOec0pixqk1Y4dyCvXAol2esdfedd7f2GVNv8fKMW94o3mog3w6GOuvP
f0knHH9C9g+PDIx1xp/OCMx1cbZRHb7pxZVdYt/KNa7I7YbV+JQ7/nrHtMjC
i0Suvnz7dzT2DVlowYXT73/3+3TfP+6LWpHsUxzZVj380MNTtX5vftlLh82B
D+AvXBhtu/gu5Z0GD5XHfsl9kTMu1gWPIZeNHs0+0ffZCzbMGmtOWOvL/GnG
wIyt55K6R2q74+Jdz9wXbydfzr5BcFLhzVp7odX7ysqTKDFE8BBuBpdT8J5x
yS7CFsH50+9rzYFtLDEC5lPkxRVevRGvCCOLoYHxaAa4fbZBXgr8oo2eM2Kr
6no9ZQ62n/XlwHew0ODBawSm0U8+ww+xe/SH7pih1lHjVnyPevf2qMd3wVqw
rvcXdfwffrSjFnAz3qgVixixBMOjzfqYDTRfj67379SeEjNRxkDJWYet4T45
+HhA3CDejl3DJ7KD1qdWvFo9zqYafmOaft9fC23++kr3SdWv0/T7KXdM0+97
jNm3w/EW1O+tzfxSfrc9ZfgutNrHyx5+LR+nL9Yx6wiOQvwbjY5WDvvCzPQR
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
+rFvzJbbxHyXD8BudHBdce6ImCPmu3xvc8S57Au9XszbyHofQ+PS2g0/yUEo
c7lgGz/pwWJPxECuscY6oUtbk80zfIr5snPYsVsCG5TYPO3RPro/vMhm2SPE
PDKf4Co4qZwLF7B7B0T9/C2D4y/7C6mp6Brmrs8Kjip2XTvZS7yLWECxPuaf
9piXsKEakXRwsUhh60veUH0dz+le6uyzF87XV7C36+CZYCl/c5/gfup9YEve
D8ymD+E+OoJ8RpiG/Yy6jTvtFvxZ1PeFc0e3c9+LrS84Ovyj/N7hbHkgDlx0
qdOCL/Qeqr0Pxtb1DkYHbycmCccK23nP+FTf856NIe/N3lzd9Zqm6fdTwdH5
a+/PX+k+qfp1mn4/5Y5p+n2PMft2ON6C+n3EZw5/MXI7YWV7ttCQrGc0Feuc
tQSHImeBFmdNwdfwJ+BxOJdvZC2xVuNUaCg0M5iWlmVNhEuq+l1PRLywPvEd
+JlOYz2FuwO/ZOzA9xAfZw1yf3HBNCP6GoyAD7K+2ueMBq/9/K9e+j3/A15Q
xxoOsbbR/2kvcC0M4Nqe1zqujgBshJ/AL/ADiq6nv/glPltjjbWD/3GuZ7eG
8tsuGXJ52n+/g0JHt6eLOvby74864pj0l7POjfz7GzPWopkfnn0C+v2IYS/G
3vX77Xtg2iGvyX845I/p8bwe3y1XJPsgX//qN+PnjRk/0eXtay/f/q7s311/
7Y1R/36f7L9tuvHm6ZTcl3+7/c44T869mvz+Rq//11PPRl6+OvyXXHxZ2muP
fdPKgwangzN2uin7rNZSY9U7o/0NGrRKcE9Vzu8hUcec1sXn4aeFhnb3vYEb
1ExabrkV453jOmCOVr26qQUz1DjGe4J1YSNxCPBUT3M3wHyvYntf6Ti6bcDr
tSflHq3//7vr9+77qcM6dlxwLNddc10eS/ulxX+5eJrpszO1cu/f+573pjm/
O2faZqtt0tArh4YW1rpufbyW+vmlX0veQfHp8QDwOA7woTLH8vhjN/C6EXO/
wcbhc9xdn8NXlhPgvcg1Nv/p2GrG71DH87MVkatd54f7HX72N/aJHZM7AH/j
o3G1YnPZNvf2HXOdnq2tMLfvVjX2h8fvYneMez4D/qavrhvAR6fLqhnAR2Eb
jR/5SLjRUtee7eETOFdfLLf8oJg/Yv6NuzG1X6Kd+G52jxbPruFZ2ShaL7uj
podnuSbb6sgryH3mmvwG3O5RRx0buQHOpQU0Y6/5F/wCdp6fI9aKDs+O8sfE
SD9R17Sv9vCq9q+lUYvXFocTHMsZf4nnk0/CJ8TT8vn0pfeA9/EOxEfjuLxD
ttFcE+M808yzRX9ph+fVH+y/v3s+bTBO8F6rrrpG5OfH+pFti9wIz03Lr2qQ
Vf6We6pPIN/OWqvfPYOYNLyONmqba9vHUFyFWHTXxdGJG3Cemg/4vVI/H4cX
9Qbydfwf/2UfOL6dscE/9N7YQtfyjmNP3NwufaaN3qOYMuNfDps4ATXfnPt4
HQc/qfFN/McSc8Lueq4wPSUfamL/TQZcOKAd67Ivzb/hgtmX6669Lu21516x
Z4j6repOB3/88U9EPf7tfrVd5Go417M2/02afj/2VbT7Kb0+TTsmx9HS7+uf
1hU4VE2lf9a5XR37zE8ox28qeJ6p/mhobcGz5zWX3b/rzruDq31DsdIbZK96
2s9Xu0b+Dp6B7TnqyKPSqoNXS9/632+lj37ko5V2/573pc9/7vNpySWWivyz
++69L72Mn6qx3YD59/W+6G+mfs93o0fBxfw8ulPsIXTFVbEumydwwIO1f8QP
grX4CaVuUcRLZr8NrrMe8pf4Zz7DiTpXjLb1CwfpmeGH/2PvTcDkuMpz///N
esnGTUIWsj73AgGS3Nz7JBAgCSHAJQkJGAgYSAzYBmwCAbxhbGNjG6+YzQvG
2GYzmyXZ8iLZ1r6ORjMjjbaZkUb7jEbbjKTZd42k+f71flWn+lR1Vatrpnuq
uvudxz9Pq6e7llPnfOc733vOdzC/Dd/VuZe3361+AvwC1B2MMfA3xKDhe+C1
WeOJ8SQ0Lqy/NHl4oLfAF8JxcA3jVg5Rkz8fvh3GdliXPuHp9+jr3/4v79Tv
IycR7hPjQsxpCOB8Ftes1+ZcA3wyaIQ4P/bkgi8KPxf+FPxUaIDwtZAbF3OG
b3TK7COOf4Nc+lH583EdyOsDHxYaIY6LXNbwU+BXYL0Z/AycB74PcjEh7g2/
B2M3f6+nybO61hRjXvhjuLc3v+VtmlMI5Y+xHvxaN2f/Y+pzIh8B/oYc3Li3
Xc5zgfaGdcT/9V9XaB4p6PG6b48z3oZfDh0QdQbxc2hi+BueOfx3lCFi9Cjv
N/79m3UMjucHHQ31Cj4vxvIYb+Ja4X/Bp0EMAfULx0R9QV0ItAWrby8Hxs7b
+j18S5ML/MyZEo/3ZmK/JOLfUbbrXDTjY+OqqdWtr5O77rxL17W+9HdeqvmO
oI1Bu4cudtONN+laf+wljf3VdLxr+XRZ0e/NfvBmrTnqEda7w2eHNox2DfuK
8eQhLy8z6ifGCJgnAn0KcSdowBjXIOaDcQr03AndL2NA40vQma52jmfGhxiD
aGwLMSrsh7y9Tesuxkqf+tRndV6RWfuBc5u8zZjDjDaAnGFoa/gu1tzi82jP
GPPgmLB1+M6djh2ArYvKn4+2CDuBto77hv2GrcU8G9gKs+7SlBXKyKyFhV19
97vf6+eaQxvEvSOmBnuLXHHr12/UNojrMfeJ8TquC3YU8x50LrszFkbfBbuG
1xj/QL//srf3SS4O6OZGw72hDHG/sB3QIfEZaOw4LuwWyhnrbBGXM9/BnAb4
E5hrpXtAO3Yf+jrsPfoS2CBoXxibwf7AnmGMCfuJuCPuGXMWoL9hDAyb9xNn
/A5bhO/ATmMsDZsE+4p+DmNijLnURjnPC3+DTcbf3vveD6idh43Q9e9ePUxD
L9M9W7x9Bc2+EJgr1ebYeZ33PJd2y9ibkN919szZWH/LxLagwU+OT+qcJKzh
hx3669e+TucXYb09xocv+c2X6FqUu+68WzY1btJ5oRJxXGhAWdbvTR56kzMH
8Sr0x7AFiDOg7sNeoe2hvaOvR0wF+3CgnSMugnYBWwY7h7UGo56/A/8E/til
l16mMVz4FPgsbBJ8Cfw2NgttHmsnUK9xTtQltDnELmALENdHnhKMnWCzcE24
Fo3P3PUVbe+Ip2PtA+Ikur7A0u9huzAHDnEfzBfEa8Rx4MfBxzH5DZF3wMwZ
zc29dtcH4V7hR2DfU5QNfB7Nn4KcG479hp9pfDi0dxMjhO+Gdo5cQGY+A2wW
5pminLAmCPbju06Z4++w36pdtLo2C74qfsMGoAyhm2NNDrQLzYG4rVV9N5QT
1v/g3nUNmxkPjU4G5i4ZPR5tFLYXZQ87iPtBXBJlfcklH9O4IvxIaCAoc1zv
Cs9m4tmj74Ivh3JEDAzvoV7gM/Cz8Ldhzx5kKr8g9fuc6xb1foS/h5fU79OD
+n1Ena0GEun3E9nAm5eGa4Oth24GTQprUdGHoo/C+8glBp0b+aKxHhv+LPo5
6Ajw6aGLYYyP/srsh4X+COsf4JNDK8L+z/DTMV6B9g/NDOOlT3/6CvX9sd88
xsXob6CxYcyFa0GsAdqw+R7eh+4ObQvrG83ab+QPgu8AXcz3Yy39Hn0jrgXa
CcZn6N8vuODf9L0HNEawXM+L8QzuBXEFzM3TvtjpP9Fn6l6BfUM6JkJuZ+yV
iLJAWeGYuGf4QJj/9/lrb9D18q3OeAtz9KHfY6091shPOmWk+v2P56l+f/RI
tww5/Xy74xcgn/6Vn71arnHGHvV1DZr//m7HL3rlK14t1znHhOaPnPfg+cVL
NF/+vV+/X65xng3W3kP33468S92nVKdH7v4v3niLfNoZR+LzyOu/1vGZkAfg
K46vdPnH/1Pe7ZTDF274oixzjqlrzk+541Q81ze/+W06foJ2hxjc2972dtUO
sT8S/CijH2Lci7zU73PK5PLLP6nzPJGv2547mXp9N3XeGfcaX1f1e28/b0zZ
DXMOy9LPTheH0fBLhTGU6C5MzMQb12D8c87S8PH3qckpOXb0uOZFu+1Lt+k+
rD//c7+gII784l99sWr5V11xleZMGx0Z1dzTxmaZ64f/ZPLnbzL6/UBh/d7O
q4E2jPaC+oK4H9oK4oJov9rGHDB3FXYGdQm+PLRT+LEYF8NewNbAJ8eYBu0O
8QIcA7457AJyhEHbhk0BaHfQqHWfzi/crOMNHEv3AXXG4hi/YLyOuozPwp6s
cUC8A2shoN/DzsBHx/ngf5v4DNZoq37v5ZGFzcM6DNwX7BpiDYgNw49GzAHj
EIzjMSZAbBP1DDGMt73tn+Uf/+lfVBvGuALHhA+PmBLiu4iN4ppQFrhPzQN7
55fda3VsC9ZSIEaBPGHI2YU1XIgtYT8/2DDEg3D9OC7KDW15vXfsjzvtHHOC
MX7BfHy8h/g89h3BGAXtGDo5xosoP7R92Hgz79fMz9b53o7NxLUhtoX4rT6D
5at1fhfsIXLi4xkixwBiHbgmnPtPXvmnWkaIzSLe/853vkfj3u7ebRs0ZoT3
Mf5AfPvCCz+oc8Bgb5FPDP0Enjty9KJvQpks9HLom7nqGN8iRqbrV5z6gLgW
bDPGnOiLMdbC2BJzDNAvo67CtqE/wfgPdQ7zM/B9jO+Qq0D1+xGj39+pa8lQ
juh3UP433niz9mXYcwFlgTqOXAH4LMoD9QpjK5QV9HvUHdTN4vMjB4F9blH9
frceR93JCJtR0K6U2ucpYLMi9XvLzmBNPXK3vuqVr5L/8eJf11zTsFnQwLCn
61VXXiXr1qzTtWKIP+naCutY+Hex+n3hnPnUZ3N10SqLsRCB78R8LvZ7BY4b
+EzoGFHHDx8rfB8W5rmb/MtYF4u5RmirZp9H3ddpPBcXj9d1JmZYXzLg/8yp
n5WzV4h1I47Y2tKma6pKbotmar+i4svmp4ANVe3d8Z2Qp3X7tu1y7zfulXf8
yzt0D1asDUPeEMxB+oPf/0Pdn/r73/u+HNx/UOdX+sc29ms6p9+vL7l+n+S5
uTFkaB3oKxGf/MxnrtJ5c9A20P9hTh/0D/Rj0C2Qu1V1Dacvhd+EPhRjK9Xv
d+11Y8jOmAnzsOGfoL9HX4s+FOfA+BL9M3QYjOHgv8EvRF+uewhgr88Bdz0r
5mDD98C4Ev4d+n+0X2j98GXgY0HHRz8LPwNjEqPf6/opb+8Z6NWYY4n4LD6H
Phgxavir0LfheyH2jPuE/ofrs0Efj/vEdzQnUsdh9UvgQ+LaoFPhuuDvYg44
5nojxz60N/gcOD7W5brr70f9dep4bvAr4M9g/iJ8EMSEoa3DH0beO4y1UG7w
CeFXYMyO88KPhX82YHJUe7kN4A/Bv0O5v/av3yB/9ZrX6VgXdW3MyyWLcTvK
H3mw4Echdg+9DuULnxvP/6KLLnb4iPq38GdxX/AV4btBq8P8DvihF77/39Xv
0WM4dRllCB8ZZf2e97xP6wzWw+L6EPOGPwZ/Uffbc3w/jCnh2+GZ4rzQLFGW
8J90v6aRiUDOp+L2PUlKrj2E9XvkEMH83rNnJacTFfK1yoFtp8z8yKgf44OF
xqX4PHJ/IK8b9j269ppr5bWvea0/5wj8yi/9iu4BcsP1Nzj+2XrV6O1xIsaf
5t9R+r2bW6o8fUu8fp+LNYx7+S8wbsTYBPr9VZ7mjjk2GttyQFtAe8OYB/nd
oHMiNoBxAcZEGCfBVrk5PCZUP4FujLEBtHnUZ9Mm8XkcE2OOG2+8RfOLwTZi
bgtsGLSrU966Wdgm5FhDe8J30J5hW2B3MOZBG0K7xdpMjEcQk8J7sA95+v0B
d74x2th3nTaJa4RejjnJsEWouzo/0ZTdqKffO7YQdhb2GHEd3APiaRjD4zeu
B7YY40yUA8bbuEe0x2WezcY+d5rX0pvXg77enh+AsR7Gblgri/PAbhgbCvuI
ufUY48JG4jdidSh7PAPkcLvoQxfrvCHMfXLt8QodD2KsBVuFMTjG9ZinDo0f
50TcCeeABgc9HnYKtgw2G2Mv2H6ML//9Pz6s8T2UkeqXTy/SsSGuBc8Uuh3G
6ZgLhueNvKAYe8Ku4XnhWIhHwja+9a3/pK8xfjc5Q9089jOJfSXx2SPax2hu
ngbqG/pAxG/he01OnHbjRnPpY0WYp2kz3zw0XjX57uFbIT6FfEhPPfmUfPYz
n5W/+PO/kF/95V/Vve4xvwhjxb/727/T/e73tO+RocHh/LGm93MopN+PQr9P
Spl9ZrevGdd1Bmj7sC/IV2NiCCY+jb+hTsPfgU2DD4P1Aaj3WFeAPDiweSYH
kM5/XLVO2+kVV1yt2i7qMdof2iFsoFn3gn17MH8FNqtPx0SuvlpX16D2BWvt
EK9D+0Jfrf7XD36sfbjuU+FcG+IS+CzsJvYi9HV4b14J7gHzEy677JMaC4S/
iXuGHo0cIlgvBjti1s7b865NfhJoAFj/YebmmNy8KBvYEdibBx98WNdO4Fph
22A/YH/gM33601fq3ED4qLAZxp9A+WNdB/J8Is4GO415ErB3sNOqXTh2D+dA
2eM+dM2P087gA8GHNJqB7hU1PJ4379CsIzDjJNyT6iXOMeHzwL4jrgM7d5mX
mxT+EOYOwi+DbwV/Cf0E+i6UB/o7HAexRPjJ8BXhE+LaUC9wj8Mj9thgJram
PLEG9I2q3zv9MrQS6vfeywg7hpfU79OD+n1Ena0GEuj3ufU9KeP5DOifMUcX
/QDiNJhvC38d/TjWiuI3+jr0h4ibYH4s+grMq8O8ObPnMubba06sYXceIeYS
Y0yOeM693nHgO6OfxhxmHA/7fEEr1j26hl39D3sDwy9A/AK+C2JBD3jnx3fR
nyLmiv4afZ3JawZfAGOIMSt2CP0MObnhr2CMg7EXfHKMK3Ac5AeDz6Bz/xz/
Q+fAffVezeGI9Q/Q+9EvY14yrg3PEefCZzH2gvaD8QnKScvKuS/Ean7qjC+w
nv5E9yldW498+VjvjrXy0O93O37DGseneuG5pdID/2NoXNfhb3T6MWjwt916
h66pX7ZkhfzosZ/IZ5wxDPLgP/jAQ/Low99VoP0/5JQJ1uVD98daf+TIR378
IadPRH6/Pe37ZN5PF+jxvnrP1+UbTvk/4JQpvou1+ZhT8MD939Ic/Sg/jP0w
/kAMEf4O5onjnjDfAv+G72fyTyNHG+oJNEWMWfG88B60O/gjOm709oA045lM
4NT5vZ5+j7pn1sJOwyyHSN2uxNlJy95gPAZdq7OjU/dw/eQnPimvfc1fy2//
1m/rHOWf+9mfk9/9nZfKm/7+H+SmL9yke84i56KOk86eC+RCBFgfhnX5qt83
blLdDH3p6PCoM+4Zi/T71Df3YgSat83xZ3d7e36jjiCOcZ/X/tHWYAvwHnRy
jBWO6DrvEW3TaFPwfzGfB+3b5DpGLAa+P8YuaJuIGeA4iMmg7d3nHRNja8R7
jSYD/x7nwPdgQ6DrwqYYG4fxDvKJmj36cE6MCxAz0TwSzljC7PVlYqIYw+N4
sFM6b2liSn1njD10Hzxn3KL7Bnr2CTFlXDOuEzbIt5VezlT8XW2rlxMdcW3Y
GKwBhz1Cu8K1Y1252kVcv3MfWK8Afx72DWMX5ArQ2BX2SsNY0Nu7HnYUtmzH
jp1alrCfWHuGskM54NgoO9hq9AH4Dp6hO4/fHXeZPbcwHjLn133RnOcJvd8c
C3YWYzv0AagTeKYoL8TI0N4QO0YsG2WBGBPuE8dQW/Kwa0sQj8GzgR3G2BPP
HTEIlDns6/3eXmEA5YF6hng4xlFmL0uMa/FsMRcLdcX0JY95YyHEhPGsMU8b
ZYEYDuZ34/owlwHzwTBew7MyeeQwvwBzk2AfUT/R36BcUXZ4Rjg+njP6UOgV
+D4+4+6TsEnzK0A3NP7ATHKTxOr3YZuRlj4WZbPMjxefgR3Bugrsa/i5az6n
Ov2vQ7v/hV+UF/3ii3S/e6zFv+3W2zRPCHItToxPaFwn7D9H6feI5YT1xPh1
1eN5/UOq49oyjpfHAvr3pO8rGcycElsngT3RPaq9facDunjE58waA53v5O1T
6u4/ktPFx+xjevOiTA5Z0yZMzkKjqeeO6X7OxCPs/Rhze7NO5eZcjU/512rW
6MEuImYF3wZ2IpwHdzx8jNB5h6y9KIst/8z4/XPAefX7tP2qQrbL/MS9J66P
hLlHW7dsVZ/qzW96s65dfZGX1xX61yte/gr5+Mc+Lj/58U81DjEy7M2XDNlH
/Do9dc7V751+CTHP3hLo94nrm/cdHYM5fSjWJSJ/O/pN9MXwr+CLoN9Gf4o+
D/mXoSnhenFe+EuYt/es0x8jfmnaDDRP+B7IrWPWo2u+VM+3wTmQ8x5+H9ZU
oW8e9nItm3VkGE9C78F3MR7FmND4ARiDwf+BlgV9Hj6g7kHaeTiw9yj8O/hX
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
9qXbZOETC6Wnu0emJqcSHQu/8vX7AWud0AyeQYZ8nlJQ7bY8rfur9nKdGVWm
39v+17ToGA5jxe88+h31vZDzqHlTc24v6YR2sL+vX1YuXymNzli640CXnJ4w
+8in/RxJKSiFjUhjrJW1uOScE9Lvd7a1y9TpM8EcjBnM0YbXmBPU2NAkd991
t1z2scvkK1/+iq5RmRifnNF1Z12/J+lx3jkIszx2ua457WuYLSYuCxu1oa5B
ljy/TE729FK/Ny8jbCNeUr9PD+r3EXW2Gqhh/Z6QSqOa9Hvzg3nLe3fv1VjK
ti3bNJacly+/ovX7mUObS6qCStXvQz/wgbF/Yfuu3dLU0CRbNm+RUydP6X4g
SY9N/b5YzLqxCdmxo03z4F955TXy7LPPycmTfdoHQqc269sv/8SndO/5BQue
0vjfvHlPyE9+Ol9+8IMfq1Z+7edvUK1+374O1dWx9h2586H5Y229Wa91/PhJ
zX//pdvulAcf/LZTb/foWn7YZeRKwvyA737vMbnttrs0Nz72r//izV+ST3zi
v+Tb3/6OnvMnP5mvmvqPfzJP37vppltUZ8f3oN+//V/eqd85fPiY7lGiax+c
Y3d3n5SFC5/VuQif/ORnZGPDpoB+f/vtd+n8hePO5+CjY+3/N51rRG4BzE3A
/eGcWI+PXAPQ9PFdzBGYlb5a5VS9fu8wMT4hx44ek/q6esdPatIYsdqvhLFl
/Arr96eo3xOSElWm34d+EBsdGRrRfNpY57p1y1bpPdmbr+0VQ55+f4j6PSFZ
IEa/lwrQ7+FHIe4Ev2rdmnWaM2RocMixXclygxio3xOSLajfW2Yv6v0I24iX
1O/Tg/p9RJ2tBqjfE1IxVKN+j/xh2HMV+cXGR8cDOajj7FQU1O8JyShVot8b
u4q1qph3NDw0onbH940T/CCXIvX7YnHHzNDvkSP/lltulzVr6/y18liDbnT4
j3/8E3LzLbfp/vQ/eOzHqq1/7/s/VM0c69+xBh958aH5I0/9wqeelauuvla1
bpxr1NPvsbZ9/fqNctddX9H18vgsxuxh/R5r/qGlf+PeB3R+AOYP3Hffg6qh
Y408PvNd5/VDDz2qe9Hjc8ivD134X//1XTo/ADo8jol7xG/kvn/6mcV67Cj9
HvnzH3nke3Ls2AnVTLHWf9mylTJv3pN6PpzrgQcekm9962GdN4D5B01NW1TD
KSa3eK1SC/o9gI8FXwnj+plo9+KZO+r3hGSF6tbv8R7mPGI8N+z4SRgzIm+1
7h+dNLc29XtCskkF6/ewRfCnEHcaGR7J2ShjnyTZsanfE5ItqN9bZi/q/Qjb
iJfU79OD+n1Ena0GqN8TUjFUlX5v7I99vVHXXsTae0D9npCMUk36Pf50Tvz9
7QOxmQQ/09Tvi8LeIxD6PfaYhw4PTXvCGTNPTp7VPeCfefY5XX//uWuvl4cf
+a7mvoeuuN5h3bp6XYf+9NOL5ZlnntN19T3OmHv//k556qlFcs0118nixS/k
bO/YpBw91uN8b4Oey6zX74vQ77/0pTtVp3/gmw85r+/Q8y9c+Izmy0dOf1zD
Guc19rzHGn9cJ+Ye1Nc7Y5B3/Zvmwodeb/YxNPo95hNgbX/k+vs77tY5A9BO
oeFDp8H14JrhI0BzfuLJpzUnwLXO9bzxjf+gcxA6OrqCe0dn4PlmiVrR7wFi
DdDDpm0blgD8on5PSFaoMv3e9qnw2hsDTpvxoPW3xLFJ6veEZJNK1e8l5j2R
XH6Q8OfOA/V7QrIF9XvLlEW9H2Eb8ZL6fXpQv4+os9UA9XtCKoaq0+/9i414
7aBrKzyd7HzHoX5PSEapJv3e+E3mx55flOCH6++LrzvQVY1+/6MfPa5r4jds
aHR1CuczWL8OrfzOu+7RHPXz5y9U7QL59aF7o6/EPvCLFr+g+exfWLJc34Mm
/9RTz8rV13xe/2bbXfwduuSdd94jjz76/Vj9Hlr6j378uMYaoeHfeOMt2j8f
PnxcNRNomkeOdMvWbS36GWj4K1as0Zz277zgPbqWvrv7lH+fSfR7HBdxTsxV
wH3gHnuc7+KzRstf/NwSuehDF+s9tLa1q66D82iZpv1sM0Yt6fcB/8rYriTf
Fer3hGSHKtPvjUny1tfnjQMT2qsA1O8JySaVpt+H7FVRP0Uek/o9IdmC+r1l
7qLej7CJeEn9Pj2o30fU2WogSr9v3SnLl6+Snbv2aBxR48ncM5OQ1Kk1/b7Y
tfcgTf3ejzuXgwzUO0JmRaXq97ZNCtvUqPcSgLyKPd0nZEvzFmnc2Cj79+2n
fh+Lawu3e/nzoXljTT3WkkPvxlga2jT2fL/22hvkvvsf1H7y0KEj2k9in3us
eUc+fazfR/8JzR/vP/nkM/Lpz1ypOfVR9mZ8ju9hTsBtt90p3374O9r3Qp80
a+QPHOjUdf5Yf79gwUJdb4+5ATfddKtq9Nu2teraeOjo0NWXLlupcwEen/eE
6p11GxrkHe94t5s///jJnH4/OKJ6Ptbpf/GLt8pHLv6oav3Q5JHzH/cI/R57
3aM97dixU9f2454x7xbl0NV1zNf2n3tuqVx2+Sf1vtvb9+X8efYteYx6zwCc
OtUve5zyU/2+pTr1e9/HmoEtwy/q94RkhWrV76XoOdxJGOgfkJUrVvn6/eT4
FPV7QtImT7/fJVOnp4JzpNO2TQXsVVE/RR6T+j0h2YL6vWXuot6PsIl4Sf0+
PajfR9TZaiBOv1+xWvV7xDiHhsYYUyYkA1Slfl8i0tPvCSEFqWT9vkzA1+85
3iNbNm+Rho0Nsm/vfvWz6WsFQe58k1se9Qf6NXLaY805fFPNB+8AnRzr1L/w
hS/KddfdqPvDQzOHbv+8M8Z+6NuPyn33fVO19c7OI7qWfu/eA7pu/Yorr9Hc
+jiWvf5+/fqNuqYfa9f37jvo7R8/rvo99MpHHvmu3HHnl3WtfGtru6xatVav
Dfo69HLo/9D1ocU/+K2H5VP/9VmdJwBtH334Bz54kdxzz9dUv3fnDkC/d9ff
Ix/AzbfcJh/+yKX6WbSfY8dPqEb/la9+Q2790h2yePESaWpq1vu8556v65r8
Jxc+IytWrpHVq9fLokUv6DVeffXn9TX0fy1Tj7Sfbebw9PuxsdP6rKHfY5+D
1pa26tXvZwh+Ub8nJCtUmX5fZhBnXbUyrN/T9hCSKiH9vg36/eRUcJ6h+cmA
HSkn1O8JyRbU7/2X0e9Phz/kvqR+nx7U7yPqbDVA/Z6QioH6fTzU7wnJKNTv
86B+XyxG05tQDR2+KTT4trb2wHppaOrHj59Q3Rrr4qF9Q+OGln73l7+q69Wx
J/y27a2+RtjReVj19YceelTXWaPs0afib9DKt25t0Xz90NKxlh+aP3SRgYFh
/Td0+cce+7EeA9o4NEzo61/72r16bqytx/p9aPr33vdN+f73f6R7AEBX2eG0
ha985Ruy8KlnVVvRc4+554YOCk30e9//oXzt6/fpmvp+55xg3/4Omb9goe4h
gO9jbgLmCSxY8JTOT7jDuV+c+5Zbb9fz4/vIC4D7xhp+0x6pk0ZA/b5o8Iv6
PSFZgfp9EqjfE5JBqN/7UL8nJFtQv/dfRr8/Hf6Q+5L6fXpQv4+os9UA9XtC
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
f6J+n9CGUb8nJBNQv08A9XsyR6Stw1eSnkf9Pgj1exKgytp7lqF+XyKo31O/
ny1C/T6qTOwf6veEzA71hQZDlMI3on4fD/V7QjID9fvioH5Pao6Mx5+o3ye0
YdTvCckE1O8TQP2+bHVwGHUvRNrXleq9Z0CLrxQ9j/p9EOr3JECVtfcsQ/2+
RFS7fm9+phHTO+vUjSE53HVYOjsOzXzfe0NHaaB+X4WEfqjfEzILPI09av+z
2R97lPp9HEXp98Pp1w9CagDq98VB/Z7UHBmPP1G/T2jDqN8Tkgmo3yeA+n15
qGF/FL5DFJWaVz+NMqR+H4T6PQlQZe09y1C/LxG1ot/jn2enVWuA9oA1+Ic6
ZwnmAHR0Ur8X6veF6h1+bP1+2fJV0trWLseOn8jPB04IyaOwnzv7Y1O/jyGk
329q2iQNGxvkSNcR6T3V52pig8Op1w9Cqp1CNhD6/fYdbTovEPr9dNp2I2Wg
3/d098iW5i2ysX6j7N2z17FfA4n6i3L2OYSUmrLHnGfLcG4N3YmTfbJ7936p
29BA/T7OhhWh3yeKNTsMDaZfTwmpRNB+TLtDjPlQx2HZvrWF+n2YBPo97VTx
1LY/OhZJ2jp8qv5UAsw5qd/nKIV+X8o2nHYdqXWqqb1XArFtivp98dSKfj9t
rb8/dFgOdR5S/X02dFK/98uY+n1+mdg/vn7fslOWLVslra3tcuzYidR9SEJq
nkHq97HE6PfIYdN7qlf3o0GfmvozJKSG6ekJ6fe1ZKMiUP3+eI9s2ezp97s9
/d7L2UIImVvs9Req3+/ZLxuo38fbsPPo98Mz1O/TrgeEVCJmvaVZI9ZJ/T6a
IvV72ilC5hbq9zlKot/TThGSGOr3JaJY/X4IAmwZf+bgPs9MnVW9Qdfel0h7
LwXU76uQ0A/1e0IyCvX7eKjfE5J5qN8HoX5PSLagfp/QhhXQ74cHk2v3jDcT
MnOo3xdJEfo97RQhcw/1+xzU7wlJB+r3JYL6fepQv69CQj/U7wnJKNTv46F+
T0jmoX4fhPo9IdmC+n1CGxaj389Et2e8mZDZQf2+SM6j39NOEZIO1O9zUL8n
JB2o35eILOj3c3Sf1O/LhFC/jyoT+4f6PSEZhfp9PNTvCck81O+DUL8nJFtQ
v09ow0L6/ckTfTNed894MyGzg/p9kcTo90m0MdopQkoP9fsc1O8JSQfq9yWi
WP1+cCr9a53lfVK/LxNC/T6qTOwf6veEZBTq9/FQvyck8/ScsPT7oz21Z6dC
UL8nJFsgZhPQ73dTvy9ow8L6fU/vrLR7xpsJmRl+vNnTdxBjPkT9Ppoo/X6E
+j0haTM8PC4nT0K/3yPz51O/h32Chj9j/X4IjOWR9nMmJMsk0u8de0X9PoYa
1e87qd+XDqF+H1Um9s959fvBEdUQ55K0bTgpEZ7+nPd8OQbOo1B7oH4fAfX7
2oK2ZE5J1F/H9NmIF0C/37a9VVrb2uXo0W7L8ahN0tDvkzwzMkvi7FTa10UK
PDP3+UC/R76Q9vZ91O8L+F1nTp+To4ePy/q1G2TfngOq39v7RyPOVYhS6GKV
OnZM1q+mf72Frpt9SJlI4OtqvNmsvcff+4dd/X5bK/X7CNsVpd8XY7N8Ml7n
7bloAVLQ7irVRpfz3rPOnJeVZ+t07qRjq3bu3CPz5j8pbTWs38N+N27c5IwP
m+TwoaMyGOMzFQR9wsh4Hijn2dbjwRgbE9dvJTlGHFHHHvTqzVwSWyYxvlq0
LU5mH3TuRcy1xLWn2bb3rPt7iZ5bkmPEzZPx3u892S/r19XL84uX6OspZyyU
tr3IJLWq3x/slI6DHbMCx+jsmD3U76uQ0A/1e0LSp1B7oH4fAfV7QjIBxj3D
MVC/D8L194RkDC/+5ur3p6S9fS/1+wJ+Vxb0+0ol0TiYfQI5D4hNj1i5841+
v4P6faTtmq1+XwltcigC/ZuxKXPGaAxlOt9QQk2wFGUSdU7MlUghblqRsdc8
/X53zev38K2QP2XL5m1y/GiPjAyPy2gM+Fus3oi/hYnQ9JMyMjIho6P5JDvG
eOQxohgpcOyRIo+RlELnjETLNxT/iLm+pMeOPUbUOZM+44THGPHOfV5G4q6v
BHh1sGgKXGM+bpsy4xkf3Ivz215/3+u8pn4fA/V76vezRajfR5WJ/UP9npD0
oX6fEOr3hJSNqBhgPPExMur3QajfE5IxBqnfJ/G7qN/PHOr3pJRQv09mu2pB
v4/SzNPWhbMYOyzJ+WL6rbTLYS7Kr1R1Feelfp8DexNt39oqW5u3S/exE7Ha
vSE2f37EeNxo57OioB46y2MkOnbCYySk0NyD4ih0P6Uo79k/y2T3mOx55eYH
lJhyPnsc15sXY2PaWn/voPoOy5asUC3/DPX7aKjfU7+fLUL9PqpM7B/q96Rc
4Fn2DwznwWccXVZxUL+PgPp9TUFbMvflXTQRzwUgNkP9Psic6/dsN3Peblje
FcYg9fskflcW9PvYPiftunS+606kDWXEZtCmzXkdKba8qd8ns11Vr99nSKuP
qsOmHpeFgfhzRl7HQBnvsQTHToO06iv1+xydB7ukob5J6h0b1dV5ZEb582tl
PmS5SLoPCXTlKG08Lnf77K8vei7GcFxe/bjjFMpNktdWs2NLSrHnQeS6k5j8
+dDux0Ym1L9qatisPgS0fOr3MVC/p34/W4T6fVSZ2D/U70lZGYzOOUaCFGoP
1O8joH5fe9CWzBn+uvoiiHs2OAb1+yCprL+PajeM78xtead9TeQ8z4v6fbF+
Vxb0++g8zBmoS+ch0Tg4S3aDfUj65R3xOer3yWxX9ev3MXM/yqmbn8+GWcz1
+QpRznOmUdYluZc5r6/U78N0HDgk9XUNar9hy2HTZ+JPlaReF3hms607paiX
c94+Yq4lWgsejbQFif2mmGPEnjNh+4ukyOsoiOl3So7lfxZBwWcZtbeL097C
YA3++OikzqXZ3LRFVq9cS/2+ENWu31s/586ec2zusBzpOiKHOrscm31oVnQq
ndTvhfp9oXqnP047Q/y4tTVD+n0C20xI5VO4PVC/j7Bf3r/PTJ2Rvt5+2dQY
o9/TlhCSnBKMA92YjK3f9+S131ojTr8foJ0iJBX8eBj1+/NzHv0eceOitLDB
0TzSrgflZyZj4bSvmWSdYa/dIbbc3z8knR2HZfu2FtlQt9GxX9TvbQb6BmXl
8lV5+j3Krigy3iZhM7KyHjxOHynvOZOVVbnOOddlXd5nVt76Cqjf5zi4v1O1
+7p19arfY85Rcl9q7ut2KTTVzNiSmFweyWxMee3U7NtfeW1aklwoyfKmlDeH
S9ScAdXvx06rD9C8aausWb3e0+/Ppm4vskpOv5+29PtmuXD+GvnwM+vlzt0n
qka/HxocVu2B+n1py5j6/fkZ6B+Qtgzp94SQHNTvwzeZu9czp89I36m+SP0e
/Vfaz46QWkVjMif7ZOu2Fle/P9bjNuG0bUiKxOr3Ka2PIoRE6/ctO1pz+j1x
KaDfJ1nHmreutULzDROSNva6676+ITnY0aU+V13dRvW/qN/nQKxr5fKVju+V
0++HUljHSQjJQf0+R2L9nv4UIWUFexWMjZ3W11uat8m6NXXSd2rAsVFnUrcX
WQXmWvX7yXOefn9cPrJoi1w4b518+Jk6uXP3SWkarPzyQ0wPesOhztJp76WA
+n1tQP2ekOxC/T58k7l7pX5PSDahfp8P9XtCsgf1+yKhfk9IpqB+XzzU7wnJ
HtTvc1C/JyRbUL9PDvX7dKF+XxtQvycku1C/D99k7l6p3xOSTajf50P9npDs
Qf2+SGL0e7PnKvV7QuYW6vfFQ/2ekOxB/T4H9XtCsgX1++RQv08X6ve1AfV7
QrIL9fvwTebulfo9IdmE+n0+1O8JyR7U74ukkH4/Q+2e8WZCZg71++Khfk9I
9qB+n4P6PSHZgvp9cqjfpwv1+9qA+j0h2YX6ffgmc/dK/Z6QbEL9Ph/q94Rk
D+r3RUL9npBMQf2+eKjfE5I9qN/noH5PSLagfp8c6vfpQv2+NsCYprV1pyxd
tlJaWndpnB3jwXJr9+45Rouk0HHyP5+2vZ+bMikfpbi+wvc5u+dbzutOfuzy
lTegfh++ydy9Ur8nJJtQv8+H+j0h2cPo993dp2Tnrj2yvm4j9fsoqN9nlqgx
TtrXRObguVO/Lxqj39dvaFDbNTo8XhvtZMCtH6lfByERUL/PQf2ekGxB/T45
1O/Thfp9beDr90tXSEvLTjl6tHtObGJiLXgggphjxH4+46St25+v/Ob8mSU4
X6mOkZlje8enfh++ydy9Ur8nJJtQv8+H+j0h2cPo98e7T0rbzt2ybn099fso
qN9nluixRfrXRcr83KnfF42v39fB99ovI0NjNaHfo26ofq+M+LEFQrIA9fsc
1O8JyRbU75ND/T5dqN/XBmnp94nwxh9h4uLeUZ+tBLIyrirJ9ZXomZXkustZ
JmU+NvX78E3m7pX6PSHZhPp9PtTvCcke1O+LhPo9IZmC+n3x1Lp+X+q4BSGl
gPp9Dur3hGQL6vfJoX6fLtTva4PU9PuZaNsh4j8b/flsk/78gcLlN8P5CLN6
ZulcdzaO7bYT6vfhm8zdK/V7QrIJ9ft8qN8Tkj2o3xcJ9fvMEjuuyMC1kfJB
/b54qN/TRpDsQf0+B/V7QrIF9fvkUL9PF+r3tUFa+n1ijTPBMbKyjr3cZVJW
/T4Lz6yA3l+uY2Tm2B7U78M3mbtX6veEZBPq9/lQvycke1C/LxLq99kE45D+
IekLETcGI9UD9fvioX5faP1A5cbNSGVD/T4H9XtCsgX1++RQv08X6ve1QXXq
9xUYtyiRFlwyDb8E15fsmUWVSVIdvDTXTf0+o9g/0yH9vj5Cv69EO0BIFTA0
5MZkqN/niNbv+2mnCEkR6vdFQv0+mzjlF9buVb/vZ79S7VC/L55o/T79Z1hu
ZhuzIaScmLGi6vfzqN9TvyckO1C/Tw71+3Shfl8bFNTvM6AjE1KroA1Svw/f
ZO5ejX7f1NikeljXocNy6uQptWkD/YOpPz9CahXERbt7Tknzlu2Of0H9HkTp
9329/aqzpP28CKlFoH1Svy+SBPr9oGPTomC8uUwMDEeQgesiZYX6ffFE6vcx
c/DTfq6lZGb9YpFlkIE+nFQ2sGE9jh/R1rZbHp/3hLS11q5+33HgkGyoa1D/
SvX7GD+qEAMcTxIyI6L6OOr3yaF+ny7U72uDQvp92raUkFoGbZD6ffgmc/fq
6/cNTbJxA/T7Ljl14pQM9Hn6vZdDlBAyt8B2dXef9PT7XdTvpwvp97RThKQB
9Afq90WSUL8fCBGn5VO/J2RmUL8vnij9/nw59KohN9Ls+8jyHZsQ+F89Paek
ra1dHn+c+n1Yv58JaT9TQiqRqD6O+n1yqN+nC/X72oD6PSHZBG2Q+n34JnP3
Sv2ekGwC20X9Pgj1e0KyBfX7BMxSv8/T8j3tXvV7QkgyqN8nYib6vdtHZOBZ
z4JS9JF2naN+T0oJ9fsc1O8JSQ/q96WB+n26UL+vDajfE5JNqN9H3WTuXqnf
E5JNqN/nQ/2ekGxB/T4Bpdbvme+VkFlB/b54ZqrfkxxhDT/t6yGVD/X7HNTv
CUkP6velgfp9ulC/rw2o3xOSTajfR91k7l6p3xOSTajf50P9npBsQf0+ASXU
7xlvJmT2wHZRvy8O6velhTFCUgqo3+egfk9IelC/Lw3U79OF+n1tQP2ekOyy
q30v9fvATebulfo9IdkE/sNxT79vgX5/tCfQdmsR6veEZA/YqqGhMTl+nPp9
QSL0+xM9vTIEDXFgJAjjzYSUHer3xUP9vrQMZOAaSOVTc/q9+TH35TB9VmRy
4ozsatstq1eulfXr6l393rHpdp4i+lOElI84/X50bDKo3/cOavw5dVuSUajf
pwv1+9qA+j0hGaR/SOMxO3fukY0Nm6jf+zeZu1fq94RkE8T2oN9v2brD0++7
A223FqF+T0i26IOf5YDxzrHjJ6jfFyJKv+8+5ev14Zz4jDfPjqhYYtrXRLIF
9fvioX5PSPaoev3+XAjr59xZl6nJs9J97ISsXb1ennryGalbVy+dB7uk37Hp
zGdEyNwQqd8Pj8voaFC/71f9/mz6tiWjUL9PF+r3tQH1e0IyCPX7mJvM3Sv1
e1I19Oe0pDCpX9sMoH6fD/V7UrXE2a6M123q9wk4j34/01yvjDdHtadof6Cf
ZTVnZV0J5U39vnio35OqJMZ2VcrYser1e/vHuh+suT87Na2+0572fTLvpwvk
G1+7T771zW/Lxg2Nuv4e63yxBp/+FCHlh/p9aaB+ny7U72sD6veEZBDq9zE3
mbtX6vekasCY2+hdATJwbTOA+n0+1O9J1VKh9ov6fQKo37M9VSP9lVve1O+L
h/o9qUoq1HYZakq/x1vnpmVy4rSurT/cdUy2b22RZ55aJJ//3PXy2U9fKXff
9RVnfNgkXZ1HdJ/t/hlo+Gk/U0IqEer3pYH6fbpQv68NqN8TkkGo38fcZO5e
qd+TagKxxDBpX9PM74X6fRjq96SaqUT7Rf0+AdTv2Z6qlIHI8k7/us4H9fvi
oX5PqpVK7iuqXr8P5cyfmpySbowDm7fL84uXyPe/90O5844vy4cvulg+/tHL
5S7ndX1dg+r30Amh4VO/J6T8UL8vDdTv04X6fW1A/Z6QDEL9PuYmc/dK/Z5U
DbH5ciuzDlO/z4f6PalaKjT/NPX7BFC/Z3uqRpg/vyagfk+qkgofO1a7fm/r
KHi9f+9+eWL+k3LtNdfJddfeIF+65Xa59xsPyHce+Z5899Hvy+M/ma/6fWfH
YdUJZ+Jfpf1MCalEqN+XBur36VJR+n3wpf/vXodNJ4blkbptctHTm+WCJzfL
pYu3yoMbd8ry7jE5qGMb75vTMfcacezAm+GTVhgY07S17pRl0O93tMmRw8ek
vw/al6t/DUSSwI+IzOtUgHLZ5gJj9Fn7vhXuP9ckpXhmnsaeRyliQd6xd+3y
9PsN1O8DP9MR+n1nl8bc+/v6HQY8G1Y80bYun9jcdKWwJaQ2qdQ+JO66nb9B
D2vesp36vcfZM2d13UXzpmap31Ave9r3qP1KYnuSkC1/KiPHTuHeS+J3Jrn3
pLYk6TXO9fWV+VlCwxkaGpPu7pOy0/G31q+vl9aWNp0LGOV31DJnp87J0SPQ
7+tk7+590uPYeLU3fYNBktqrgXIx+zacWh/cH0Ea11GC+yjb2LvM15f1Mkcd
H/R+9/b2y8GDnbJt2w6pq6uXkyd75dzZadotD9iZlStWq36/Z/d+GRocTZZj
oYz9PiGzIkEcKisYOw//q7v7lLS2tcu8eU9IW1uF6vfY0/6cBNfbn4PPdFZG
R8bk2NFjsqV5izz6yKPyics+IX//d2+ST/7np+SB+74pS15YKtu37pANju+5
YtlKqXN+dx48pHEsaDGD/aUYD84+HlaxfXMJ6+tsrrsk5VfB/lSy65775xul
YQ0Pj2ncHa+RMwNzl2tKv4/6Oc93YALHHLonzsqaIwNy7eaj8uFFzfL+eWvl
kqfr5MvtJ2Tz4FT5r73MUL+fPfhluk33rWl9fcph08l+eXTDFvmPp5vlgie3
ysWLt8vX6lpk8fER2avN74zDWQk6COFjTyvBk1rYH64wjH6/fNlyadneIoe7
Dktfb5+uC3PXsYbx+vW+4SIZSsZAdC6oWeeHmkGfEhk/icD1nwfzSXAMMreU
6rn3Os+5tzeE9+xLUad2te+VhoZNUrehQQ4fPiaj1O/9e/X1+0ZXvz/k9J8n
e046vlW/r+EPFEuenSuEt7a/DHWKkEqiUN/n6/ct1O8B4jjdx7tl86Zm2VC3
QXbv2i29p3otv6r06HMqyxh9KDpmGEOSGEJfGY+dxr0nIuZe4sok8t7jri/h
sZMcY0a+eDmOnRCMNwaHRmV4ZFx6TvSqv7W+bqOOiU6dpH6fZ8POnJVjR47J
+rXrdf7R8WPds/anBvsH3Rh1mYgcOyas88WOSauP2fkHLqYsI/yEGhg3J4lp
JH02GqfR9jOovkTHgQ7ZvnW7+he9J3tlmvq9D9awrlqxximbBsd27dN1rcn0
++SaACEkHuO/Ilcb9Pv58xfKTud3Jer3mCt17uy5gG5yZuqM+kPtO9vl2Wee
lZtu/KK89z3vlde/7vXymr96jdx6862yfNkKOdJ1REZHRmXf3v1SX1ev/lVn
R6cXx+qfwRgxwtfCmpYiMTks88eTKdWVUsxNKcHYbNbnK1d5lPK65/r6ylne
CemPAHl6xsdOqz61tXm71K2rV/3+bC3o9/oT84fI77iGGi9HHI6MnZHlh3rl
qsZDctGiTfKB+Wvksqfr5OvtJ2UL199Tv/cuMUq/x/r7LU47+17jdvnwom1y
wcKtquPfumSjLOzskz1Yf6+fPiuuhm8OGj527ej3Rw8f1XhK4f5+MNLORZF4
356E8eaofCeRJIxDJOsPIjRco+OWoh8jpac/OkaU3A8oPv40kzqFfK71G5tU
v++ifp/7mc7p95uaNmk+6s6OTjl54qT2p8ODw54dK5IEYxtQ3jpFSGUQOX+p
17WBmj9/C/PnGxDb6ek+Ic2bXf1+z+49XmymPNo99fts3HsiYu4lrkyo38+O
AW8MMTQ0mtPv19dTv48BPhfGiHXr6mTvnr26H8hs/Sl8VjX8MjCQlTpfqZTI
f43zE6p+3GzGBGV5NkP+OgsTs+k82En9PopzojH3FctWyYb1bv780eFx1fCT
tAVCSGmAbYStR9sy+v2CBQtl587K1e/V3uK/c9NyZuqsroVDrrV77r5HLnjH
BfK7v/NSeeUrXqmv777ry7JuzTo5cviITE5M6ncP7D+gvtW6tet8/d6do5VA
v0d8qrc/Dz8v5Wz0+yT9eCnw46rhvnVwzn2K5OfLP2eiYyQukxJcd1mfWfZ9
xigNa8jxEeArQMva4un3mAt4jvp9BEH9vmt0Sp7f3y2Xr9opH3y6Uf79iXXy
ycUb5b69fbJtqPLLj/p9CQi+FLv+7BkYk2e275FPLt0mFz7VKO9/ok4uW7hO
7t3VI2udDww4nxkUd6+GwM903kHj/+5r+Rkoi4Soft/SJsuWLpPWllY5euSo
24ejv49lQMdCxZJk/X2S+VbqByYY7yaby+X5B6RqKcVzL2udctoZ9gSrr6d+
n2eHpy39vtHV79GHYv29xrMGcnOQyrX+Pu4ZR83nIKRaibOLx46dkObmbbKj
Zafu/TFdCzaqAIjPQL/fvGmz1K3fIO3e+nuzxqL0DETbo5IxlIAsHXuu771U
95Lk86U4djnLOxvPsd/T77EGHzlcNX9+3UbZ2bZL22aU31GTeD9Yfw/9HnHn
Pbv3Svex7uhYcRL6+ov30xKCPLCxfVeSOp+BfjZL/Tsp0xgxIUZrMTGbQ51d
smN7i+Nf1Mkp6vc5Qvo91t8jf7471y1Bn5WB9khIVQD72OvOMTb6/eOPPyFt
rRWaP98D87SHBoY0v9qzTz8r137u8/KWN79VXvGyV8jLX/ZyueTiS+SRbz+i
edjgP02MTfg59w8e6HDs0wZZv269xrMQb8rlk0xAhJ+VKM6lfUr+cfuc97PS
f855H9xXmnPOuU+R8LrL9hwTX3eSY8/++Wr+/AhNatjxE0ZHJlSz37LZzZ+P
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
n9fbzONIGrW2v15m61XfQZn8dFojaqvrWfnBtn1JvnAf6mrX6wOv3T1/rk3I
pGE/1vIuLydlskKh/qNWeZtwnuHp8oJzGQNxlKOw9fN7UPyajr83/+0332Ld
2nV4/NHHMX3adCGGv2vnLuFZbX6Pvbe71xa7tzimjwHxe/7MaHVVdf99LH4f
vqS4xHY/3u09raH3uNydlw25l+/uXM1+n2sw4XxqPI9n13s+5caYHctHYSym
MRbLc+P3bfe/13jmeyx+W1exKh67b5MrIW9uQxXrr66qg05jgNXkomyY7Ozl
Fe/lTyAZePkHW1vl7WygWA+EtRjwfb4cb6dW4sUoGdYEpGG1Txy2RItxXFyO
oiY5lGzd6TEBluc6Ufx+jLh5T154JoQNK2X/xNQ24+uMfKyMKsSCYAkWBGXD
KzwbLyaV4FNpPSJrVEjvMKNBw7ZLA/ttzLb2HMxsohZhgvbkPN9Bs/X4ehgl
HgMz6Azo7elDu7IdSoUSKoVKaDuNd/nfQ7S1jxuFsmMoRQfaFO2ETCl8u1ew
Lm/fp0+tg5Ed89wVyUPKpcnKOdnLL3WvWrinzJ9rFsouofwahsKF4cYfwk05
NQzldRrPaY92njc6f6Nd12OVbzI265u3La3Tm4RzMY+XH54uu9iJIj/f4u0L
8nKH17XI69Qfgp+HjapMcl1OjVfZQMjNhJdHLs+xXIzLnzUyGadA3Yijxe/b
sAtig96Anu4eoS4Rd9eIoz+nGp9zNaUHztWG2wavd35jlWe+7bfIFUL7XCEh
ETh/4aLQ1k1ZWSVaW1Voa1MJ1x5jdZ41JuvPxX0AhZt9eLTlwPhdw40uf6PG
9gdeBxmP+/B9o13VLty7488J9sfA+O7r/J7nVMSW3Wy0QtOnE+rRVyk6BIpr
+C0JIWPDVZmmdbQH7+kywwpbfN2RHOdArCx1DOexGx5fjwiLwAfvf4A5s+bg
3rvvxSMPP4LVq9bg8KHDyEjLQFNjk225rIOmN4ie34vv7rWV5/ZrONu9rXbX
50JuKEdhVNO9hvOpcaMgZGwpXeBt3at7tehjerr60NejYedWmDBl1FieI12V
2Yb38vi7xmyrK7+WnVdJ2jpxptGAfZI2vHK5GEtCJZjnnwUv/zRsC0nGkdxq
xDey8qyvD3qrPaLq6WW+ThS/HyPu6rmH7TkROVOktyK8sRPbRI1YHp6HBX4Z
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
gH4PABmDfg8AAAAAAADp0AH9HgDgwElVgvcjxREr3FXk+9fP/nm2fTbwM3vy
8Sft0ksutf/50//aOWedY/XurWfvdnvXfvxhmm3auDl+LQBUHFLp908+8aTr
98q5oWdBvJSD9gLAgYN+DwAZg34PAAAAAAAA6dAB/R4AIHPCkuL/irkv2FFg
69ass0kTJ1vnTq/bddfWsmpVzwio5q87vtbJJk6YaOvWrrMd+TutpLjESpVs
9w8A9gn0e4DcA/0eADIG/R4AIDuEJdvtAAAAANgTOqDfAwBkTppStKvINirm
ftZs+7DXh9a0SVO7/LLL7YLzL7Abr7/RHn/sCfu096c2c/pMW7d2fXSf++KS
qL09UcLPdv8AYJ9AvwfIPdDvASBj0O8BAA4LZdZEYYn/PBp7of0LWT8BAABA
uUEH9HsAgMxJKvrbr3BXoS1butxGfzPGOnfsbLfcfItVPb2aVTmpitW94057
9eVXbeRXX9uqlassf1u+lUjXC+srMfbJBqiAoN8D5B7o9wCQMej3AACHBWnz
/lolxXNVcRSKp1A+xKLgmZzt9gIAAAA4OqDfAwAcGLEiHV56/No1a23woMH2
yMOP+DP1T//9J/v7346y6665znp/0sd+mf+LP3fTlqBO1/p4/gJUGPaq30tL
C0s5aC8AHDjo9wCQMej3AACHF0v/M62bfC9DnrsAAABQXtAB/R4AYN9JUaS1
5wfP0RXLVtjE8RPtrS5v2d133W2XXXq5XVjjQqt9U21r16adDfliiK1cvtK2
5W2L+nUnx9rHKwSAioaeA9u35duAfgNcvz/phJPsicefcP1edvn4esqy31YA
ODig3wNAxqDfAwAAAAAAQDp0QL8HANg7iSXh/aLCItu4YZNN/3G69eje0x55
6BGrdW0tu+TiS6z2jbXtyceftPd7vm9Tp3xra1ev3Z27DQAqFZFY/o0B/aP6
/YnJ+n05aCMAHFzQ7wEgY9DvAQAAAAAAIB06oN8DAOydsOh1SXSPtJ07dtrq
39fY1ClTreOrHe3qq662Y48+1o495liPuX/phZds3Jhx9vuq321H/o7S+18n
l2z3DwAOCPR7gNwD/R4AMgb9HgAAAAAAANKhA/o9AMDeSSjFRcWWtzXPFv+6
2Pr362/Nmjaz00873XX7alWr2c11brYPen1gs2fNtq1/bPVnqcfdl5Sty0u2
+wYABwz6PUDugX4PABmDfg8AAAAAAADp0AH9HgBg3wiehzvzd7qNfuzosdbl
9S5Wv979niv/zGpn2q0332rPtH3GBvQfaL/M+8W2btnqcfoed6/r91Sy3TcA
OCDQ7wFyD/R7AMgY9HsAAAAAAABIhw7o9wAApQlL+Dp4DhbuKvRY+nlz5ln/
vv2t+RPN7bprrrPq51e3yy69zBo1bGwf9PrQZs6Y6bb8woJC1/Pcfl5iey/Z
7jMAHBD6XY/q9wPt9tvQ7wFyAfR7AMgY9HsAAAAAAABIhw7o9wCQ65QkoP8n
FdnVNm3c5PnwO3fsbDdcf4Md9fd/2Cknn2I33XCTtX/ueZs8abKtXrXadXsv
qe6T7n0AqNhY9Cj9/rMBn9kdt92Bfg+QA6DfA0DGoN8DAAAAAABAOnRAvweA
XCex6P+x555y32/L226zf55t/fr2txZPtrDLLr3cTjrhJDu1yqnWtElT3+f+
xx9+tA3rNljBjoLSsfbZ7hcAHB4sekS/B8gt0O8BIGPQ7wEAAAAAACAdOqDf
A0Cuk1AisVz50uF+X7Xavpv6nb395tvWsEFD3+f+jGpn2KWXXGpNH2hqXw7+
0n5d9Kvlb893rb9M/H62+wUAhweLHtHvAXIL9HsAyBj0ewAAAAAAAEiHDuj3
AJDrhCWm3edtzbPFixa7He3pp9pYzStqWrWq1eyiGhfZfffcZ+90e8d+nvWz
2+yLCovS597Pdr8A4PBg0SP6PUBugX4PABmDfg8AAAAAAADp0AH9HgByHR1i
2v3G9Rtt/LgJ9ky7Z63WtbX8mVj9/OpW9/a61qljJ/t65ChbtGCR5W3Js5Ki
klJ1RCsCgJzDokf0e4DcAv0eADIG/R4AAAAAAADSoQP6PQDkAmly20u3l91M
9vdf5v1iQ74YYi2at/R97o8/7ng77ZTTrEH9BtbjvR42/cfptm7tettVUGhp
S7b7CQCHH4seS+v3J9rjjz1uY8eM85weWW8jABx00O8BIGPQ7wEAAAAAACAd
OqDfA0AOoGedtPqw6HWkOGI783e6Jj9z+kzr2eN9q1+vvp1Z7Uw79ZRTrcYF
NeyuO++ygQM+s2VLl1vBzoLoPveJpRz0DQCyjEWPyfr9Y48+ZmNGj7GtW7Zm
v40AcNBBvweAjEG/BwAAAAAAgHTogH4PAJWdWEm0ZSv3/fa87fbL/F+sf7/+
9vhjT1it62rZueec6/vcP9jkQevVs5d9/9339vvK313nj18frxAAwKIlgn4P
kGug3wNAxqDfAwAAAAAAQDp0QL8HgMpOWCJR3X7njp22IbbP/WuvdvRnX/UL
ani8fe2baluH9h1s6JdDbcEvCzzvdWFBYdQOnlCPwDYOAI5Fj+j3ALkF+j0A
ZAz6PQAAAAAAAKRDB/R7AMgFYvvcb9602RYtWGTjxo63tm3aWs3La9oRfz3S
n3131b3LOnfsbDOmzbD167TP/a7d1yeWWH3YxgHAsegR/R4gt0C/B4CMQb8H
AAAAAACAdOiAfg8AlZ3gOVa0q8j+2LzFvp36rXV9u5vbx/557j/t+GOPt6qn
V7WnWj9lI4aPsOXLVvgz0fe5D66NFEdK1ZP1vgBA+cOiR/R7gNwC/R4AMgb9
HgAAAAAAANKhA/o9AFREwmdTckk4JxKcU7ir0HX7RQsX2eDPB7tOX6d2Hbvk
4kvtyppXWr1769nrnV+3iRMm2srlK23njoLSmj0AwN6w6DF/e74NGjjI7rj9
Djv+uBPskYcecf1e+3DEz7Ny0F4AOCig3wNAxqDfAwAAAAAAQDp0QL8HgIpI
iaXW8IP/S7dX/LyeYYqnHztmrL3V5S27v/79dvlll/te97fecqu1ebqN9e83
wBb+stD+2PyHx+hnpS8UCqXil0hUv//8s8+j+v2xx9vDzR52/V52+VK/69l+
fgLAQQH9HgAyBv0eAAAAAAAA0qED+j0AVGQSdfyIdPtIXLvfuH6jDRsyzBo1
bGTHHnOc/c+f/sdOqXKq1b29rn3y0Sc2++fZHptfUlSSXTs3hUKp+CWCfg+Q
a6DfA0DGoN8DAAAAAABAOnRAvweAikpSUd77guC5tW7ten+GvdPtXbvv3vvs
/PPOt+OOPc7OOvMsa/5kcxs+bLgt+W2p29zjMffxSg5N2ygUSiUvEfR7gFwD
/R4AMgb9HgAAAAAAANKhA/o9AFRUwhI8p4oKi2zzps02d848+2Lwl9bh+Q52
2y232UUXXmQ1r6hpd991tz3T9hkbNXKUrVm9xgoLCj1OP2UOfjuIbdvXku2x
BIDMsegR/R4gt0C/B4CMQb8HAAAAAACAdOiAfg8AFQFL+n+JxYueVevXrbcf
v//Rur7V1e675z7X7atVrWbXXn2ttXm6rY0YNsKW/LbEtm7Z6lq/rtfzL1KS
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
Pvc1LqhhdW+vay92eNG+nfqtrVr5u+3I3xG1h1hCXalKOegzAOQmZfT7Y46z
pg80tVEjR7ldu9T5lvQ6KLp29arVNn/ufJv2wzSbOGGijfr6G5s8cbLNmDbD
Fi1Y5Jp+sh+T25OD5+Qfm/9w+3FYt8ff7Spy3wHtOzJ71uyY3X1s8NwdY5Mm
THLfKNndZZuPa32W1L50+vDeKCmLt2dLns0L+jh92nSbOWNmwE8266dZNvvn
2TZ39lxvkzQH6Rb6ucZj1cpVbh8vM3bJYxoU6f/SUzdt2JRaX04s6nJJpHTf
07Q9+XppGtIAlvy2xH6a+ZNNnTzVxo0dZ2NHj3WftHlz57mdX59PGBeotq1d
s9Y2rN8Yjxfca9nb9y5Rv0luZ7pxStFHrfnXrlnn/gf6uyD8Dmn+XRe8P2f2
HFswf4Hr1MuXLfd8ONJ7Sun96cYvXfsPoN/lBfR7AMiYgxB/n6wXr1+73sYE
c/zDDz1id9x+h9WpXcduv/V2z212Z9077ZGHH7XBgwb7uiC8RmuPMaPHWOdO
r9uSxUtK+fTp7zWtSZ595jm/vtZ111udf9VxbrvlNmtwf0Pr2aOna/uuaYcl
VV8TdfUDKbH65JOoOfeN19/wdcQfm/5Iqd9rjLQWWrhgofXr28+mTJpiG4N5
OO4TmTxfpbnniuUrrM8nfWzK5Cm+7tL5W4M1zerfV/uc6PkNCgrT+w8CAAAA
AADsDzqg3wPAoSKxxN4L8+X/NHOWvdvtXasTPHdOqXKKHX3U0f78adWilX05
+EvX9qVneVxpSXJlKUq2+woAOc1+6/dJZcEvC+3jjz62hg0auQ/Trbfcarfd
ervbyO+95163nf/w3Q9un/YSu6ds8J/2/tRj7OTv5D+K5TmRXXn6tBn2eqfX
XROofWNtu6XOLVb7ptpW69padn/9+637e91t7px50Vi8cM2XSnfd35JijKQp
yhehcaPGduUVV7oOoJwrri/cdoeP279q/8uuD96/7trr7Oorr7aG9ze093u8
b2tWryltk0+u3/sdca1Z+vmor0e5r0Ak2Y6eKrduqv+nIjylJKpry/9Ma2a1
XXPZzcHY6nOrdV2teP4Y3/clmPOKY35rmt+Uk0E6uTT8Mrl+92EcU56f3MdY
rgPP85sqH3Li5xygcft80Oc2YfxE139VpIOsXL7Shnw5NOjj7fbwQw/bO13f
sV7v97Len/QOzp3gf0O4XrKnNmdSysHv9L6Afg8AGXMw8ufHnuHycZNv1ZAv
htirr7xqLYO/p97o/IZ90OtD15w//ugT6/p2V/ePbh/UPaDfAI/F17317BrY
f6A1e/Ah9z3TvKG/vzZu2OR+aW91ecvaPt3W9X3Nxx99+JF9+MGHvn54vfPr
1q5Nu2Be+MDn95T7nAX/D/Pi7PdzKZ2uHrwnTV7rn0YNG9vECZM8Fj+dfq+1
k8bzzS5v2ohgnOVLl/bvyzRtkb+e5kDN/Vp7yUfwt8W/2cTxE33NofH3/AXY
zwAAAAAA4GCgA/o9ABwqwhKJ6gDKW7hs6XIb+dVIe6HDCx4LcmqVU+20U0+3
m+vc7DYg7XMv+4jOLWPjSVey3U8AyHky0e9lI5fGLH+mjz74yG3qr7z8qnV/
t7t98nFvt7l/8P4H1qljJ2vzVBvr9Fonj51ft3a964ZCtnY9T4d8OcR++/W3
eL3SuxW737lTZ3vxhRe9DtUlHwHZ3eU/9dKLL9uzzzzr5ygeXvnfE9vn5SCO
kdabS39bap8N/Mz3THm/5/uuBXR5o4u1bN7Srqp5lbVu1dpj+Xr17GU9gnOk
MXw79Tsfp3jbUtVvMb15xSr7euTX1u/Tft4fj69L+Ix8/5bE/PX7g5nb6zW2
0uCljXQI1szvvvOuj6k07U8++sTe6faOj/nz7Z+3D3t9aPPn/WLb86J7F7z5
xpv+3prVa0vnUkh1vzC2PvZ6n9sc/4JZ+ny+SfUp/vLjDz+2kSNG2sIFi/xn
f2ze4nGGrwf9fPKJJ/1zUf6GgQMGen+//upr2x7M1XvV7/fWzlSlHPxO7wvo
9wCQMQdDv49Ec9sof8qIYSPs1WAN8Uy7Z1zX/nnWbPfNUq4U7ccjvX74sOHB
z5+155973vr17e+54BctXOTrjXr31vN8+JqbNH8qP77mZ/lWa75WbhytP1SX
6l26ZKl9/933wbrlFevQvoPPf4pF3xXmy4n1MfQHUK555WAL87Yk5o4Jc+Ek
UhLbo8b3nUnyQ/OY+mBd0LN7T/97UnOTcg+k1u/N+6N1zquvvGZffjHE1vy+
ptT6ILG9qdqi95V7//PPPrcff/jR1wHqp3wW5KunNZXyHClPEvYzAAAAAAA4
KOiAfg8AhxCPt99ZYGtXr7UZ02dY3z597cGmzey6a66z6hfUsEsuvsTq31ff
7S+yHykmMZpvuLRNZX9jJAAADieZ5M/XnunS36X/Kr7+tVdf87z58mGSvV3o
2fnD9z+67bzFky2s29vdPA5fazfZwpWztnXL1vbZgM/8GSobt+zHisd/6823
XHeVFq5rZG+X3X39uvW2asUqj7WWrv/Iw4+4divbvnSAeIn1K9S8nVg8dyr7
dpxYnF0yaq/y3SrvvLdj7Xpvk/LeKkbw2muu9dy26rP6rnYq17y0SNnwvV5v
Q9m6fW/54BztBzBs6DCPD5ReHrf5l0T1fZ0jHcH7kbQ3fbp2x/XvWJy64vwU
w6j1cu9P+nj8nfqyKdYvxax/NeIr1zQefeQx10s03hvWb7CXXnzJ9X1pB6XG
OqYZqF2uV8Q1i5J420rpsTFNJPlzSc5RkPj5qT6vMzaGifWpbdKOtG9NGFco
f7sB/QdYq5atfI5WLgdpFsqlrL0d9LfCzvydu/cBiN8vafzSfF/C34VIrO/x
3w3L/u/zvoJ+DwAZcyD6fVgi0Rz3M6bPtLZt2rmOPjBYD2hOKki05QRFc5/i
zocPHe4+ga2CtYPWIHN+nmP9+/a3Bxo38b1SlAd+wS8L7OWXXrbHH33c4/mV
e17zd/y2vh9akd9b+eiVw/65YB3zY7BeUW766BxW4vOcbEo7grlC6xblo9F7
4dwWzq0+9xWVRvUrN5BQHT53x+Yv/Vz6/Qe9PrC76t5lkyZOiubET6XfB+fL
H01rjc4dO3tOGWnxuwoKvc5S7Cpy/4VkNCfq71OtS3Rf9UPjIR83rbU07tqj
KJ4DINvfLQAAAAAAqPjogH4PAIcQ2Txk61Cs4nPPPue6/d+P/LtVPa2q78uo
PITKdSy9RjEZYZxEXIdQPSVRG3lYZ5l8yAAAWWZf9fswpkz2XY9FH/CZ57GX
1qtYN53r/kthCa5RrvbfFi8J1mrdPbZOWrt0ZNm0586Z63H7Xwz+wn5d9Kuv
3WSLV47YJg80sa5vdfX92T3PeXGCXTtiHjst27Pi69q1fcZGjxptf2z+I95O
2d9VX2g/ly9Wodu7i8vY2UsR/Fy6gezbicT16oSxKPaY+ZU+blqHSvf283RO
ye7x0ryge6sfO5PqFdG4viLfn1Z6ueIAvS9hf0uisfOhbV7HMKYvqgUU+/vJ
9e7WGqJ7v0inkP1fY/tpn0/dZ0LXJn5ervOvXee5Eh5s8qCvsd1/InhPn4ty
IMjG79eF34lgHNQ/jXO+93Gn7SrYFY1VLE7Q22P30Hve3vDzyd/pr33Pmdgc
GYnFLob90vfI9ZOd0fGKxkBG26tz5H8g3w99j9WW2T/Pdl+DB5s+6N9T5XdQ
m6TtKJZRuk3i3Kz6dqX43HVNqu9JOMeHn0mZcawAoN8DQMYcaPx97PktTV57
3j/68KPWo3tP1+A1H5T6e8mi52oOWLRgkQ3oPzC6b/2s2TZr5izPWaO9bbSm
kC/1t1O+tcYNG9uLL7zk817oRxcvqjo2L8tnTbnVlEdI6xi1x+frYM5RrLrq
1rz5UlCX/BTljzh18tS4H1t0v5+t7kvw1YiRwVpmscf1a63z2iuveY4h5a7R
3K7nrOY8tUU6uvL2a801buz43fH3KcZJc5tyHWkPAOn3q1au8vlp/rz57iOp
PYzGjxvva4eXX3zZ0d+o8geU1l8Q0+6VO3/O7LnuCzBsyDBrJp/0a6/zPYHu
u+c+n98XBnVp/OPzY8KYAQAAAAAA7DM6oN8DwMEgsUTMtQbZ+JVXUPaPe/59
j51z9rl21N+Ocl1L8Z7aa1d2ItlDZIsppdknw7MIAMorFj3KVi0dXbFgJxx3
gmu8yjEunTPx/DBuTbFaimsT0q21f30qDVPvSSOUDX3QZ4Pc9qz869J5ZaeX
b5T2VV+08Fe3ZyuHrmzdiodTLJx047gmnlBk55buKLv/hx985Pn2lYPXc81u
3OzPb9myO77a0WPLXnnpFc+bLrv7as89G43tVtuUc/2H739wvWHWTz9bj+49
3O4ufwO1RbZ9xaknx73r/7L9fz5osNW+6V9un5feG46Tfq4YOcW1Txg3wecT
5aYXHV/r5PrylKA9UR+wIq9rxPAR9snHn7gGUZJgP9fnI7v60CFDg7H/3mPi
pWNrv5afZ/3sef21R8HLQT9f7/S6j4nGQLHpOs+1gp69XJNX/5RLWH1PjnkX
+mx+DT4P5SQeNHCQTZ3yrX9mXV7v4hqH/C9ctw76prZLe1AeBuXcf6HDi/ZM
22fsvXfe8/W43z84LxwP7fmrWMgvPv/C/QGUw1/6hj4naQ3aQ0C6v9b3SxYv
8VhL1a3Yf/l6KO//sKHDXefdFdN4lENZvhxzZ8/1dkubUI6BOrXrWPXzq9ud
de/0sddeBorzlEYjfT+cu7U/gPxHNK+/2eUt74PyFCuHs77n2ntYeoa+V7/M
+8Wm/Tjd76PvRN9P+9rQ4Dut+iqa5ox+DwAZc4D6va8lgnlEz1LF3CtW/ssv
vvTn7O5zrNTfV5oTtwZzmZ71ep4vXbLUXys/WsMGjXwuXBHMo5qL773nPs+9
ojmqOE1Mudogny+14fvvfnANPsytMz14zmsfHGnhmg+0htB6R3OQ6lUum3Dd
o1w7mrufePwJnzMHB2uC7u91t9e0/ni+g69BtKYYO2aca+8e+79lq/V6v5fd
cXtdz5+ve6ZrZ1S//8nndtfvV0T1e629NLf16d3HcxDIp0H+lPI10P5C8jcY
H6w9tOZZ/Oti78+4sePc91z6/UPNHrLra11vV191jTWo38DXHgvmL3A/w9BH
z0u2v2sAAAAAAFDx0AH9HgAOlLBEzDUDaVXK/zxx/ETXV2rfVNtOO+U0q3p6
Vat5RU3Pny+NQfYXPX88XnBPe91nu38AAHvCokfpw9LR/33X3XbSCSe5fj8y
1O9t93lCuqe0feW+799vgOeu91y3iSU4L8wtLv1Wdm7FysmmL21a+Whdv38m
qt8r3632ppW2LF1X70n7lR6ebg8S6a7Llizz+HDF5Eknl51berP2dJXNXTl0
pZfLnq0YOtnLlVNlbSwHQDSn/ETX0pW3Xnuod+vazfVk2e2lSb/e+XXXaBV3
rvjvUPNWuxR/rz1lb7qxts8NYc5f/UxrUfVp1NejrOvbXe3Zds+6LV9atOqW
xqw4eOnNuk7x967ff/SJ5+DX/KL+KxZfusSQL4b4PrWKs9O58jOTH5niy9VG
aQXyOZDNXlq79rSXnV7au3Lza9/g2269zec3+UUUJ+79riGO/VcaicZRuoj2
3J07Z56Pl3wq5AOh+ET1TRqCtHvdq/1z7f2zfCW4f7u27YI+vuyfgeqQRix/
Cfky6HNWH7V21xjrc1GMpPYoli6i3PbKc7940WLXOrq+3c33SZBfgsZLYyif
Cmn42vden+HvwXdLfVUOhpnB90tjpXpvrnOzXVj9Qrs7+E7Ln0A+Hoo/lC4v
3UOak/aBmD93vg3sP9DvL40mRFq+9kRwP5Kg/8uDMZTOovel238z6htfJ0g7
mTljZvZ/l/cT9HsAyJiDEH+vHO4//jDNur/Xw+cnPaM173lJyEtfkrCPiXRl
/f2le0rD1lzxaZ++1uD+Bu5bpTlRc89DDz7kPonSovfUD9WvHDDyLVOdyuUi
7V5afcsWLd1/THPg0iVL3c9w0oRJPr9pzSBtXPlXtPbQ3Kj5ps3TbV2/l0+X
fNAUG/9NMDe1bdPW1zeyU+kaPee0HonG34/bPSenaGMZ/T74G1RzsPLvN23y
oOcu0BplXtBOPc/lj9Cvb3/f20jzpfqjz0PzmnR79Ud1DPlyiK+Pnmr9tM+J
yskjvwL9PZy8Rw92NQAAAAAA2C90QL8HgP0hLMnvhfl3N2zyPIzSARRDIb3+
2GOOdf2+YYOGHt+h+AXZd0pi8SCRWG7kMvdIdS8AgHKInmGKuVbsm/KNnHxS
Fc+fX0a/t+j5su/KLq497WV3lu26TPF6Y3uix/K7K+e94sB3xvKSJ+r3inuT
Fq91nPZjVdyzdP89llj+W+nY0r/VLunFslcrhrp/v/5+D9mz5WMgbV6asX4m
G7zaLQ1YsXqy9T/d+mm3Z6stS5cs9Vhrae/PtHvG4+dkA1esdyRhz3TZwFPp
90J6wOyf59hTrZ9yTVuar7Ri5XJXnL/O7/5ud7ebK6ZQe7cr/4By2GovXPlU
yKav+yquTvq56pCvgnTX1b+v9nNl0/+g14ce1y7/M+XHlV4gXwFpD8olrHy+
yiWvPAGy7Uv3Th7LSML+BNJkQk1De+8qvvCN17vYh70+dC1fbVMcu/L5atzk
Q6C9DxT7qHFT3LzapT0YpHuHmos0Hu2LoFwMygGgcdZ4DArG8PXObwT1dXZ/
DI3JB+9/4P4K0nQU67582XLPhfBWl7fc/0HjsjGYt6WR6Dp93tIo1Gb5KEir
UEyhNBL5SCi/gXw3NI7KI6C4eo2Xchfou6wxlr+DzpOfgT4f6S2Kb5Q+r++F
fkfq3l7XHnnoER9zafe6Rvp+4ne/IoB+DwAZcyD6vUWv114mY0ePdR8t+dvJ
V8r1++Cc+H49iXn04/vNR2K6fknwd9lvrt8rX75y0yguXz5WeqZr/vH8PXuz
CcV9BYqD5+Fy18iVD0DzmuYz+Rlobte8J19EzQ3yW9McpXwBWgf0/qSP3XTD
TW6Xmj5thq8VNIcqvl/zvvLjKDZeOrvq0rM3qt/f6X4Ayue2r/q9/AY1nype
/umnnvY1j+Y4nScfQ/lHKqeQ/NbaPt3Wfc20pur4WkcbOmSY+yFozae8Nd3e
7uZz5bQfp/m6I3F/mBD0ewAAAAAA2G90QL8HgH0lsej/8b2JS9zOoX0MZVNR
fIRyCV5w/gVW44IaVid4tkizkO1D2r1iPVLZklLex+zw9Q8AIEP2V79XPlrp
r+3atHNtWPFqZUryfUqicd2yzQvldI/r918Mcduz9N9WLVu5jitbcmG453y6
UmJxG778AxRjPnDAQNcBpDNL8/UYvZ3a93y7x4tLn+/yRhfXZRVrpvcUDy6N
/e233vaYOfkYKFZcR+XWVz4AtXPw54OjOm04bsFc4Pnz0+j3ss9Lw2jX9hnP
Z68c7XpPbVI9upfs6316fxq0dYnvmysN5JOPe3uMuzRk6djSIhRnJy1CsYbS
N6VbKz9+2+AzUE5c2eqlF8gPQHkLpPFrb13lHFA+AcWcK6dC/Xr3u5+E5xFI
/KwSX8e0/EhsfDXvKWdClzfe9BhD3/9gW777bkhL19wpjUM6hvomfwrtG+z5
9j/82HUH+Quo79oT+Pnnnnf/ArVDY6w2L/ltqY0bM87j3SdPmuw5COQboKO0
D52jeqU1K4b+4+D9GdNnuA+GNHhp8toTWWOq2EHlelB8pPIDKxZSGr/GRTH9
atf7Pd73XP26pz53aSDyG1B9+l3QGOv7KG1fYyzfAO3VoLz/0mik7ejzkM+E
ciX4vgnpvvvlFPR7AMiYA9Tv9TuuZ6fmAuWOkbased/3qY9YPH+PJfiVhfd1
rT04T2sJzfOaNzS/6RmuNYme8crporlCmnwk8e+2NH1RfdLa5Rcm/66nWj3l
85jmnfj1JdG8P1q7vP3m295uzdOa27X2aNSgkeeBUb76wti+P+FeP5pzlENm
QL8B7sMovzjp99rfZcL4iZ7fZ3/0e83Buqf6qnWC7hnPeR9Uozz4/T7tF8xt
bXyNM3nSFPeTUO4a+cxpzpJfn3z8lGvA9X/tqZPt7xUAAAAAAFQOdEC/B4B9
JbEE/4/E7D+KbVS8hzQJ2X4uveQyO7XKqVbr2lr2xGNPuA1n9qzZrrXoeRPW
RywCAFQKLHrU801x8Mo1ftKJyp+fQr8PzpMdW/5O2uNV+5xrzbU5Wb9PrDv2
/6jGXuTrMyG9XXHiyoc+JKbfS3Nt0byl54JX3vZde4u/j9Ub5ntX7nTF7ktv
lz1bMXP6ubc7eGZLs1a90n6VV1+2eWn4I4Z/5XvTqk/Sb/0ai8b2K5e7NGjl
Y9d1ir0L+6fz0ur3keieBIpHV0z9lElTXJ9Xbl/NOV+P/Npt9y1btHJ/AvVd
+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
81R2dMXLfzv1W7drJ9qe9RyVXV/avOLXZUuXLq+Yda3fZGtX/vzPBw12TVf2
aOmnimtr83Qbz2OuvdXjeWFjbdD91S7F2CluTOdKS5b+Kh1fcdpfDP7S9eIw
j63mBe0XO3niZF83vhbLFysdW/HlyumuHPBx/6+SBP1+4CC3nbt+H8bfR6J2
+eXLVri+fdONN7ld3Nefwc+0L7o04DeCfje8v6GPlfbMlV4gXzLNNcolr/zy
OmfKpCk2f+58b7fy92o8lNdX8f+K9X7u2ed8rIbH8h0sWbzE8wYoB4LaJb1C
mofGRUdp7NpTd7DixoPPUfq19sCVfiCNQX4F0r3DfPnhd0GvFY+oa7SHgjR4
+V4oN4I+Q+kav69a7bZ+xcs3f6K5718sDVj3VnykjvKNUJulC0wIfq7vgcZS
mrh0cD9/y1bXMNavW+/jKG1efgoaa8VAqg3z5szz63SexkI6s/R03Vd718vn
QVpEGLsf5s/XUd+1Rx95NK7fK1+x8vTrXGkW+l7269vfXnn5FR8X5TfQXhDS
k6RrS5eZOnmq+0nIP2HsmHHua6LvD/r9oQP9HqACcCD6fULRPKs5rU/wPG8W
/H32YNNm7o+mv9sSz9Wcqef3bbfcZvfXu99zt+j5JW1eGrby5cuvTTq/fLUm
jJ/g8fD33Xuf+8PJdyy8v54v24I5RTlc2gXrEv1dqLlu7Zp1vj7R+RfWuMjn
L2ncqtP3l4lp8Yr/1zyqOUbrk9XBnCg/udatWvuaQmMSjlEZ/T5oq9ZbQnOQ
/A7l/6e1gOYg7SmQOLYrgrHRWqjeffV9baBc/bqn6/fB2kX+eIr/1xyZOMZ7
1e8Ldrn/XM9YDhy9dj/MMHddEtjVAAAAAABgv9AB/R4A9kZJNLZD2ojsSdde
fa0d/Y+j7T//4z/tmKOPcd1HepHyAYexiM6eSrb7BABwsLDocZ/1+5i+Le1V
Pk+tWz3lOfdly5amn2hDln1Y8diyV19f63pr1bK1P4ulX2tveGnOyrGu/ePd
5h2Lh1Oss2LhrrziSrdXK84+MUZctnTps9qz9c477nT/gXDvdGnAyqv78ksv
ux7uOWUj0Vz4ivnWmlG50nWNbN7SaEP9Xvq/7OWes78kmlt344aNnp9fdm/F
8amOeN75YCx0T8Xn33hDVL8vjO2Jrlg4+Qoozl974o4dPTY+drqH5wB+8y3X
9p9u/bTrEuqTYvilkW/csMnbIW1D+rZ0Y61xn3j8SY/JV5ye/B+0Z3CYA0H7
Bod+B9ITFC8vLVx6ufbrlQavsZWeoTFQzKL8DOTjFo6trpX23j6YL2+5+Rbv
u/qscejyxpu+J73qVr6AN2I+GYt//c11e/9+BP3TuCufQd076vr+wMpxLF1A
Wkv/fv3dv0Ix+aozft9g3JRnX22WD4bi9ru+3dX9D5Q7WJ9fNI/OThsx/Ctr
1aKV73ms7410imj8/Weuf+hz09jID+ShZg/5d0J+F9J0NBZvvN7F/QOk58uf
QONap3Yd/wykGWnchTQO5SpWbKTiJNU+/V99034HWf/dPUDQ7wEgYw40/j6G
dHFp6QuDZ7nmmxdfeMnnDa0bNF8pJl51S9/X/PB0MJ8q58ucYP2geUP7sfR6
/wPXwDU3aj7TGmHN72vcB0zz1PPtn/fcNopdly+W1jbyG+zZo6fnpH/v3e5u
P5KPn/oiP4Cub3ezlsE8o9ws0r+9HcE8IP8xxcFrPx354Ol++htSc5XmVWny
xeF+a2ni730NFMxTnkvn59k+12le1NwnHz61T+2Uv572cdE8rnh/rZ/WrVnn
6ye1VXOb9P/5wdprW7gnTmxc96bf63PT+ufTPn19/aZx0hpI/nslvrdBabCr
AQAAAADAfqED+j0ApEA6j2w60j+kh8im//ijj1u106vZSSecZBdfdLE90PiB
eAydNATpTMl7Nqcs5aB/AAAHDYse9yd/vpD9WPqnNGrpmbLXywatWHS3PY8c
ZV8O/tL3kZWflPT0kSNGum1YMfF6Tku/f6r1036NbPda18mmrTg57TWueHPp
37Kt69qvR45y+7v2IJf2rT3TpcPLB0u6q+LtlbNetn3FsknTlTav+HHZ/2UH
f/Xl6PvKf6t4bsV9Kye6crJLY3e7e8I+8Kq3X99+vueK9kxXntx4/H1RNP5e
+fjvuL2uawXSv1XUR9nIpZHXDX72TLtnvU/SiDU2ivt+8YUX7cGmD3qOd2nj
yturGHLtwa44cB+nYF4qCNa00iiUN7j5k83dXq+5TXZ8aQZdXu/itnfZ5WXz
V1+lk7dr2841BsUnar0szUBarXwB9Hm89OLLnltAe8roOrVP+rTGR3pHr569
/DNSXgXp79IQNIbSKqT3SjNR2+VvoNh+7Q+gz0j6hOp/sMmD1qxpM9fKF8f2
TJBvgPLkK3+99h2I5qWP5vlXnLvvYzB+gr8v/UZ6g3Qb5RpQ7vvhw4b790Gf
o+L+pdFoPwa1V/f9edZs1yW0N4O+e02bNPXPV/q9+qDPWJ+l7q9+KdZS2obG
qssbXTzuUmMh9Dnoe6E4T2ksygWh8VG9+lsj67+7Bwj6PQBkzEHS70ONW/u2
yK9NmrV88/Tc1TP9o2B+0bNY+8goVlzPc+2tIl9BPSdWx3T6Z595zv254v53
hVGfPa1RpItrnur7aV/X8bVG0LykOUyvleNGfwtqTte8K11dfmjd3+vhuvkn
wTWad9UeXa/rvgvmAF2jOVrna88ezV+rVv6+W++O+fkph4z2hNH8ojwuirHX
vUINX76QyonzfjDnqp3OR5/4fdXvvn36en4g9dX36NG6YEeB+5FJc1eMvvvQ
JRTtY6N+qS79rSt/B60XdI18+VSH9hqQX5r2hNGaSj4KWn9F9wqwUmT9+wYA
AAAAABULHdDvAXKLxN/psCSdI3u04h4V/yBNQjkB76/fwC656BI77pjjrNa1
tTxeUD+TvUPnxvM9J9adfJ809wMAqNBY9ChtV1q3YrNPPeVUa9K4iWvm0tLi
55mVeu12601/uH6uuLl333nP9WLZi5XvVXqstE7Fscl2rVh1+UqF91ZctfLK
y74uHTXcD1d2fJ0r3V02dsVRSweXLfvjjz72a6S/SgPXmk85VqSbS0dQDLps
4dKltbe59kZxm/0nfdwWr5zr0oe1p63aoth22biV+1Z7rLtuGCuy40vfHDd2
vMfcSTdQft1wDKQTSEOX3b5zp9ddr0iMZddestOnTff8vIq7kw6hdsgfQHZ8
6dNaw3YLxkdauezoynkvDXzzps3uIxHWJdu8NHuNqXR8xZcr/k6x7/K7kP1d
9cnOr7GS1iD9Y/y4Cd4OjY36pnqkL0gHD7UCjZGQXqCxVT5+6f/SSKQtKPZd
cfrSrqVr6z3l9ldefI2xctFLX9HnI31D462j+iTfAmnzyvevz0Y5+6Wh6z6u
hwRt1lHX67PRd27pkqX266JfPXe9zvNxC+oO+yWkQ0i3lwYvLUL1yDdC/hv6
3KRJq49dg/ZpbwflH5B/x6yZszxuX9/1fM9BnO/+DcqxL21I31+1Q+Oo1+qL
vh/Kd6BxmzrlW9f7lbsh67+7Bwj6PQBkzMHS7xOQ77W0bsWT//j9j65N6zmu
eUc5X6TPy7dNc0n4jPD9aIL3FEse5oFxLOpjlxe0TTl85H+lOpSDRWsLzS+a
R5W7X8/B0PcuemE0F430f/mEKXZdPgLyGVOun+j+L3lxf7/CmA4fX+PEdPtQ
wy+M5fRXHL7WHNLtwzwvGj9p8ZrH5Cem+SrMEaD7as5S++UvWRSbxz0mXs/v
YG7X+1ozhX0Oi+rUWGpcNgX31lypeUw+B5rPwzaq76p/5oyZPu/q3Kx/twAA
AAAAoOKjA/o9QM7g9oqkfXq96L8xG4lsILLTSM9QnuP69erb2Wee7TH355x1
judZll1e9hHZO0KtKNt9AwDIGhY9+l6qQ4YGz837reppVa1xowfcHi/brj9j
bfe5iUU/Uxyc4uq1V7n0zVFff+N1Kaf7TzNnuf1Y57i2HT53g6PWcNoTXnbt
HbHc7/6jWMy5YsOWLlnq+71KI5fdffSo0a736zmumGrZpMO+hHOB/LKktUqP
nzhhkuvFsrvPnD7T2+J5ZmN9UZ5d2d1l/1cO31J9C+Yd2d3XrV3v/gWKxfc+
JIyFdATZwxWHr7bIHh/OU/E5adFiz9Ou3LvyHZs8abLHwkk3UKybfq69BzQW
a1av9Zhy1RvmKQj7p89I7ZBuLb8BaQZC1ylOXvdQf6VLaMykmWuukw7hMYmx
ejSXqi/SrbXn7fix4z32XrF3P3z/gy2Yv8DbIPt/mANA17jtf/1GHxP3bdi8
xXMMKKev4u+HDRnmsYVzg++B+iWtQnq9jq51xHQK1bHglwW+r7BiCqXZy6dC
/gnqi7QFfTfkG6IcwDOmzfB6pZvrc5z10ywf7+3bot8pfVekiaheafTqq+pQ
/KG+P9IjdF+Ng3w9lD9gffB56zrpIbqXxlMx+xpDaUYTYt+XJcH99T3UtapD
31Vd79+hbP/uHiDo9wCQMYdAv4/GzRf781vPAc2tet4K+dxpXnRfvaLi+DNC
6wW9J+3e9e2kXO86V9dpDaK5Xs96zenykdN9ovNcuDDZXcJcbppndG/NMZpP
1VfdqzjBvy4cB9Xl7fKY9Ui0opLonKu5WuuNuI9f/EbRc6X7617KeaR7ab7V
HKh1STgXh/4A8bFXDH9h0e61QmK1Pi5FHq8vfwG1T+Ok80uKd7dNY6b+aJ7T
GkPnZv27BQAAAAAAFR8d0O8BcpOwJPzf9zZescq1AMXc176xtp184sl21N+O
8ufDa6+85lrS0iVL3Tbi9onkegAAcg2LHjPV71Wkl0oL3Razj0sLV55X6alb
t2yNadElpa+N+Vxpvabnd0lC3vpILJ+ubNKyW8teLt000e4uXTxu09Y1vkdr
tA631wc/k2as69QO7acifd3z1hYnGLojFs9jW6qfYV8Ditzuvmu3vb5U30Pt
IKHeSNiPiPdb/Q91A+nT0gCkJciWr3HTWla6s15rPHw/l4Q8ANFctpGoPrCz
IKZhlN6zXvVpXKR3bI7F2uncZB+AeJ8Ki7wenSd9W+MqvVuavDSEMEfv7jy6
kbjtP6yjOLYHr+65etVqjx+U7hDqDapDfdPrqGYQ9W1wzTx/h+sz0e/Kao8T
lJYS1SKicYl67ecFbdJ50nB0r/A7VZKwx7DqdI0i9n3Q9aHmrnpCTcX3RtZ3
Lhj7UP9xnaMgOoYaC8Xquy+AvmMx7SPe56KoBhK/dwUG/R4AMuYQ6feR+Dog
OqeXxDTqUHOOxOLG48+IeI73SPT9+LwVKXP/SExLL+UPXla6313i7Yj6sJUU
p643+ZpS9UZ2t29P90l8Hebxz8iWlaruPX2GyWT7ewUAAAAAAJUDHdDvAXIX
HWLxCtG9A2d6Ttynn3rarrvmOjvrzLPs/PPOtwb1G/i+h4oplE3YbfYpYvgB
AHISix73S79P+G/i+1ENPRKztxe7PlgqFi7p/FSU2ms1LDGbu9cZELWhJ1wX
2u4T7Plxm37YpuRrDmYJ75mubxZtn2vMoQ4RKX1+qJOXaV/CuO5tD9rQ78G1
iUStIN04JaD6i2Oxi5H9sOOHfgVhLoBQP0+8X9wvIykuMurfULxH34mwbaHm
UpLBd2pfUb36zvp3LEGfj4/XQbxXeQD9HgAy5hDo9+GzPrH+eImdE9fpE/yv
Igm6+u55v6T0cyRV2cN9/GWqelLNj8l1pqDM357J5+6tjhT3jc+vydclv7eX
euNrCzR8AAAAAAA4WOiAfg+Qk4TxE4oR1B72UyZPtZdffNn+fde/7eKLLraq
p1ezK6+40lo0b+E/W7ZkWZm8yF5X4msAgFzEosd91u/TaeCRqO19j2uvhHPT
lZT6fcT2T89LvD6xnoQYszL1perfHtpZpu7k+yefE/YhXaxfcrvj11jpWMPE
e5Wkvib+flLbQt0jqkek6V+qcUz4fyntJN1nHZak78o+X2dp3ktu356+Uym+
43s7J6XfQnJcYqo2VFDQ7wEgYw5Z/H2krB+ZJdwzaY0Qnl+qREq/Tusflvg6
4f9x34D98RNLPic+d+/9vJT+aLG+lTkv1fVJ/Y3vl5Pc3nTzvlkZvwgAAAAA
AIADQgf0e4CcIMyhGNpCPOdyQaHvsfvJx72tcaPGVuXkKp4r/9yzz7VHHn4k
eP8Tj8nfGsbcJ9gj4nkMy0HfAACyikWP+6XfJ2v4wTH0qwrfi8eaRSy1Bpqq
JLcr4Z4lKfanLXVdqby7sTi+RBu2fpRKA0++X3IcWnLb0v0/VR/SXZOKdFp8
xEprCPvwWZapb09t2lvbEyiJxTnu9fqwJOQPjmsZe9LwE/uZOE+nat/evlOp
tI49tTXh/UhiP5PuWcr3oYKDfg8AGXMo9PukuuNYmvMs6bUlvJf4Ol1+nL39
P13d6Ug+J1X/91RXcilJcV6665P7u6/9SXUdAAAAAADAgaID+j1A5SK5hO8n
6DI7d+y0FctW2JjRY6zjqx2t7u11rcrJp9iRRxzpMfcd2newkV+NtIULFrld
WvmK41pBQtwGtmEAAIuWEvN9zIcOGWb317/fqp5e1f2ivhrxlftARdLZvpOI
JOmve7yn7eH/Kd4vs3fsnq6LWJkYvb1ek66eVG1N9fM9tWVPP0t3/oHWsS/3
2Fu7U4xp2ustxc+S+5Jpbt59aePe2rKvP99LOyuLdi/Q7wEgYw6lfg8AAAAA
AAAVGx3Q7wEqF4kl4X39rmtf3a1b8mzRgkU2+PPB9mDTB+2qK6+yM6qdYaee
cqpdd20t6/RaJ5v10yzbuGGjPwPC/YTj+/0mx+sBAIA/H7dvy7dhrt838D1I
GjeM6fdbtma9fQBw8EG/B4CMQb8HAAAAAACAdOiAfg9QuQhL0v+LdhW5Jj/t
h2n27jvvesz9f/3Hf9mf/+fPdsXlV9jLL71iE8ZNsJUrVlrBjoLUOXfR7gEA
UoJ+D5B7oN8DQMag3wMAAAAAAEA6dEC/B6hchCV4rbj54qJi146mT5tuvXr2
socfesSuvupqO/OMM+3MamfaA40esJ7de9oP3/9o69eu3/17b0l16sjzAAAg
Jej3ALkH+j0AZAz6PQAAAAAAAKRDB/R7gEpJSXHEtudttxXLV9qUSVPs1Vde
tZtuuMlOO+U0z5df67rrre3TbW340OG2aOEit/XKDh2vw2LHZC0fAADKgH4P
kHug3wNAxqDfAwAAAAAAQDp0QL8HqFyUSLsv8d/rXxcttiFfDrGnn3raLqpx
kf2f//o/9n//v/9nt916m33Y60O38UpXKiosil8nsPkCAOwfem7mx/T7BvUb
WLVQvx+Ofg9QWUG/B4CMQb8HAAAAAACAdOiAfg9Q/rHoUb+vbo9N+L2MhPvR
WzTmfmf+Ttu4fqONGT3WOr3Wye7+99123j/Pt9NPq2qXXXKZPdvuWRv65VBb
uGCha01Fu4pS23hTlWyPAwBAOUXP4vzt+TZ0yFBreH9D36OkUYNGNnzYcNuy
eQvrKYBKCPo9AGQM+j0AAAAAAACkQwf0e4Dyj8WOoVaf8J5+h0uKSqyosNg2
rNvgtp5+n/azpk0etJpX1LRzzj7Hrri8pseDvtH5Dfv+u+9t1cpVrjNFkn+/
91ayPQ4AAOWUqH6/I6rfN2hoZ515lh+1R8kf6PcAlRL0ewDIGPR7AAAAAAAA
SIcO6PcAFY+EUlxU7Fr8mtVrberkqfZmlzd9n/uj/naUHfHXIzxvvmLuZRNa
tmRZNOa+sHj3vvaWut4yPwMAgLSg3wPkHuj3AJAx6PcAAAAAAACQDh3Q7wEq
JGEe/e3bttuvi361gQMGWquWrezKmlfa//u//21HHnGk1Ql+p3t/3NtmTJ9h
69etd/tQGXtuiZWN6w9LOegnAEBFAP0eIPdAvweAjEG/BwAAAAAAgHTogH4P
UKHQ76zi5/V7u2rFKpsyeYp16/qO1b6ptp1/3gV2/j/Pt+uurWXNn2hu/fv2
t8W//mZ/bP7DCncVRutIkYMfAAAODPR7gNwD/R4AMgb9HgAAAAAAANKhA/o9
QPkksSS8r9/LDes32Ly582zw54Pt2Wee83z5fzvib1b19Gp21513Wc/uPW3a
j9M85r5oV1E8Vl/H8HWpe2S7rwAAFRzp9ztcvx9mjRo0srPOPDuu32+Rfl8O
2ggABxf0ewDIGPR7AAAAAAAASIcO6PcA5ZPkEryn39fNm/6wqVOmWqfXOtlt
t9xmp1Q5xf76l79ajQtqWLs27WzkV1/b8mXLbVvetmi+/OJIqTrK3CPb/QQA
qASE+r30+saNGts5Z51jDe+P6vdb/9hqXspBOwHg4IF+DwAZg34PAAAAAAAA
6dAB/R6gfGKxY4nsw8Vui120YJF9MfgLa/5kczvv3PPs6KOOtvP+eZ41qN/A
evZ433V95dTfmb/TSqTbJ9ZlB6ldAABQhtL6/QPo9wA5APo9AGQM+j0AAAAA
AACkQwf0e4DyQ1hi/5cGLy1+xbIVNnniZOvxXg9r0riJXVTjItfutdf9Y488
5nn0ly9dbnlb86yosMhKlRT1AgDAwQX9HiD3QL8HgIxBvwcAAAAAAIB06IB+
D1B+CEvwOhLT7leuWOX6fKuWrazmFTXt+OOOtyonV/E973vE9rnfuGGjlSnZ
7gsAQA6Bfg+Qe6DfA0DGoN8DAAAAAABAOnRAvwcoXwS/c4qhX7N6jU2eNNle
feU1u+H6G63KSVXsuGOOsxtvuNHatW1nX3z+hS2Yv8A2bdzkv6uJdlrF7UtL
iv/+hiXbfQMAqKSg3wPkHuj3AJAx6PcAAAAAAACQDh3Q7wGyQ/LvlkV1+y2b
t9j8efNt8OdfWNs2be2Siy+xE44/0aqeVtXq3lHX3n7zbZs0cbLr+zu0z31R
SZm6S2n3sbq9ZLvPAACVlFC/HzFshD3QuImdc/a5dn/9BjZs6DDX0rLdPgA4
+KDfA0DGoN8DAAAAAABAOnRAvwc4tJSURTqP8uOH55QUl1jhrkLbsH6DzZw+
07q93c0a3N/Qql9Q3f76lyPs3HPOtWZNm9nIr0ba4kWLbXvedtunku2+AwDk
CKF+L/t70wea+nO7/n31beiQYa7vJT7zAaBygH4PABmDfg8AAAAAAADp0AH9
HuDQkkK/DzV8/Vzx8/nb812XV57ldm2fsTPPONP+cdTRflT+5e7vdbfvvv3O
Nqzf6OfKzrPXku1+AwDkEOj3ALkH+j0AZAz6PQAAAAAAAKRDB/R7gENLGv1e
7MzfaSuWr7AJ4yda17e7WaMGjazGBTXs1Cqn2tVXXWMtmrewzz/73ObNmWd/
bN5iRYXFHqvv16cr2e4vAEAOgn4PkHug3wNAxqDfAwAAAAAAQDp0QL8HOLSk
0O3dTpO33WPuh3wxxHX6a6+5zqpVrWannXKa3XnHndbljS42eeJkW7Vyle9z
X6ouvU4s2e4jAECOg34PkHug3wNAxqDfAwAAAMD/z96dh0dWlWvD/+P7vvc9
r+e8es7RIxxlkHmeh6ZBaAFBwIF5FFFQmZ0A8SjKIIejiIqAIgqKKApCMwp0
Q0/pzENlnuc5qUpSSWqeUnV/+3mqdqWSTnV3QpJdw72u63ftJJ1OV6Vr71p7
3Ws9i4goHTkwvydaWQvk9zJG01DfgD89+5zmO3vusSf+5Z//BSeftAY/+uGP
8O7GdzXbd027dExH1tzrOGxqfk9ERBmD+T1R/mF+T0RLxvyeiIiIiIiI0pED
83ui5bFQM74u55jkNubYTGtLG1595VV896678bkLPoeTTjgJxx97PL54zRfx
6C8fRXFhMYYHh3V9fiQcsf55ERHRLjG/J8o/zO+JaMmY3xMREREREVE6cmB+
T7Q8FmpSKz8yA5/Hh5HhUVSUV+DJXz+Jr1z3FRx79LE4+sijcc7Z5+DO79yJ
9S+tR5O5z30oEs96Uve5t/r5ERFRWszvifIP83siWjLm90RERERERJSOHJjf
Ey0LyW5iqXk74p8HfAH09fRh07ub8MB9D2Dd6evw4X/7MP7tQ/+Giy68CI8/
9riOz0yMTyAcDM/NeOb8MCIiylTM74nyD/N7Iloy5vdERERERESUjhyY3xMt
r0STLH5i3Knn0pO/eRJf+fL1OO7Y43DUkUfpmvv/+t73sf7lV9Dc1AK3y51c
c6845kpElFWY3xPlH+b3RLRkzO+JiIiIiIgoHTkwvydaVtGZKKYnp9He2o4N
72zA9777PXz2gs/ihONOwJqT1+DaL34Jv/j5L3Wf+4H+QfiM8y+5bt/4+zre
yvOOiCirML8nyj/M74loyZjfExERERERUTpyYH5P9P7JwTiXgoEgnONOVFVW
4U/P/gm33XobDjzgQOy5x5446cST8L27v4fXXn0Nne2d8Hl8iIQjiM7ENPM3
f07yOL9Z/RyJiCi91Pz+ZsnvT0rk92/G83tmaUQ5h/k9ES0Z83siIiIiIiJK
Rw7M74mWLppgNJ/Xh67OLrz1j7dwz/fvwbnnnIu999obxx59LK656ho8+stH
UVxUjOGhEYSCofhazHTnF9J8TEREmUdaNP4+8M7b7+C2W27DySet0X1T3nj9
Ta3JYr5XaLP68RLRsmB+T0RLxvyeiIiIiIiI0pED83uixUucF5LBy5r78bFx
VFVU4enfP4Orr7pG19ofc/QxOPfT5+IH//UDvPC3F3UMZmJ8AuFg2PrHT0RE
y0ea5PeeRH5/621Yk8zv38AU83uinMT8noiWjPk9ERERERERpSMH5vdEixON
73Evte/dLjd6u3uxccNG/PQnD+Pyyy7HPnvvg/33OwCf/+zn8esnfo3ysnKM
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
xOcy3ih71w8PDaNg23b86tFf4bJLL8eJx5+IY48+Fud/5nzc+8N78fprr2u2
73V7EY1E9e/L6znGcQ4iIlpN8hYk/SlfAJvf24w777gLZ3zyDFx15dV46e8v
wTnunJ1jxvcoopzB/J6Iloz5PREREREREaUjh2g8v/+t5PcXXqz18x+4/wGU
lZQhbNYhN5vVj5dyz7wxiVAwjMmJSbQ0t+LPz/1F97X/7PmfxXHHHo9zz/mM
rsH/w9N/0H3uBwcG4ff6EZ2Jzs1FOM5BRESrSLJ7mUcm+f2mdzdp/fxT156K
Ky67Ai+9+BKcxvuafp/k/MzUiHIG83siWjLm90RERERERJSOHDS/D+DJ3zyJ
Cz9/oa5vlrXNJUUlWr9c7xnNZvXjpdyjWQY095A19yPDI1r74fe/+z0uu/Qy
fT0eesihOOfsc/DAfQ/g3Q3vwj5i15zf/HtmHsJxSiIisoK8/8hcMsnvN7yz
AbfeciuOP/Z47Ve98LcX4vXzze/nWDxRzmB+T0RLxvyeiIiIiIiIdkL2uJe9
wx//1eM4/7zzNSu98447db9xWZfPsR9aMWYzPpYa+L3dvXj7rXfw3bvuxkkn
noz99t0Pp5x8Cm74yg146rdPoaqiChPjE/F5JYmfIWsekz/PXHuf8nOJiIhW
nDTj/cfr8eHVV17Ftddci0/s+wmsO30dnv3js/H6+eb3IQMeLxEtC+b3RLRk
zO+JiIiIiIhIpOaamP16dCYGv8+Pnz/yc5xx+jp8/GMf17z0zdff1HVkc/JR
oqVKbYmvmbWGZc19UWGR7nP/ta9+DWd+6kwcd8xx+PznvoD7770fb7z+Bpqb
mrWufiQ8M/vzdvVvWf2ciYgotyxU/x7xo3xd5qL99fm/4sIvXIh//7d/1/ey
3z75W4w5xhb+efOb1c+PiBaF+T0RLRnzeyIiIiIiIjLEFsrv5RCNIegP4uGf
Poy1p6zFRz/yUVx91dVY//J6+FPze2mp94/zfxZROvOb8bVwKIJJ5yRam1ux
/qX1uOcH9+CC8y/A2jVr8al1Z+JL134JTzz+hO5zPz42jrDWy49Z/1yIiCh/
peb3qTVf5EtGf8nj9uLPf/ozzv/M+fjA//kADj/sCPz68V/DMepYeAx+frP6
+RHRojC/J6IlY35PREREREREJrOl3AfK+vuAP4BHHn4Ep3/yDOyz9z644fob
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
bx3Bwn3/NP3/xdyvUXYKJ3h9QX1tyeuqsrJa54QMDdnh8fj1z2d2dW+F+DHg
D+g+Z9+9624cdeTRuOgLF+Gdt97RPXklix8dsWPzps348QM/xtVXXo2jjzoa
H//Yx/GpdZ/CPT+4R9fcN9Y3Jtbsh3fY114/530eEVFuSG3G57LfisPugM1W
ozVdpaaQc9KV7MdY/Z5JlK/CoXjtpNaWVlSUV+o4vJyrwUDQ+utIjmN+T7Rz
QX8Yo8MOze4ry20YGhiBzxPQNfk7SmTtiVx9uS2U389kWn6foPUcpXbBzr4v
vAgZ8JwyznL9njL4dy3vUVIrcT6pvShZvst4r+iU2oxl5br/jqzFl2xfz19m
+ERERESUbRLZvdxXhgIRBHwhTE5MY2TYju6efjQ3t2u+KuukZc29zVaL1tYO
DBl/LmPcksPqOFtkdpxbPpZ7M70/C0cXsHBfPBKJZ/6Uq2JzXidzMvyqGs3w
+weGdd1VMBiZrQkxn9mMj2UdVmV5JW656RYcfODBOP+8C/D6a6/DPmLXsb63
33obd3/3bpxw3AnYf7/9ccB+B+CTp34S9917H7Zs2gL7qEPXXybnY+9QhyJm
/TlKRETLI6VJrRXZL0X2XyktLdc+zqh9HD6jHxQfu1yo/xLvw+Rvf8Ucy533
O8nb3wetlFAoomPwsp+t1NFva22D1+ObrX9LK4b5PdHOSY365sZWbC8oRmND
i667N9fC7+4a+eUSWejfTNt/WX0yHjSTYI4NhUKJMaMF+xK7b8H+SF5L83va
aZ924XG69/czVvg1pevtI3NIfm/WZnQkaudXVlShp7tHv39OZs/8noiIiIiy
iGT3wUBE70Ol7lt/7yAa65tRXlaFwsIS3ae83vi8q6sXIyMOrX0u9fRlfDsQ
jCTz+tS6aHp/tpM+vvwdWds2H8d/c1syu5/3/+50utDd3acZvtQulvWPkuEv
OEab0mR+9ZhjDP948x/48nVfxkknnqRZ/cYNG2GrsuHFF17Edddeh2OPOQ77
7rMv1py0BtdcdQ0e+dkjaG5q0T1U9X7ObPLzo7NHjhESEeUmmbMla3tHR0Z1
fU5ZWQVaWzu1Zn4o0R/Z9fio9e+rq4/5Pa0Oud/o7e5F4fZC2CptuldScv0c
rSjm90QJC7SocRlyjI6jpLhc6+b39Q4a16bZjH7BOvcrmd8v+O9Zn7Gm9g/m
rutOqbOSJjve/TXiGfD8Mk3atfSL+TnL8TNWTmRe7XxlvG9J39417UJXZze2
FxSiqaFJ197zfYOIiIiIMk5qk89T1xXL1t4yBzoMXW8/PeXRzF72b5P6b2Wl
laix1aG5qVXr5g8Njeqe9rIHrKyX1pw9sTeZeY8Qmd+330UfP22tzAyrzUXL
bIE97eT1IPNAZO/cgcERXYNvM15/TcbrzzkxqXVSo/Nq2puvcal33983gCce
fwJXXnElzj3nM3jowYdw/7334+abbsE5Z5+DE44/EaeuPRWXXXoZfvzAg1ov
v7mxWdfty1xtPS9SzxUiIspdiSZ7o0gWJGvvC7ZtR01NHez2cZ2fmOyPLHZ8
NB+k/b1kwGOjrCXTNfXjcLx+l5yDo6NjqKqs0vX3nR1d8Lq98TF4ZMB1JMcx
vydKSG3yuXGtkjr5Pd392LZlO1qa2zExNmmcM4hLl6evtgzIWIlWSrx+/nzx
Nfmjw6NoqGtAwdYCnQModba43p6IiIiIMpY0XUcMXWcv88Uls/e4fBh3ODHQ
P4z21k7UVNejoqxK1Rofd7Z3Y1TX2vviY9nGfaCMqy283mzeOFwG9Okpu8jr
yKyn39c3iNq6RpSVVaK1pU3r28sayTlr8RP3YLK/fUd7B7539/dw1plnYc3J
a3DTjTfjgvMuwJFHHImP7fkxnHH6Gbj9ttvxxz88i7KSMowY93S65t7qc5OI
iFZfosk63tERO6ptNbq+t62tAx5vIN7fyYD3RaK8EYnN2Q9ZunvSH+zp6dP1
c40Njbp+Tva1tfz6kSeY3xPNE42Po0g2Lvvey7qHou0lGEzsey/rIna6Hp75
PdGyiSTy+lThUBhej1f3va+qiM/9kzqNkVCE+T0RERERZZxoYg64fp5yv+nz
BuEcn9I6b9W2OhRsLcTm97aitLgc7W1dRh/XiYAvpPX0Q8GZeB95J7l9pu2F
RdkpnpfEx299/hAGh0ZRXV2HrVu26fzpMce43pMlx+wS92B+n1/rot3wlRuw
3yf2wz/973/S4yf2+QQO3P9AXXv/o3t+hG3Gz5H19vIzolpbLWb5OUpERNaR
tbxdHV0oLCjUPTKHjfcdq98LifKRua+S2Q+MGn28ceNepbm5FUXbi9Df2w+f
x6fnrdTN4Dj8ymN+TzQrlqhjKBm91+3X7L6kqAwN9c06riJjJhmV3TO/p1wX
imgun8rv9es+OzIvt7ysQvv4Mv6zYB1HIiIiIiKrpWT2fl8IU04XhgdH0dbS
gbqaBtgqa7RGfktTG/p6BnQPN9eUF0F/OH7vKXVQQ7P7lMvYWmp2b9a4nJUB
/XjKXon5ITMz8Xkhbrdf921obGjSezBZe+UYdWgtffM1LmMpHrcHtdW1+OI1
12LffT6B//f/+f/wzx/4Fxx6yKG44vIr8Jtf/0bnAMgeaK4pF0LBUGJvtJj1
5ygREa06ee+Q+pryntLU2ISS4hKtrzk95bb+vZAoL8Xm3V9E0d3Tr/M4ZW7N
+Nh4fN97aczuVwXze6JZZh1DGSfRfe+LylBYUIzB/mF43YFkZh6WtQ9W5/bM
7ykfGH0CWZeRyjXtRmtzq9GvL4XN6DtMOaf061ZfP4iIiIiIFiLZvayjn3S6
dG97yelrbPVaG1/mjEuOL18fs09oLX2pqS/3emZ2bx4lt4/vdx+dU9uSa+5p
2SXqp0rdVFmP73b7tNZ9Y30jSktKUVFeobX0JXcx11/JfVplRSWuufoaHHzg
wfjg//0g/vkD/6xZvtTTv+Pbd+DhnzyM5559Dls2bcG4Y1znZ8c4/ktElJck
l5K1vLL3SrWtWueATYw7EQiErH8fJMpb8XuLQDCCyUk3GhqaYbPV6HkqczWT
+96z/7Zq10nm90QJ0XhtfNeUR/cd3L6tSPcclM/jYygxze6lfqEcLc/umd9T
rpuX38saj/GxCVSWV6K4qBgtTS3x8SKzWX0NISIiIiJK1HWTueGSu0smL/PD
uzp6jH6sTe8ziwpLNccfGbLDPe3V+02dJz6v5puZ5UcSY2la29zcm9Lqvjrl
JHmNxWs8xF9nEX3dzcDn9evYYVlpGV579XU0NTZjanLauEcLaQbvdnl0fvWt
N9+KM05fh8MPPRz77rMv9viPPfCRD/8H9tzjP3HQAQfh3E+fi3t+8EO0t7Ub
r+8Qx3+JiPIN4kepwyJjfLI3ZnlZObo6u7TmpuylafV7IVE+0rnCwYgeXW4f
Ort6UVFZjTrZP8k+pueseQ4zu10dzO+J5gr4wxgaHEVhQYnWMezt7te1EvG8
PJZZa++Z31OOi4RnlOx7L6Ymp7Q/X1xYjPq6eq2jz/yeiIiIiCyTyOplH+9o
JJaslS+5u+T2Uiff3JdNMnupk9/Z3q1r7WWeuM8bjGf0c/Zoi837fPa+L5Ts
K3PNPa2MUNh8nc3uyWDuh+r2+DE8bIfNVovS0grU1TXC7hjXsd5AIIzhEQfe
emsDfvXoY/j2t76Niy+6GKesWYsjDjsChx16GA4+6GCcfdbZ+OE9P0RHeydC
wTDzeyKifJJo8X1XvFovX/a9r6qswsTYhK7b4Vg3kTXMWl/C7phAYWEJSssq
0dHRBb8vgKgUZjLPY6uvJXmC+T3RXNOTbl17v2XTNq1jODkxPbvmIVE73/LM
nvk95QvZ8z4cwUx4Rvvww0PDqK9r0DUfvT292tdPvlfA+usHEREREeUhOUQl
b59J7m8/ODCC1uZ23d++2laHWuMo95eyN5vTuMeUPdtS7y1n5uf181jeL6e8
Zmb6sjbf4w1gaNiO+oZmVNlq0dTcBseYE15fUPUPDKO2th5bNm/Byy+9jD88
/Qc88dgT+Pkjv9Dc/qEHH8Lzf/krRoZH4vX3md8TEeWHlCbreO0jdtgqbbov
S2tLK7wer+6rwvX3RNYw8/tplxdd3X3YtGkrqmvqMTw8qnOVLb+G5CHm90Sz
5L5xeMiO6qpaFG0v0bEVWY8/Z9zE6rye+T3lk0R+L2Q/RVmjIbXz62rrdF6u
9h043kNEREREqw1zP5b5pu5pD4YGRow+a7fm9uWllXpv2dHWhdFhh9bJ95vr
7UOz+9un3mummy9ueb+c8lpyTX4kvo+Dzx/C0JBds/vyChta2zo1wze/T/Yu
lj2NZZ9Ut8uNKecU7KPG9zc0GedEtR69xp9HZ2Ic+yMiygepzfjcNe3SMb4t
m7boGN/w0IjuqSK1N5nfE1nDzO+HjfuW+vomFGwvRntHN6am3NZfQ/IU83ui
hCgQNq5PskaisKAYzY2tuvY+dS2Emd2n7kdouQy4thOtmFB87b3Mv5V5ubXV
tSguKkFPd4+OBcUS9Uotv34QERERUf4wm/Gx1JGU/qrkkzIOLfeSWzcXoKqi
Gj1dfXpPKfux7ZDVp+T05r73Jub3lHmM1+4M4iLxo6y1Hxkd03X4RcVlmuVL
fX353pmZmJ4bks8n79ei8fWWAX8wXjffbLyfIyLKbaktBs3opQaLjPG9t/E9
raEvY3zhUDg+Bsj8nsgSUmdJ9kOSeZlSN7+hsQVj45O6h5Ll15E8xfyeKE76
B2OOCaPvUI/SkgoMDY7C6/bD3HswnMzvY8zviVZLKKLzbz0uDzraOrSulvTv
JycmEZYxHzl/U1sGXEuIiIiIKPfJeEXAF8D42Dg6OzpRV1OHqgobbFW1aG3p
0HX4sjebZPdy3xaVzDMlrw/Ny+yZ31PGS6y9F5Lfy/osl8uHwaFR1NQ2oLKq
Bi3Ga19qrkbS1FiV8yZmZvpmy4DzmYiIVhjiR8miZC9MGeOrKK9AeWk5xhxj
OsYXCc/E83ur3++I8pQ/ENZ6StKvKy+v0j2RZN+kKOdaWob5PeWleU1ea1Lb
raWpFZXlNtTXNupYi9Q1XCinn792gvk90UqZ0f2vRodHYauyodpWja7Obl2z
Ies5djifrb62EBEREVF2MttCXzNbND6GEgwEMTU5jaHBIbS1tKGyolLHoOtr
G9DbM6D72/u8wbl5fMqccM3vjXtN/XPza8n54guzvl9OZErk+MYxEIzA7faj
p3cA1dV1KC4pR2/fINwu7+z9Wix+7iC1dlpqs/rcJyKiVSHj77JGx2Ef03mP
0nfq7OjStfeyP2Y8uzf6R8bR+vc6ojySmJ/p8QTQ2dmrczIlw3dOurSmvrYM
uIbkI+b3lJfmNVnj6xh1YOvmbbpHYX/vYLLGYeo6iYxk9fWdaAXJuo1J5xTa
WttQsK0ADfUNmBif0Hm5+h5hNquvKURERESU3VLbQl9DvGab7Nkt944tzS06
7lxaXKr1ofp6+uAcn9T97YP+cDK3T7uePs3Xmd9TVkmM97pcXnR29qC4uAzl
FTb09Q1ofQpda2+eT8zuiYjymszrkjU6PV09qCyvRG1NLdwut+6tYmb3zO+J
VpnRj5Mpl1JbaWrao/MxJb+Xfe9lnuaMWTMpA64h+Yj5PeWl1GZcg9zTbp3v
t3HDe6iracCU05VZNfKZ31Mekvl9ss5e1jVJ3fziomLdE0vr5kfnncdWX1OI
iIiIKHekNuNzGZuQmq7OcafOKy0rLUNpSSmaGpsw0D+gX3dNueDz+ndYQ7+z
mvjM7ynbhRICgYiu0erp6df8vqamDv19/bqXsZnbJ7P8lHOLiIjyh9Qvso/Y
NbuX2kWd7Z0ISd38UET7WczviVZbfB6m9OVk/6O+vqHkvvcjo2OIyblrtgy4
huQj5veUl1Ka9BGGh0Zgq6pGYUExujp6dM2Eue5+ZzUMM4Ll13milSF9B6lL
2tHegZLEuiapsTX/HE42q68rRERERJTdpNx3asYYlbHmkNEnncLQwBCam1r0
vrGyoko/HjHuIz0uj84vlbVj4WBkh3ngu9rXnvk9ZbNQCtkzVTL85pZ24xyx
6f3b5MSknkPM7omI8pzRp3JNu9HV2YVtW7ahtqYOI8MjiXX3s9k983ui1aXz
MI17mKEhO2prG1FWXoWu7j643D7MaVZfQ/IU83vKS2Yz+g5St0drc28tQHNj
K8bsE7oXYXKcxOp8nvk95alQaAZDg8Oor63XuqRSX0vGR5PN6usIEREREeUc
2X9V6rvK+LHf58eYYxztbe0oKylD4fZC1NXWaX0or9uruaSsL5Y54TL+PBNe
eO39cmT4VvfNiRY2u24raNy/+fwhOBwTxnnSgOLCYl1b6Zxwxtfhmy0DznMi
Ilpd0q+yj9pRX1ePLZu2oK21XTOp1Nye+T3R6tH5l8Y9RtC4P/H6gmhr60RB
QZFm+HajLyd9PPMUtvr6kc+Y31NeSjQZl5G+Q11NHYq2F2FkyA6fJzC7ZoL1
84ksI+M/7W0dsFXZNMOfdE5qP36HZvX1hIiIiIhyRiwKXUsva+5lnKSmugbl
peXaJ+3q6ILD7oDH7Y2vtw+Fte6r1IOVfqqZ35v3k/PvK99Phm9135wovVhy
DFjWb3k8AfT1DaDGVqN7oMlaS1lzGYtaf34TEdHqkxosrmmXZvayPqeivFLX
6wT8Aeb3RBaRcfeg0W/zJ+Ze1tY2oKCgGJ1dvVpLX6JZaRrRsg9nGeb3lK90
XCYQRmtzG6oqbKiva8TUlBshGU+JJMZYZC55BlxPifJDfO1GZAZae3F8Ygo1
1bWorqpGT3ev9uv1/J3fMuB6QkRERETZY4e9HBMtKv1QXxBDgyNoampBZaVN
x7JaW9vR3z8Ip3MKPm8AoZA5tjyjNaNCwfjn5txq814ylfZ3Qyks73sTLa/Z
dVwR41yZRndXL8pKK4xzqF7PHzlH5px7mHceEhFR7kjJ+8JGX2l4aBTVVTUo
KixBd2eP7pcp+w5FkvXzZ1n9fkaUD0Ka34fhdnv1Xqeqsho11XUYG5tAMBCO
n79yClt9LclzzO8pLxl9CFn3MDXpNu4nK1FZbsNA/zB8viDMDNHqayhRfkmc
dwkyz6+zqxflZRVoqGvAxPiE8X41gznN6usIEREREWUlcz2JHKKJzyV7dLl8
GBgcQU1NPYqKSlFSWoHunn5MOKe1rqSsLZbv4/0i0c7JWq7x8Sk0t7SjsrIa
DY0tmJ726FqJtC0Drg1ERLQMosZhJv6xzI30egJob+1EWUkFKsqqMOV0IegP
s+YQkYVkrkzQH9Qx94qyClRV2jSXDfgCxnkbS57Lll9P8hzze8pH0odwT3vR
1dGD7duKUFfTgOlJt8474lgM0eqLRKDr7iXHlz0Th0ccsNlqUVlRhe7Obq1J
qrV6zJYB1xEiIiIiyk5yQOLTGaOPafY/JWPcVlCE4uIyNDQ0Y9Q+DpfLC78/
HK8xmSBrjEMZ0IcmylQytiJzXhxjTj2vKqtq0NLaobX1ZR2XDPfJuRdNPRmJ
iCj7IX6U3F7G8YKBCMbsE7BV1uj6OcnxA0a/KrnHEPN7IktIRu91e9HX24/S
klI0NTTBOeFENBK1/jpCSczvKR+FjL7DYP8wCreXoLy0Et2dfVonMaR9BOb3
RKstlELWN7W1d2H79mI01DfCPmqPz/vjnD8iIiIiWga65l7GlEMzmJr2oLd3
EHX1TSivsKG6pl7rQMk+kB5vQLN7WXcfDM4kMvsYUu8ZzZrhlEYG3GuQNfd3
ct643D709A6gprYBxSXlGB526F5pZnZvsvqaQEREyySx9t4k6+e6O3tRWlKB
xvpmOEbHZ3N6rr8nsoysvx93jKO+th5VlVXo7uqBz+MzztuY9dcRSmJ+T/lI
+g4tTW148/W30FDXpPMAQ8nxGCJabfE9d2Z0jKe/fxi26jps21ao+9573J65
5zCsv4YQERERUfaS7FDWBsv6+ra2Tu17VlXVoL6+GQMDI5rpa2ZvrrnX/D6i
tdoikXh+nzr/NHVtPs3Fe+z8ZJ4XgUBE6+i3t3ehsLAETc1tsDsm9HtkHb6u
xec8bSKinGHm9ubetaPDDtRW1+v6uZ6uPvg8gWR2L3/O/J7IGj6vXzPhspIy
NNY3YnTEbpyX4Xj92wy4llAc83vKR/aRMa3Z89orb6CvZ0D7DtJnsPq6SZTP
JL+XeoqNTa0oKi5DWXkVpiande19LFlYMdEy4DpCRERERNlHxqQkgx8atuu+
3G+9vVH7npIvSh0oWRscSuTOZv5szjXV/Z6Mv2t1Jp5NmN/nJ/P/X84XOae0
jn5DCwqLStHY2AKvN6jZvbRYBlwXiIhomRn9rekpD9paOlCwtRD1tY269l5y
+6A/nDa7Z35PtPzm98flc4d9DM2NzSgpKkF3Vzdc0y7Wvs1AzO8p56VcdyLh
WHLtfXlZle6947BPIOALab9Bx2neZ72/tPUTM+BaTblj0XU6M+Ax7+r5eL0B
raco65/Ky6vQ0dGtcwGT53Jqs/q6QkRERESZL+VeUHN7o1/sMu4He/sGUWWr
1fmidXWN6B8YxsTEtM4lNdfdh1LyZ5Nkkbm43t68X9hdmZLfc++CzJX6/y9z
X6SOvsyZkT0qqqpqMTA4omvzddjP6usEEREtr6hkTsDIkB3VxjV/y6ZtuvZe
xuTl69IfmwnHFPN79nloZUk/TOqIpd7LSB+suakF5WXlqK2p1Tr6oUCI+X0G
Yn5POS86S3L64cFRXXsvBvuH4XH5jOtTJJnfLzSWsaj309CO4xmhFR63oPyT
SeNmy0HGSScnXWht7UBlonbp+MQUwqGI9dcQIiIiIspOifvAqNGlDPjDGHc4
0dXZq/NFKyqrte7T8IhDc3tZIyxjWen60cn8eoH7vWy3mHuFZD2CDLgPycX/
i1wl55fL5UNzSztstjo992SfChlHZn5PRJRbJKOXWrey9r6spALFhaVaR1/G
5aVPZmb3zO/Z56FVYO4DZpxvZl0kp9OFivJKlBaXoqujCz6vj1lshmJ+T3kh
Ct17x23cL8rae+k31NU0wOv2J+v1ML+nbJJr+b3sPzoy4kBFhQ02Wy26e/rj
Yzmc90dERERE74OMDcsYstRsbWpoQVlpJUpLK9DW3gW7fUL7oTqeFV64Lv6c
tedWj7+tEOb3tCqCM8Y935hm97IOX+bO+IzzL8p7PiKinBIMRJJ715YUyd7a
zZicmNb1c+kye+b37PPQytF8KxLT19K0y4uu7j4UF5XCVmXDmH1MM+Jky4Br
CM1ifk95AfE1F7LeQrL7qopqrdtjrrs3Mb+nbJFr+b1z0oWOzh5sKyjS/RDH
xiaRbFZfP4iIiIgoa0m9td7ufpSWVKj6ukYMDY1iasoNny+UrJe/s350Lmf3
i71XYH5P74eMGctcbcnva2obNM+fmQHnbRMR5RDpe8na+6LtJVo/X+ZQytp7
zedT8vsw83v2eWhVSN9dXkdy3zMyOobi4nJdf59cez8jJ2+iZcA1hGYxv6ec
l1h773H7ddxm6+YCNDe2YszhnJPdM7+nbJJr+f3wsB21tY0oLCrV8RyPN4Bk
s/oaQkRERERZR+ZvT0+6dd52ja0O5aWVuv5+cGAYbo9fa0eafeVAoq7kwuNd
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
1ejg25OfVyh5ufnSUNco4dGId+9OgXuKwWAwGAwGg2HlMT/uU+5etD66+VKr
lJWUS2FBsTQ3tUh/36DGimORCb/mOopon7PxOETCl4lLF/FZNfyIOH9sUoa8
dXdlVY08t/ZFuf2Ou+W7YyeUz29t7ZS2ti5Fa1unxv/NLe2aQ4R7d5qgROeB
NUPMR99/Do/+4uIyufW2O2Tja29KX/9QwGt/YR1G9JzP9f6MYjKW3wfw/+P+
OiX23hQYV8OPg2rvff6e/q4XK2vk9Mmz0tjQJFOTU3q/0byhrT8NBoPhx8GP
3zq8ub3Um6Mz07OkvrZBYzfitvlx2lhsTp5cESR7/rlaOC5iRZACx5dqWLGx
XsG1xdKvkfHY7xeraqUgv1hKSypkaGhUpqf876+kwD3EsGIw/n65MLsEJHtf
UwyLPM3p575GXgBfEGqLausaZXBwdOX66xgMhkUR5e9nZHx8WuNpciglJeWS
nZUjZSVl0tfTp34ZsUey7y0Gg8FgMBgMhmuKWS8UxNesr2dAe1UX5hdrrmmg
b0hCI5GEnmhBz7S4vJnhmgG+e2gopP3o8cd/7LEnJTevUDXP/A9uXPnxsalY
/njM58yDPDs9ONu89ftFbzto7NEIlVdUqV8+63o+A/6+pKRC7rr7Pnnttbe0
FqCuvkkuXLgoxcXlUuRdNxer67zXd8f6fTrw+fD9jU0tut3o60v1c+q9bXR3
98e/JwXG1nD1CPZ87ffuIbXV9fL9sZNSV1svkxOTxt8bDAbDckB7HonGY9xn
C/KKFB3ePDw6HI7FaonitWTPE6mGFeWTDdfNeC9pX0LjuoYaGhjx1lUl+t1s
amjW76XFPzcGjL9fLswuAcne1xTDIk9Pe/cgNACs/U+ePCvZ2XnS563ZRkfH
kj4/GAw3JCJRbQ55OnpcXmpuk7Pn0iU3J18a6hu1p4Xet4OPZN9fDAaDwWAw
GAwrA/cIPDc9OatcfXVVrZw/lyHFhaXSSf53Ee7e+PvUAX3pWXuvX79BHnn0
Ccn2Ynw4dPUv91+DFhqO3nmaO97eed/DzZ8/nym7dn0ir7zymtYCvPXWe7L7
k71ak9/W1qmvKS2tkNv+eaesXfuS5OUVyRdfHpD3398qGza+IevWbZCdu3Zr
/b7z5ncaez6PGoPDh7+Vt9/epNt/+eVXZJ23z3v27pO8/CJ9D2uVGI+fAmNr
uDpE9fdRr8XBgRFprL8kx787IbXVdTI5Prng/mMwGAyGK4R7UAc1HfVN6u0Z
0L6YeTkFUnWhWuM5uMPxsam4eC0YtyV7nkg1rFY+ebVitY73Uvn7wf5habnU
JlkZOVof3dc7qGuupN9HDNcExt8vF2aXgGTva4phkadZa+PPl5WdJ5lZubpO
HxmJxPvzGQyGa4aYT6WH7u4+1cicPHVWyssuSE9Xjxfzzxp/bzAYDAaDwXCj
wD3c3zPeGm50TBrqmiTN5+6bm1plZCikzxt/n7pgjQ3vjX/+y+telYceelTO
p2WqNn54OKx8OKB/FjX2/FSOPDSu3Drvr2+4JN8c+U7eeXezbNr8gez97AvZ
98VX8vHuPfL+lq3y+utv6TbR2qPN/81v/yB/ufnvyu3v/+qgHPj6sHz55QHZ
tWu3bNjwhmx+/0PNBdDfk8/D+wtPAF6P7/627btk79598vm+/bLb+ww+d8eO
j+X06fOaR2D/yCmEwq7fXvLH2bD065JrjJ9Dg6NyqbFFThw/JZUXqmR0ZHTh
vUiu4L5lMBgMhrgHPTC5x1J7mZGWLUVe/Nbe2qmaX7jDsIeID9XhB2K3ZM8T
qYbVyievVqzW8V7KfvA9bG3ukOzMXMnJypO6mgb9TlJ3k/T7iOGawPj75cLs
EpDsfU0xLPI0+QN8886cSVNvPPXPC9na22BIGiJRDp/8CZ6VBYUlkpGZ480f
zRIaDesXd3Zm7nud9HuLwWAwGAwGg2Fl4R6zUe19d2evlJdeUP6+vrZR+nsH
43K+xt+nKCJR/T01888+u1b+9KebZcsH2+Trg9/IiZNntGYX8Ds4czZN1wIN
jc1aY9/V3SenT5+TZ55ZK2+++a4cPHgk5p0PB//VgUPy8suvyldfHZSc3ALl
4X/5nzfJb3/7R9m+4yPV2peVXdDX5+QUyHubtsgLL66THd7/8ATo7unXfXv7
nU1aX8C+4QOmn1FeKfn5xaq/h9dHi48HP959kUjAgz3ZY2y4CozHOPxB7/qk
HujUiTPePabCu7f0y8z0bPx9SFLgnmgwGAyrAe7h/T4xPi0dbV2qu89Iz1bt
PXrfSMjX2ifi8MMWqyXCauWTVytW63gvZT8GvO/ixcoa+e7b41JaXK5rLdXe
m3f+DQPj75cLs1eIZO9namL+UM549yBq5guLSuX0mfNy6VKb1tzbujsB5vf2
i/t7PP65RK9L9L+lfvYPbTdlfAuD9R/zxibp+7YK4Oe/yO1dqKxWT01ybAP9
gzIzNTP3JbYYwmAwGAyrDe6R7P0wGFYj+DEd1d7TNxXvVbwdyS9Fe97P9U1V
zdZ8hC1PmWzgS4+uvrqmXh5+5HH5n//z3+Teex+Up595Tnn0l15aLy+9/Iq8
6P/cuPFN2bv3C8nOzpfe3gHl1nfs/Fhu+vXvlEdnO85Xf2BgWNcMuz76RH3y
T506K1lZeXLTTb+Vv/3tVjl06Ijq/J1PPvsB37/2+ZfkiSeeUa6/6VKravdv
/ust8txzLyp3jw+/+wy09tQTvPHmO/L7P/xZvj16XLcZ1G8ne4wNV4vo+XP8
/bkzaVJSTF+OTpmcmDT/N4PBYLgaiP8T7f3AiNRcrNP7a0F+sd5rla8PR+M2
ai3DPocf5PFXPlbzc7iJ8rYpmsvVMfsBLIh5A+MZ+5kAS92X+NjnB+KghDn8
VIqdEus554/RomN8FVjp6+RyiB2Ddz3ghVHofS+/OXxUa6NZbyX9/mG4pjD+
3pAKmAlgalp0joEfRNubX1Cs9fzofiMpOj8nFb4m2s1l+rvPs5IDUc8C/zVx
rxub1PwIP917rvQznYYhts2gL6HfB5FtO6/1VDlnjIfr36hjExivZO/baoCe
S2/Mmpvb9XsJf08uLRyKJP0eYjAYDAbDj0LwEXye8rSZud/jXpvsfTYYUgRw
9+SX2lo6pNDn7vl9eHA0ptP6oXym8fdJjvN93vzChWp5/PGn5de/+b289977
6n9/5NtjcvS77+XY8ZNyXHFKvj9xWnX18Pas1el5T5/7W2+9XX+HW9e1u7d2
gFtHP483P/23KjzAtf/t77fK2rUvSm1tg3522H89dfunTp+T115/S+6+537N
CZAbOHjwG7ntn3fKhx/ukKamFl3PufwA67q29i7108eT/+OPP5XS0gvK+bo1
sXH4qw+x+gsPw0MhzWHjH1vsXT/kMMcj43N15O6RAvdEg8FgWDXwbqH01YYf
dN5J9NYOB/nk+dx9eOVjNXf/1xyun2cO5p4X5qOTP2cB4hJXnxrzmYpMLox7
gzUQo94xjgZ+X4TDX9L4haLxl8vfR3Phi4xTJLrf0Vz+lP6ce0/yxzR6PGOx
PH7wOObXP7gxT8iLB67jK8JKXic/AHeNjA6HpbLiosY++GN0dfTI5DjG+Slw
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
l15aL7feeofcf/9DsuWDbVJQUKLxz4g3H2j85P+M6fIXiXnQXXCeqNNjzqfu
gpwOzztPfbcNzZn4mvdgD3pitVGn2Q9FP9P59rg8S3Rfop876vdSWHA9BOKo
ufxMNAbTnFJHj+7fnj2fy1cHDgl5HtNgXCa+CM3FT5wj8nPkyDIycqLfTW+s
4x7Jvo8YDAaDwWAwGFYW7jEjMjkxKX29/ZKfW6iaIfRFaFVcrnFJ/SUXQdLX
WTcQiO1Zj8Pfw4//7Gc/l/WvbNS14q5duxdgpwfWmKdOn9O1ATXd1N/v27df
+X80/HD1X3xxQHbu3C0bNryh/e7RfcH/k4O95Zbb9HWsX50vP/syPBzSnMDb
72zSfvdo7cntk79Ft49m/6GHHtX/f/LJXvnc2w9y+s8+u1Y9/NGRNTe3+1q8
hevmhNx9CpwDwyLw1/RcI3AiLZfapCC/UAoLCmVoYEjvRUm/NxoMBkOqwovZ
VLMbeI6/W715Eu39mdPnpeZindZgOu92hwV92EPLEKuF53Rj5IK7unqlrOyC
vPfeFvX+eeLJZzR+OHT4W/n22+Ny6NC3GougT/vjn/6i3DN+vfjA5uUXaTxC
Lx5q9jQv7scS8/3jXY7Z6c1CmqMei3rIevsz7vsJudwyfWedlz+vc3nr6PbH
Atr0eL0a/6M2Ai39zu0fyX4vDurp6tP5C4+DXTs+lv/r//x/5IH7HtL/5Wbn
y2233qF/w+3z2rDj7+f5ILjP0ly2y8/7Y+py7grvd9dLlxw4tY/UV25+/0P1
J2JsDx46onWXX399WHHy1Fkp9c4D4+hy5dFzNhY3Fy/Q5/njDA/A3zrGfv8k
1xcp+LogrxAd13ljGRqPy+dznqkfZV/xcTrl7SdxJ68f8OJC6iM+8mLAz/Z+
EfWf51zDv8Nr+Dy8g/PWD3L21B2DYO2KPj8SiRvPOI5i0ev6ymPMROsex+Gj
vb9QXqX+DHg1cE1M0fc+2fcSQ9Jg/L0h6fAeU1MibW1dOgdnZeUK3Crr87Dv
ozN/jkj6GjKlMDd/aI+g3kGtqXviiWc055KRka26hJbWDvXLv1hd541xnnz5
5dfy1NNr5OFHHle+v7i4XGvYlO/256Zovd5krHZubGyOW3f8fVNTqxz59pjG
WOROKiur1Scx+DoX/+j2xqM1gJHIvNrHQDzg4gy3Tne+P65+z/3tagDca8YC
9QKxffa2w7bpmfTZZ19o/SaxH+Pg4rTk8+UphmCthnctoL0vK69UnQx+DX19
Qxrbxj2SfR8xGAwGg8FgMKwcAg/W6eheGxuaNNdI3lfzjSHj71czyJG2emtG
ar7RvsPTf/Txp5pHj4P3HHz53r37tD6aPOqg36cM/v/o0ePy6Z7PZceOj6O6
rq07vPfs0dxrdXV91O/2Uqvs++Ir5f/h/t1adsTPk7IdcsnUCNTWNigXz/Po
8OkT9/m+/bJt+y5fN7Zda9RdXrexsUW36fLBbp25mP+r5RdSHL6ugJz68FBI
OSf098bfGwwGwxXA5+8dpidnldusvFCt3Cd1mO2tnTEOM8jhL9AGJ8BS7+lB
nVY3/b3zi+T997dq7eC69Rs0LkBjTWxBHpe4BC9QfN7x2Fn7/EvRPj2NzZKX
VyifffalbPfiAXxlY9xBaDzmGQvIXWuvnchkjEcGMS10ZI5vdrnlMT8HPV9j
7T4j+rqpud/Ho/lz/KMYy4G+Icnzxra0uFw98eFkqZfY/N4W+evNt8jHXhzl
4ucTx0+pVr+poVm5f3ceiKddL3RFIFce1MyNB3gTl2N3r4Wvf3ndq8oPZGbm
qDeSjqs3vvAELS3t6pXU7j0HJ+D4AB0rX3MXctq3eT1og5q9cXf8/lhQ/wCC
PL7j5WPnIMA3BDn/cIAbwBuK/D21B1wfHA/chtZWeGPUUN+k/eGpJY4E1iDa
B8IbI/j86PhNJewLMf8aDz7vvAfcteTqMxaLVRLxC0vh7znnxDkd7d2Sk5Un
p0+e1fromPY+2fcSQ9Jg/L0h2aB/B/czeubBD8Lhw93H5owgJ2vr64RzRLR2
MVq3Bn+PRz7zM3mVi148QE2aG0P6CRLXwOkT56CPePzxp+TY8ZM6ZzM/Ul9G
HIWWvqSkQs9JUVGpes8TR7V7cwneRJ2dPep/+Nbb78mf//uvss77TGKqlpYO
1UjwWeSByLPU1DZIWVml8r9ss7yiSp/jc9D7675Re9ndJw3e51L3p5/rgd/Z
F/rwuJqOMX/+p08j+R/iOWoQeH15eZXqOog9+Hz8f9LTs3Wuv/POe+XxJ56W
746d0DGIxSfJ5sxTDnM6HOI6fJTQ31Nbw/PTxA7BRwrcSwwGg8FgMBgMK4+p
iSlpbWmV4sJi1YWgh3U9U42/X51wfedZw6GjJ+4nL84aIDs7HvDn5IDpp3rh
wkVdF/Je1nLw5qzbCgtLdJ3IGpNcfG5uodSx9vLWqsP6OcO6FrzkXTu8V/dh
dI6/1zVhY7Py+LzH+bEph++t7Vj70QuXfq745uKfi6afnK72hbtC7t7yC6sE
4eg9gbw2PFORd30af28wGAxXBuXufR4fPpP7KH2PMtKypbqqVv3d43zFQysR
q40t0FvDJaMFR1f24ovr1CuV/KP65zhel7zkcEhjBvz1X3vtLdm+/SPN/RKH
oE376KNP1cuH9wz7OW9iDvLOLgeNJgkemPwwnLDjk8kzNzW1SIX3WuIIzUF7
7yEWcj79jrPGH4j4hLx4LGddVKo9WqkdpJZxdCSq54aHx9udHgXw97Xez32f
7ZfHH31S/vqXv8uHW7ZpDI2nPv0LSjy0tXTG4mm2wXmC4y/z9p/X4FPAOKh/
rq9HG/KOpdV7HceB9orjo1aSGIqYDL6b/gPwBMRUHHtQJxmLg/xYie0SZ7Ed
tjkS67UbfS2fxxjAH/ATXoAaC3yPgPNYAnAAF73PhBMI9kd2fD77iyaQmI6x
1H63Xlyp+XzvmoQb4jjgGR577CntqbRh4xvqC0vtAf9v84692hujWu+YnYae
+hTGnJ4QeB4wftRR4Edf472us71b6ynG/drAIW/Muzp6dD1D/wLeV+FdL/SQ
Kvb2C69o4lViZK7fy8Uq8zn8pfD3eATQJ4jvZJZ3jHD4+GJMjk8n/R5iSC6M
vzckGxPevMGcoPmAnHydi1wd1lJql25UML8y9zovF/oHzvH3u7VHDPkRVwcR
rNNjnvzii69UO49egTmJMWYbzJ30PETTgLZh67ad2mcQPUauFyMxnzK3bt26
Qznxn/z03+Uf/7hdtfz4HZI7gRuH66cug/exnR07PorqIz75TOO00tIL0u3N
+ewbMRZxFXMzeo2tW3eqXoPXsy/ER8QfLnZiribe+/7Ead1/Yjj2Ex9FPAGY
9y9datUYh+388593yi9/eZP84Y//rb6LZ86mRb0VqTNNOl+eOgjWRRIDcw2l
pWdp7EV+bsbn7mcl8EiBe4nBYDAYDAaDYWUwOz0rMx6mp6ZlZHhULlRckLRz
aZoX6+7q01xZsE+q8ferDXP+qGioJnwf2aA3WgxjUzHtmmqS/LUo6winXVP/
2OGQrgdZv7n+bC5vH6vR99cewTVIrJdbYP26oA+t9zrquNHyu5qAiO/3Ftd7
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
cH7gveEEnB/Ck089K+tf2ShHvWPm/fjlwudv2vSBnifn3Q/wZG5r61JuAZ1+
TU29nkdqFtasiXIF1AW4HgyMKXz8nk8/Vy8DtPfvvr1J+Xm4etfjnp/4+Lj+
EejtGd8q7xwX5BXJ/i8OyJtvvCMXyqu0/oLXM4bsD7wJ+099BL0Druha/wH9
vet373pXUONBHQHH0+x9N9hn991N+v3DkHQYf2+4ppDoz6mJKRkZHvXuixck
Iz1L5018T7jPRznVsaSvD1cNlsjfB732mYvwoiF2YS7CP59aN/hy4psDBw5r
v5dPPtkb7UXjzd/Uuz3ySLTujHm2srJadfr0oMFThjl2cjJaM8k55W/0+Wj6
iQGoX4TnR2ePh87D3rbw/eEzqanjtcRu+O2/885m7UHE5x48eEQyMrI1pkAX
Toz22GNPyZ/+fLNq7Kk7pDcRnjzbt3+k72MMAN5G7CcxHXEWtZbEYVxvST9/
KQjiE7wwsryYJienQK8Jzuf0zOJf66TfWwwGg8FgMBgMKwrWcPBllRWVyt+X
FJfGco/kmfB51Bzw6Jjx9waD4Ucjrgcy/vlDIdWPFhYUGX9vMBgMVwi09/RV
R3tPb+3qi3XKY4YC/Y80dnMIrVyshsaae3tHR4/6zsNFw/3C1bqeO6N+35TR
gHc+mn34Wrhc/FzRiOXlFcr+/V+rPgyNPFpptF/w0ejP4JnJZcO7w0ejF4O/
J/+NDzpcNdqwLXjlv7NZfeDpE4/2a/9XB9ULnrw3HvJ8Nu+hBoAermjXtRf9
h9uVU4YHh79ubemIauUD+nunn1/A33vPw/U7/v7kiTNyYP9BefLxp+W//vPX
8vKL61WDDz/90c7d6ivP5+Fxe/Nfb9GxQyNPPp5jQKvOOGm+f3xKf6KPR3dP
3lxrFuoapbmlXesRAHUU/M3xcZz44Lrxoj6BvHkkMtfnCK8BjveJJ57W1wFq
HwDnJlZ74Z1r+HvqJ+AR6LeL5y/e+lu37pTnvOf4DM6XXhv+e5jvqZfo7R1Q
foP9Ybt496L1w9sf/p5rA/39+XMZstvvb9/c1Cqff/albNzwho4bvQhidcX+
tY5GH3073P2md99XLp+alq8PHNb3tHjjEfZ79nDM5Mfxi6Z+AB6EGo8rutYv
y9+PxXh7fnIN0B8hN6dACvKLpbdnQCbHffPbFLh/GJIP4+8N1xqz07PePTMi
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
HrxrrbSkQv3z0YagV5uZmpG4R7LviwaDwZAMBB4jQyPqm49+jvsl8zS64kS5
VcUP8veXQ3QuhotHG+085clTB0GvU7zgXZ94fOjxYXUcaiyfG/DVcZy8y/8u
lsPWOWL+/OFzvI7nXcADx7iIQJ7Y13nFvSfuM+fllIO6sHn/X4jA/xeM8yKv
m/85ca+PzPv7MrUXi/0vLoe/MJ8fz0uPzV0nAW4h9new/vGy+fjIgnPq5no3
lj+Upx9JsI3FOIqF4xdfe7L4GM3b5lK/G8H6iMCYUj/a0tIuad53E46strpW
xiJjUQ5UUuA+YkhJGH9vWBHI3O/UDw32D0pNdY13f0qT8rJyaW/rkPDo+Jx3
vmHR+zweNOgE0OEvBvyF0E/Q6518zLC/xp0/Xywaqy06h1+mtuwH5tArwVK3
8WNeu7znJgX4+OXg74kxvdgBvT26+6yMHM23kluN+eUbd28wGAwGg8FgSAT/
MTMl6udUW9Og/H1lxUXl2UaGQvF6euPvk4S5NRz6I3xr4dZfeHGd9lE95/uJ
wo+jvd+yZausX79Be4Xic4s3Kpo6uPNXX31NPVuHfb9b+Hv4cPTuL697VR56
+DHl0fFyxe+Vvqlo79et26DPX7rUqtx7SUmF/PI/b5Jf/OJX8qa3L2jms7Pz
dW1b6F1DbG/jxjfkn7ffpd60eK/SC+6nP/133Qf6prqcsePv09Kzopr7u+5V
3v/TPZ9H/fP/8jftHcv7qQMYHBpdmIMOaqosR5EyCNb/o9Hs7OiRwvxi7z5T
IvV19RIJRTSnGbwfJf2+aDAYDMmC95ianJKuji45f+68ZGZkSlXlRfUqj9c0
z7vf/gj+3t2n0ffjmYPnOj1bE+auS6K5a/6PN7zq3BNt93Ia56UiBeay1MUy
jrPFUPFwfExQ7+jFmr3e9wTu5tsjR6WkqES6Oru9OGbacu+Gy8L4e8OKwrv/
TE5MSmtLqxQVFGnf+8b6Rhn2zq/y9/CHI0m8n6YyQmNxWvlFedlY3VsU4cDf
yxKzLGGenquRvAIssu3FtpFwXxb7vBWfg1OAj18G/h7unj4W5Fgz0rNVg9/b
3S9TEzOx76/FEAaDwWAwGAyGhHAPL14cj0zKQN+QXPDiypKiMqm5WBfrl7Yk
3b3x98sKty5yPqh4zMOVo1F/+eVXtJcp+XPlR73/o7WHw9+w8Q3561//of72
9AnFs/63v/2javWdt6nzi1P+/uvD8pK3vQcfelTy84s1P4nnPho7eP2du3ar
bl890PuHpKysUn79m9/L737/J/0fNQXUBbg1MHz9rl2fyM9/8SvZum2nZGTm
aJ3BT//Xf8iGDa9H+4/6unnngcr/2b877rhH0tKytFcrmv777ntQ+Xx6qY6P
Ty3o+2Y5/lTG3PkZHvKutbYuycnKk9LiMmm51KKaNePvDQaDIQr0c+Tba2tq
5eT3J9Wb+5J3r1w4183jWa+av/f10/O86xPnTRPxuwk0zqF4DfiPgc3thqQh
jr+fq3MhFqXG5djRY973tE57TesjBe4fhtSF8feGFYMXN8xMz0hoJNr3PjM9
Uzn8zo5OiYTn+iGaBv/ycBz+cMD7Z3ieD5Dry+Jet2z89RJjpiXFRotse9Ft
JHh9UmKx64i/RxPVcqlNNQz4nXa0danHaZx3vsFgMBgMBoPB8AMgfpwcn9bY
Eg1+ZkaOcm3Em0vm7o2/Xza4fCG9Sun7WVJSLu+/v1WeemqNfLx7T6yXarAn
a3Nzm/ao/R//419k10efqF4O/f3v//Bnef2Nt6WvbyjmaQ5/D+ePXn7dulfl
kUceV20dOjx876Na/o26nU7vdSN+v1i8+dHFP/b4U7p9uH3+F+3h5u2rt1/w
7/fc+4CsW79B+feTJ8/I//rZz1WXD3/v+rpRv42m/pz3ev53++13qRYfPh/+
/t57H5T9Xx2UltaOaP/SUJRrYN+tj1+KI5D/HvSu39bmdjl/LkPKyyqku6tH
+zSSc9L7kHukwP3QYDAYkoHZ6VlpvoS/Zp6cOXVGLlZVS483v87viR4Kzatb
u1r+PpAfdXqsqB9+4vztfL3VfL3WcudBjb83JA3z+Hu+F9SvXqislqysXMnP
K/DimO74HkApcA8xpCaMvzesJKYmpqSjvVOKi4olMyNL6usapL+3X8KjUR2G
64eY9PtqqsFp0TWO8esZRxf3iY/x9+QvRpdRf+5tNxzoCRjsDbjsHjvL7tmz
knNwCvDxy8Df43NaVlIhudn5UlpcLoPe3+Rdjbs3GAwGg8FgMFwRxP8JheaF
kcST1RfrJP18pno8dbZ3a9yp6z7zz7/mcL0+WSfiHZ+enqV6+LXPv6ScODx5
cC0Jv93unbODh46o9n37jo+0nz36d7Tyr73+lvT1Dep74M/xNG9v75KvDhyS
F19ar/75+QXFyt+jv4c/f+WV1+Sjjz7Vzyd/yf9KSyvkttvukJdeekUaG5uV
fw96pVNXQM3A2rUvqgc//P+x4yej/P1rb8b4e7h+3sP74ftf3fC63OptNy0t
U//esmWb3H3P/Xqs9BvlPebzuorgX5v85N7S3NQqZ06dkwsVldqjEc/Z2UDq
O3Y/MhgMhhsMcPdo5aouVElGeoZq79ta22R4aGRurgvo25eFvw/4goecH85w
tJ/9wrzkWIJ89fJr7o2/N6QEQvE9iYl/Ozt7tY8Enlb4VI+OjM7x9ylwDzGk
Loy/N6wIJKq9Hx0e1dghJztH8vPyVXsf9c4PB/h7m08T3eejHkRXwsWPxc8L
yz3fBHoCxvUGXGy/fyzHvuhrE70+Ofz9akQo0HMU3/zB/mFpb+1UbVReToE0
1l/yYv0J7V9q/L3BYDAYDAaD4Yog8X+Pj01KRxv126WSn1sg1RdrpbfHr9+G
871SDj/Z67HrAfPWA+QN4e/xuYe/R5NOT9xgzh5+Gz5e+fuf/6ds3z7H3//m
t39QX334d7YHd67++e3dsmfvPnn6meei/vmOv/fWFx984Pj7T/TzHX9fUloh
f7/lNu1P39jYottxNeuOv+dz2c9nnlkrO3Z8rPz9T3767+qf3+pdY+x31D8/
yt+fOHlGj+0f//hnjL/Ha8Dx93iWss+x9VFsXWv5iJRF4DxRa9LkXSsnjp/S
fs6jI6GF2nu5yvuYwWAwrHKgn6OXdlFhkWRlZkldbZ309/V7c2V8TJDQx/6q
+fuIzGnto+8dTuClv2ie9lrkQ5M9jxluTLjvlO+VPDAwIjW1Ddq3qri4TH3z
+c4a92m4Ehh/b1gRCLmbcelo61Df/MyMTK2RHugfUD/9cCgS9c/3OcWk31cN
huscfM/c9w0fU7zyK8oq5ezp81JSXB7tez85a9y9wWAwGAwGg+Gqgf4rHApL
u7cOzM7KlvzcfPVgY30Pf0/9tvH31wjzaqHxrcfb/p13N8uTTz4T8893r3V1
441NLeqf/y//+hPl3dEKoYX/r5t+q9p9/PJdbh7+Hy385s0fyj333C8PPPCw
FBT4/vl1jXP++bs+0fcN+/75paUXVM8P31/MWoSagFHXE25c+vuj/vn33veg
PLvmedmz53M5eeqs/Ov/91Pdh6ZLrbqtkO/lR14UD/8nn3pW/va3f8h5x997
n3/PPQ/I/gT6e6f1s/x+CiM05z/b3z8kDXVNcuzoCam+WCNjkTGZmZ5N+j3P
YDAYkoaZOURCEblYeVFyc3KVw8ebG01dOOxz8otx97F77dXy9waDYQEC/D0x
c1dXn9al5uYVanxsnKdhKTD+3rAimME7cVC196dOnJL/v707f25tyw77/lf5
h/yaVFlx5Cguq0oVpeIMpdElOZGdyIpsK1IUyVZr6LbUUXe7R7VkSd1Sq9Xz
e+8OvJzBCeA8zwQ4AQQxkSCJaeWsBRzwEDwAgXtBHpD4nnqfIh8ueHAw7I29
99p77ZnpsBwdHlluEB3Psfh9jvg98GRqY6E6ZppJ5WRzY8f2Dpyorb3Xf7N9
74OuOwAAAPCs6ZrY/GVeNtY2ZHpqupbD9dDpH2Z893Qift999f3Wsrc56XWN
uq790bX1P/3T/0x+9V//uqyubdra93y+YPfTvTk1Vv/pT/+x/MMf+28sJr61
tStTUxHLp/+rv/rrsrKybvvHa659jf+vrGzIL/7iL8t/+V/9Q/mFX/wlW1uU
SKRk0/k7zZ//O7/7e5b/XmP6+hju+vuf+Il/Kv/0J39Kvvq1P7fr0uu4ui7a
Gvn9/UP52tf+Qv7BP/gv5Pd//49sL/vRsQmL3//Lf/WrEpqYlrOztK2/13Pq
HII/+IPPyE/91P8g/90/+Ul5OzAkg4Oj9vg/+3O/aOvv9T5XzjW7MX/LIZC/
qeX8Df49g49avEnf40T8XDbXt+XVx29sTlDhusCYIYD+5R6V6tr7s8SZ5b1V
a6trFlfRMfiL3GXr2H29riV+D3SNp/2ibeVd3f/n7ZC1f0/jZ6ydQ0eI3+Mx
3FzdSOwgJpMTUzLw9p2srqxJJl3Lm29r7/PE7oGn5Infx0/OZGF+Wd68GpCV
pTU5i59LibX3AAAA6BJdh588O3f6gboWbFKWF5ctr34mfWF7OeWI3z+qauz+
sp7H1h1D1DXwMzNztk79V37l/5Sv//lfWrxd4/jLy2syOhqSP/3cf7Kc9Zq7
fmJiRo6O4rKwuCK/8Au/ZOvl//IvvymR2QX7Gx2H/OGPPpGf/dlflP/6H/1j
+bmf/+cyOTlja+z39mO2jv93//2n5I8+/ce2jl9z2EejxxIOz8mP//hPWD78
3/qt37Fz6DnXnHMuLq1arvxPfeqPLL7/rW/9vaytb8ni4qrlwv8X/9u/lC98
4csyNjYhS8416+2aL/83fuO35Ced+2v8/s3bQQmFpuXPvv6f5X/+X35GPvvZ
zznXFZaT0zM5T2Wrr8nl9Z29SYN+z+Cj9t7YvrHO53BleV2GBkdlf+9AioXi
bf9Vgq/zAODJuOvua/+vcR2dMzk8NCKzkVk52D+w3Leao/ui1ga4E7vvav58
APfUylw6nbP2sLaBh4bHbO29lrPA6xA8K8Tv8RjS52mb7zc8OCzTk9MS3Y/a
Goxq7P7S9j90x2YCr1OBflArb7pvxd7OgcxMRWTo3YjEDo7k6vLmtvy6Rw/U
IwAAAHiGakepWLIcbLPhWQmNhWRzfcvmjbox/Gqc/qqpHD7A/fX3Ojava/B1
73hdj6770v/6v/kNW/+ua/J1rf0X/tOX5dd+7d9Y7H5gYNhyzmsu++3tPctF
/2v/17+1fPZf//p/lm9/+3vyrb/7jnz5y1+Tf/vvflN+6Zf/d/lX/8e/thz9
uo5f5wroOvj/+Mf/n/z2b/+u/M3ffltmwnOysbkjU9MR+cf/7T+RH/uxH5f/
+zd/Wz7/hS/JX/3139j5vvHNb8lnPvNZi/v/yZ/8qeXa1zX7Gvv/mnOt+lia
B0D/5m+dc37buW5dq6/r/DXf/s/+7C/I8PC4LCysyPe+/yO77Td/8/+Vv/7G
31rugOPjhMWDde29u2dAdU0+MYue48bvnfpCP4sLzmdB88fpXCCtXyx+1XgE
Xf8BwCPTeInmOnJFD6ISGg/J0OCQzZtMxBO13Le6z0z+Xuz+onHeGvF7oLvc
vasSKZlfWJY3bwYthn98kpBisRJ4HYLnhfg9uq3i9KE0P2IkHJGR4RH7bCXP
kre583OXlr+H+D3wdHQMVHNe6Fjp0sKKTE3M2PhHKpmR4k3Zxj7q+fMl+HoE
AAAAz5R7OO1LXf+1t7svw0PDMje7INH9Q6evn6vG72vtU1/1/cnxvnIeFsd3
aI56ja1vbGzLx5+8kT/57OfkD//wM/IHjj/8o/9oa96//OU/s/XrulZd97fX
tUOnp0nLWa/r2X/r//kd+Xe/8VuWr/5LX/qqxd2/+90fWuxd1/Prunx9DKVx
/+989wf2ODo3YHBwRJaX1yUcnpf//qf/R/nlf/Er8sMffixf+crX5TOf+RP5
D7/3B/J7Dr0WXeev6/51rFPnHeia/kXn/3U9/u///qer1+Bc9xe+8CXLz69z
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
au58xoGBYKRycnQUl6XlNRkZGZdweM72/tF9fgKvQ4Aa4vd9Qu7fFoseSXh6
VgbeDMrqyoacHickR/z+Sbl7xd3TA9f2EmluP7/XO+jrcmWc69M97s/P0jIz
FZGhdyMyG1mQZCIlxUKtPizXBF2nAAAAAC+M7lWlefTr7W3nZz5/Y7nzFxdX
5N3giAwNj0kkMm9r8U/jyZ7K5wUEwe1T6xp7HfdeXdu0nBUjoyE5PDqV3MWV
FItOcdIyVrlf9OzogfIPAF3jOa4ur2RzY9Ni93Ozc7bvva6711w/WYvfMxcQ
CITThtd8QTPhOcsXdHBwKBdOm4X4PXoJ8fs+0HDo/h05p42wtLBsufMnQ9Ny
sBeTZCLdldh9prbGuVmu8l4W+PfGe33XNM8LjyZ7E3gEfT2N13aWSMm+Ux41
dj80OGpr7y9zTtuh2AN1CQAAANBnSiWN4RdsXfHW9p6twdd1xbomX9cY7+we
WHxfY5faN9M5w95+RjWveBf6m/T70APcfIGNc+P1Nt1bQve5n3TKhq5h0991
X9mbQtli98TvAfSN2qFzAg9jRxIJz8rw4LBsb25L/DRu8Xs3dt9p/D7o74Gn
/K7hNcFjcGP3mjvfzRc0ORW2NnuhWLH2SuB1CFBD/L4PNByF64JED6Iyofv4
jYQsh3785Mxydpt+jt8/x3UTjOO8GMlk2mnXn8j87KLF73UNfiqZkZurotPm
74G6BAAAAOgzGm/UfbtvbkoWi9T1xLo3psYnNU45PR2xsb/9/UOJJ84tl9qd
Nn5tX/Bqf/MD9vDqgf4KoKrzVGox/HQ1dq+ffZ3fMj0za+PgWkaSTl/22ik3
zfa9d9nRA2UdALqqXM2dv7K8IuOj4zIRmpDD2KGcJ6v73ms8Jn2elpTuxZNq
P14d9HfAk33XMC6OR6KfG22fHzltet0fS3MGrW9sy8Xldb3NEnj9AdQQv+8D
DYeuvZ+fm5eRoVGZngzLYfTYYoTuvtt9vf6e+D0CFI8nZWtzV969HbK8GNvO
7/kLp+2gufPJ3QMAAAA8OR3DK3voevzLyxuJRo8s3+a7d8OOEZmfX5bdvajT
pj+39TzJWsy+ad+zw35f0H0V9DnNIXFnLsrtvBKN0+v8lXBkXt4ODFlZODlJ
2Lp7LS9ldyy8djQWM98bAeAZ05iGxu5z2Zzte69r7xfmFyRxmmiI3VdV69X2
2gaBfx88EcbF0W3uZ0U/N7oHls47HBgYtvm42na/vi5Wc+dL8HUI4CJ+3wc8
h669Pzo8ltGRURkfnZDlpTVJnqU9cfsL4vdBx+OJ3/ctHQPUtfc//P5Hsry4
avNqbN09sXsAAAAgEI3xex3X05ikrsfXWKbG7DWn/tjYhIw6NIa5vb1na3p0
LLDez+yB/gbwvnQ+in6edR8J3StCb9PP9dlZWmKHJzI3t2Tr1yYmZuToOG57
Trjlxc2b7x6Nxcz3RgB4xjRvvsZbVldWZfDdkK2919hL8uz8Xuzejd9X69WH
49ZBfx88FcbF8Rg0b5C2Y7T9rvmChobGZHllXS7zN1IsVYtw/eiBugQgft8H
PEcqmZL11XUZctoOc5F52d+NWrw9q3nPdEwhmSF/ftDxeOL3fWtzc8fW3Q8O
DMvB/qHlzbcj6DoEAAAA6FPe+L3e5B56u64vzmbzcnycsLybGsefmopIODwv
C4sr1r7XWKbmFtexwmQyHXifA3gvtfX3yRr9PGssPxo9lvmFZYvbz84uyt5+
THIXV1IsVlrmzPeqFigAeDkKN0WJRQ8tdj8yPCpLC0tycnxi4/KNsXtv/F49
FMMP/PvgiTAujq7y5BA6PDyVRaed/smrt9Z2OTqK27733v1+gq5DABfx+z5Q
O0rFkhzsH8jM9Iy1HTbXtyV+mrTYfTZzaWvwbS2+5tH/QM82fh90LJ74fd/w
lhEd/9AxvcWFZcuLseT81P2vhJw9AAAAQKAqHt7D4vq1tfiFQllyOY3jx2V1
bbO6B3hoWianwramZ3tnX2KxY8vVWc+rb+OId/sE5w/k3AeCVN3zPmef04TT
f9XP9OrqhoyOhiQcnpP9/ZhcXRUsdt+YM98tM4233f4jALwMuvY+69SVqytr
8v3vfl+mp2Ys5qJr7xvj9lWZasz+jlxTQX8XPJVmY+D3BX+t6H02/zCZsbxB
m5u7Nu/wRz96JTu7B/V97+vzdXugHgFcxO/7g8bus5mcLC0uycjwiIRnIhKN
Hlr9lc5cWB/M/R7UPCLpx4o1A89cN9oMep5M9rJ+Tm07aHthymnTT05MyVn8
zPbJsoPc+QAAAEDvcI+G2ysayy9WLH55cnomS8trlpPzo49fOz9HLb/4/sGh
zds9r40heuP1tj6f+D16lcaX3HWiyZTETxOyvLRs/VeNTZ0cnchV/krKpcr9
MuJTXgDgxXDX3uj/lkSu8wXZ2z2QidC07Y+5srQmJ8dxWzenUg3s9oZ1cZrb
1u++KcuF0gPfCU/gscZkX5pOcgl3dI4uzRXxP3cAr5WuW3Xa2qenSZmbX5Lh
kXEZGQ3Z3Npi8bY43zmCrluACvH7fnFzfWNr76ecvpXG79dW1+XkJHGv/rwT
u++jOX3AU3PzYenvx05ZnAnPSWh8UhbnFyWTztqcGy27Nv7RA3UIAAAAgIfp
enzd+1vj8boeWdffz8zM2R6bE5MzsrCwLJtbuxKLnUg8fm4xe3csk/Fp9DId
p0vEEzZ+qGtCxkfHZWY6LPt7+3KZu6z2XTWOxRx0AP3EPZy6r3hTcerDK1le
XJWxkZDtkbm3cyBnzvd9y/h9E/0cv0d7nnpN2rNVy327txeTSac9PjY+ae3x
nFNeG/fIqh9B1y1Ahfh9Pyg773EmnZH52XkZHR512g6TFsvXfGdujP7O3jp9
lo8HeHK1PQP198RZSnZ3o/LmzaBMOGVT67/85ZWVW13Doz+DrkMAAAAAtEeH
MTQHp07Hvb4pWb473RPc3SNcY/g6d3dxaVW2tvckdnhi44m2Hj+VJQ8sepP2
Yc/O5WDvQOZm5+X1q9cSGp+QzY0tucheSKlQnX+u8SsbyyOGD6AfuIfzu47h
6dr7+MmZTE+GLX6/sbYlJ0dxOT/LtIzJp5w2wD39HL8/z97uV35HD1zbS9P0
te7C693q3E/8PDX3rba5tf2tsftwZN5uvymU63vee4t04HULUEP8/uXLX+bl
YD8qgwODFr9fWliS+GncqbdSNkbQmLcPwBNx2jHadlhYWJG//873JRyeddro
qVrsvlLF+nsAAADgeaj98K7j0Z8Wx09fyOHRaX3c8M3bQRl3fi4srojupXV4
eGo5PHXdPuPT6DWac/b46MTyxQ0NDsmrT17J1ua2XF5c2odc+666/l77rxVi
9wD6hc1ZEsubr79fZPOytLgqI0Njtvb+MHos52fpaj78ZjnxdVzeh97utx6/
H9oI7l7ljYhfNDhv/lr58nv9mp2jS/H7pud+4tdK97ba2tqV0bEJy4m1sbFj
efM1b5bOu7WphzWVoOsVwIP4/cuXTCStj/X2zYDlONPcZhojTLr76zF/DQiE
zqFZW9uSoeExeTc4Ipsb25Z3sOLNOSjB1yEAAAAA2nD7o/67jQU6bftCsSL5
q4Ktx9f9s7a29mz/zbGxSRl4Nyzj41OWaz8aOw5kXBNoReeWLC0u256MM1Mz
Nm6XzWSr881rH/ZqDKtyWwiCLo8A8FQsf6ZYnvyhdyMyNjphOfR1LX41Fp+t
x+T9cuf7xu/139y4v0eqD9h3T5M120FfW2/JPrB+vr3Xz/8ctXzNj3F9AbyP
R0dxWVpek48/eSOzc4sWz7e4vatC/B69ifj9y1a4Kdh7OzY6LkODw7K6smZr
7/U99+bwBvAI3HmGDdx/1/U34fC8vHo1IIvaro+fSfGmeLccu0cP1CcAAAAA
Wrj9Uf/dzckptd91mENzdWaylxKLHVvMfnIyLOOhKZmenrXcXOvrW7K7F5XD
w5P6mny3H1Hd8y5b788nPWOhz8b53eu/8zxYW/CE78P99+DOervaXrEH0SNZ
W9uUyYkpmY3Mys72rq27L+vAtzR84MuNBQAAXrDaUS6JZNMXsrWxI5989Nry
5+9u79va+/r6+trvfvF7v/z5jWvv6/dNvXytvruCvrZe8j7f/Z2c5zGv8ale
G23X6N612zv7MjMzK5+8eivrG9uSu7iqFuPK3dg98Xv0GuL3L5e+funztCwu
6Nr7tzI1OS37u/t2W+o8/fz6+MBzo/H7JvmK9Kfm7dH1Nq/fvLM1ODfXxUDr
DAAAAAAfoN27Vqrjg7om/zJ/Y/F5XY+ve3GOjIRkcHBUpqcjFtu33PpHtdz6
OvZfi99rn0L/vx7bf045dZvMc+5Krtb30HTtn+99798/8NfzPd3JaXt+2091
f9fP1sHBkczPL8vw8JjF73e3d22/+8DLGgD0gtpRuC7J/m5UJsan5NXHb2XR
qTePD08tb74bv2+1p30nns13PRCEWhlx2zGJxLntXTu/4LRlRsZtHF73rNI2
uLhFuUL8Hr2L+P0LUtb3s1TPu62/a7x+empGRoZHZG1lzfYr0/c7TfweeHxN
4vc6znZyciYz4TkZHZ2wNfiaR7PEXvcAAADA89X53W3fzaurgmRzedtfKxo9
lrX1LYlEFmx/Tt2nU9cLLS6tWozfYvmnZzYeabF7c3cd/nOJKXdjHdmH99ma
zSNosUdsixxrz4nvcz2v7nUfjydtvFs/d1PTEfsMRg9ikklnpdCYMw4A+ljF
+R6/yF1JJDwvH/3ole17v725K/HTZD1+363YPfF74AHe+YjannHay1vbezI+
Xt2vStfhaw4sbX/fCT1WiN+jNxG/f1ncvcbKzvuay+Zkfm5exsfGbX+yw9ih
nCfPnbaDthlSxO+Bx9Ykfq977OzsHMjIyLhMToVlbz8mV1fF6r73PVCPAAAA
AHgC+qNcjeFr7t3CTVkuL69tfP7o8FR2tvdldWVD5uYWZWoybPvpToSmZX5+
Sba39uTkOCGJ+Lkkz9LV3LzntfhA6hnEAs6beOLruLMG3aNl/N4nv1rgfc9u
vR/O75obTnPFhcNzFrvXGH40diz5i7wUC6XbPe4BoN853+E3V0X7zh4dCclH
P/xEVpbW5DB2Yvnyid8DT8wz1zKRSEnMKYvabh4eHpfx8Sm7j6691xh9qXwb
r7ciXSF+j95D/P4Fco7r/LXTdjhy+vdjZmV51WL22UyuGr9PEr8HHl2T+L2u
qZlz2g4670/z9+jae02dEXjdAQAAAODplKWeP88Oz23lYjUmoPvp7u/GZC6y
IIMDw/L6k7cyPDQmkZk52Vzflr3dqMSc/sXJUVwSp0lJJlK+e+w+GA946n5S
r+TP7+P198rNe3BWW6Om+zRongfNFaf9Vd3TIRo9kuvGvd68R9DlCAACot/V
ucylLC+uytC7EXOwF5Oz+LnF7onfA8HR9XPu2nvNm7+8vC43BW1oVw+bP1u+
vw6f+D16CfH7l0nz468srcjQ4JDMTM9IdD9qsfucI23r78mfDzy6JvH7za1d
GwsZGQ3J5uau5POFattAgq87AAAAADwRb+xePLfVaE7eUqEi+csbiwFoPCB2
cGRr+3QdvsbzhwZHbb/dhbllW5Ov/66xfIvh92r8PuW/j3xQOfTvX0fz/Qf8
7htY7v8P5M49SKdzFrvXve5174ax8UkZGQnZXHNdi39xeW3zzXWPxkpZ7h9B
lyMACEjhumxz50Z1be/ohH0/a14c/V514/fpLsXtid8D7Uk57Rp15LSHV1Y2
ZHBoVBacNo2ux9f2jBXfSjV+r2vwS40xfAm+bgFcxO9fnuura+f93JfBd0Py
9vVbmQ3PSiwak/hJ3Jwen8pJx+KWm6998Y7OfXrSnhPV0bmbeOJzt34+3bju
D7uOTnV83X3s+OjE4fw8ropFD2V+bkF+9MOPZGF+UeLxMymXKuTOBwAAAPqV
e/j9m44pOv2FUqEsheuiXF7k5SyelOh+TLY2t2V1ec36F2Hdo3w6LOGZiMzN
zsvayrrsbO9a/+PUxgISpjt9wkSHOjnP4/Vju3MdvXLNXejXu/1V5+fe7oHl
bZycmLbP0PrahvVVr/I3UipWqn1WN29+4xF0+QGAgGh8fm1lQz756LXNpdN9
73UO3enxmfOdW3V6nHhYEN97pz564LvpZfJ7rXm9H9OR077Z3NiytnEoNCk7
O3uSz1/fGX/X3131cu0ePVC/AIr4/cuja+913/tv/e235Nt/920ZeDtgMfwP
N9+BDs8d6UBXnksA5+7G43V6jk5e1yDegxcuomYizs9I/bZJp80wPDQs796+
s7wYV/krsYP4PQAAAIAHaBy1cFN0+hHXcnlxaXvjHcaOZGNtQxbmF6zvoWOV
M1Mz1Vh+ZE4WFxYdS9Wf892w3IGlLj0mum1hbkHmZ+dlbnbO+q2au1E/Nzvb
O3LufK5KhVK9n8p8cwC4T/e9Hxkak7/5xrfk1cdvnDo0YvvdqNm2zTvmntRc
E099Hf2C1/spVcffpyanZWR4RN4NvLP2byKecNrQ5cDrDKBTxO9fFu3L6773
I0Mj8qUvfkk++8eflc9/7vPy1a98rQu+3qY/6+y8X/6qfOXLX2nbV7/y1Q9/
Lr6P+dWunPsrHTyfr365k8f7apNzN7nuDl/Xjt6Djq67n1XfM+/r9cUvfFG+
8+3vyNbGllzkLu7mH6wAAAAAQBNlH1L9t2KhKPnLvM3n1zEBjeUPvhuU733n
e/I33/gb+eZff7OL/rYD3X5sdNs3/uob8v3vfl9CYyE5ih3ZvBAbj9OPlvs5
C/qzDwA9SPet+fu/+6786Wc/L1/43Bflz7765/L1r/2FfK3tMfT3GEfvhi/7
jxl3ZcwdvmPDjK0/4ev9pa/IFz7/BXuNv/ud79r6uev8deD1BfA+iN+/LPqa
6R732udaW12XpYUlWVpctjxoH269A+2fd3VlVdZW1tq22gVBnLsbj9nJOTq9
jse87v6ln/GV+md81fm8Ly8tWx2n5dTWM2jZ9R49UI8AAAAA6EF+8XvPv2t+
8+JNNY5/lkjauvy9nT3ZWN8wmxubsrW59YG2ZWtjpwPbXXhMPIqNLftMKP2c
aD59/ez49lPdI+gyAAA9JJO+kJ3tfdv3Xmku/fXVTVl1frY/hr7WpXH7Dsbi
a+Px9zzxdfSD1Wavdw9c20vkvt7Li8s2Nq/tG917quzuAeTlHj1QlwDNEL9/
YUTn3Zfk5vrG5hVp3yvv1FE6f/rDOOfIXbfpqnr/Ns+t13d1edW2fBc0P3e+
Czp9Lu2fu7NztH8dner0uvtWrRy4791lrvp51/JZaWw3SA/UHwAAAAB6V2PM
Xjw/PYeOpeh6/JvrglxfVfPsa+4v7Y/o/l0fxPqENx24/vDHxONw+/jO7zp+
VLgp3I7D+R1Bf/4BoMeUChWn/ixI3vm+y19cm6va722Po19cdWHcvvNx/nyD
y7qnvpaXLt/i9Q762l4ee30v8/Xfr23P+8r98us9eqAuAZohfv+CeI/G24K+
tsd6nh9yBP080B+8+fFb5conJyEAAACAVrzxe+9R8bnNe3tZx35Kt/uZA8r7
mfF+zhqPiuf+AID7nmMd2ex7AU/zegd9PX1AY4sPxu4l+OsEWiF+/4J4j8bb
gr62x3qe73sE/RzQv9wj6OsAAAAA8Hx5j1a3eTFeDD/i8//eI+jrAwAA6Bbv
EfS1AA8gfg8AAAAAAAAAAAAAQPCI3wMAAAAAAAAAAAAAEDzi9wAAAAAAAAAA
AAAABI/4PQAAAAAAAAAAAAAAwSN+DwAAAAAAAAAAAABA8IjfAwAAAAAAAAAA
AAAQPOL3AAAAAAAAAAAAAAAEj/g9AAAAAAAAAAAAAADBI34PAAAAAAAAAAAA
AEDwiN8DAAAAAAAAAAAAABA84vcAAAAAAAAAAAAAAASP+D0AAAAAAAAAAAAA
AMEjfg8AAAAAAAAAAAAAQPCI3wMAAAAAAAAAAAAAEDzi9wAAAAAAAAAAAAAA
BI/4PQAAAAAAAAAAAAAAwSN+DwAAAAAAAAAAAABA8IjfAwAAAAAAAAAAAAAQ
POL3AAAAAAAAAAAAAAAEj/g9AAAAAAAAAAAAAADBI34PAAAAAAAAAAAAAEDw
iN8DAAAAAAAAAAAAABA84vcAAAAAAAAAAAAAAASP+D0AAAAAAAAAAAAAAMEj
fg8AAAAAAAAAAAAAQPCI3wMAAAAAAAAAAAAAEDzi9wAAAAAAAAAAAAAABI/4
PQAAAAAAAAAAAAAAwSN+DwAAAAAAAAAAAABA8IjfAwAAAAAAAAAAAAAQPOL3
AAAAAAAAAAAAAAAEj/g9AAAAAAAAAAAAAADBI34PAAAAAAAAAAAAAEDwiN8D
AAAAAAAAAAAAABA84vcAAAAAAAAAAAAAAASP+D0AAAAAAAAAAAAAAMEjfg8A
AAAAAAAAAAAAQPCI3wMAAAAAAAAAAAAAEDzi9wAAAAAAAAAAAAAABI/4PQAA
AAAAAAAAAAAAwSN+DwAAAAAAAAAAAABA8IjfAwAAAAAAAAAAAAAQPOL3AAAA
AAAAAAAAAAAEj/g9AAAAAAAAAAAAAADBI34PAAAAAAAAAAAAAEDwiN8DAAAA
AAAAAAAAABA84vcAAAAAAAAAAAAAAASP+D0AAAAAAAAAAAAAAMEjfg8AAAAA
AAAAAAAAQPCI3wMAAAAAAAAAAAAAEDzi9wAAAAAAAAAAAAAABI/4PQAAAAAA
AAAAAAAAwSN+DwAAAAAAAAAAAABA8IjfAwAAAAAAAAAAAAAQPOL3AAAAAAAA
AAAAAAAEj/g9AAAAAAAAAAAAAADBI34PAAAAAAAAAAAAAEDwiN8DAAAAAAAA
AAAAABA84vcAAAAAAAAAAAAAAASP+D0AAAAAAAAAAAAAAMEjfg8AAAAAAAAA
AAAAQPCI3wMAAAAAAAAAAAAAEDzi9wAAAAAAAAAAAAAABI/4PQAAAAAAAAAA
AAAAwSN+DwAAAAAAAAAAAABA8IjfAwAAAAAAAAAAAAAQPOL3AAAAAAAAAAAA
AAAEj/g9AAAAAAAAAAAAAADBI34PAAAAAAAAAAAAAEDwiN8DAAAAAAAAAAAA
ABA84vcAAAAAAAAAAAAAAASP+D0AAAAAAAAAAAAAAMEjfg8AAAAAAAAAAAAA
QPB6NX6fSWv8vsl1u0fj/z90u9/9vL+XGzQ5t84rqHj/3e/aWl1LJ+9R49/4
XVe54feHnrvf827n2u25y93n3eo5NZ7rofez2TU+dHTy+lXuX86D19POORv/
vfH9euj62nku7X5WOn1t/O7f6u+bHd247oc+O41l0/lZdv6/4lc+2v083HtO
tQ+6ntjzePXT2j9X7p7nwXP6PHb5gX9r9tp4b2+srzr9TDT+XbnJ/Wovie9z
9XlP2r7+VuWk2fFQuXqozDU+RrPX3Od+d+aUScP92/j7lp/5xr/Vx/K+v413
830Olapm71OrcuB3W6uy1OS1v/cavc/R6jWqeF6Qxvv4Pcdm52/1XjR9bLn/
mjQ7d7O/f+jcrf62iYr3PW+8hnY/c81u9ytTfn/TrAy719eqjLdzLa1eA8/f
VMpyt67yO99D7+ed11Zaf67avK4732He16zZuVs89zvPsUVZbKtebfbees/R
qm5r9jlr9nh+52inzm51Ds9rW/9ufugaWl1bq2uuPcaDr3/jc2y8Jr/n3uwx
m30+Hnpf2nn8Zvfxu4aHvkM6KQcVn9vE528896l4v99aXEelxvtvvi+xnbfW
gGz1+peb/KPfSRv7kd77+jynh97DSrPv8xafGd8y0Ox1bfb7Q3093wdu4+/b
ua52j2bPqaF8VeqfnYfvX3noPfP7u8Y6vdPy0eyz3KSp0/T6Pbe1vf6h2fW2
6p/4febbeb6tnkOzx2n2npUb7tvs8Zud96HXvp3PrF+5bHV08tjtPA+f8ze2
te7c9aH33ft7q7re72i3jdTq8+xXnlq93n7fJY3/73cN76PxPM2u2e85+T3H
Zs+p1eP4lTO/8za7zefz8eBz9Xs+AAAACITG7zOpjBzsHVgMf2+nN2TT2YfH
Hxv/3z3aiWG7f+/53e3ju3zP4dxWLpUdnn/3u7ZW1+e9f+NYT4uxn/oYRMM5
vWM1Ta+78fHvnLdyd8zC735SvR597vXravwb7/P1eS0enI/R7uH3Onc4xlFy
FBxF79/79j8rPn9f+0XH/PzeM897W39t/cbpHrrOZpo9XrtHq+tw4wKtrqed
a292je0+/3vXVHut9Y0rVurDrfqzWKoNr1Zq/95u2W96Pc6nonLjnLRYPV+p
+pqU3KfjloPG6+3kdWp8ne/9m0859r627k36+SpVHo6PNXnud/6uIfbRWF4r
Teq8xvpSfy+XfOqUZtdVrp273c+Je93eaynfXn/9OpuVm8bHcOtW7/Pzntfz
/3fqP/c+9deryd83PE7L74T672Xnv1L982efQftR8R22rLjnLpWqymXPP3he
M7/3xG8cr7G+8t6vhep7X+68Tmo8vJ9x9//r34laaxfk3pPxfH/7f9l4Tuj3
vOX+Xeu3Nfnc3HkzxOd37zlbnbtVzOchbn3U7BqaPW6z96jxdm991ORczdom
7r/r9bWc++J+Ph+6xmavwZ3Hqtwvy57HuPPR8NbDfu+te75Wc1Ia3sNKY9lp
uI+3zr1Tf7f6LN4pY9VrKjfWmY31dbnS8FhNrr9ZvVt/fSr3/7bieZ6N19zJ
4f3sNKtfWrVXvO+ht/5p55res36qlKqPced7xntOv/et8XG971PJ5/VtvL/f
v3tftybnbic+3PQ+Pvdv+h3iw7cf1VgG3efR2LbweQz7zBfL1e83NzjfUE/Z
uSpSn8Z25+99nqbdqVSotvWcP/Qt4nY9LToYjdWW53voXhy94e/utFcanod7
MXfq9rJ7fr8n4zlFqeFxW9Vd3sdtuDbfutq97wPnu1ef+x2trq2do9Xfeuov
67MXy/7fC+59RW4/i423t3jsO59zvzLZqi/U6n3x1o2tjiZ1t5WVNttsvp9h
v9ehyTV72/qN891ajqc0nt97jhbXd6fOaHyNmtVpjdfveY1967tm19nq+/2h
z3Hlgfv6fS78rqfZ45Tdttbt31m3oPaQ3uu/9/1VufsaNpsm2+yxH6qTbuuz
Fp8F72e+8bVo/J4r+1yjX7+l4fHvvId+5fLe/d0Xo+H2xmupv8g+z7vx/9t5
n32es++Ygd95m91W8WnPep9/4+vw0OeZg4ODg4ODg4PjaY5aW61ULNla9+h+
VPb39mVvtzfoNd3rez7UP2psiz7UR/b+XTMP/U2zv/frxz/0WO1qZ3zfrz/S
6rn4vWY+9/H2dX3HdRv/pp3n3cnxvn/XcE1N4/fe/7/zZL2PW/ulSfzed51H
4/v20HNr5zPgHeNo1Sdu8Tr4j8tXmj/WvdeiyfNr7Bd3erQqW5XqcKrXvcf9
oH5nLT6oHfLa4IeGUm3o2D1142vjd+2tnlfjbX71lvff79Utnveu1Rh942M8
dB/P75VSi7kBftflvjeN85seOlp9fv3Kund8x3sOb7zK7/PqN14jDf/WxrU+
qNn926mT62P/tRi8e10l9xQV37fMnra+hm5so+IpJH7X1HhtPs+zPoZbv6ZK
e8//g8re3XNUas/tziBk5TZ+X7/rvc9y7TW8MxDsuV+zz0Gruq3F8235Pege
rcppszHExvs106oOalUntvNedVIuWv17izFSNyba8v3oRKtraFYPeI/G7/GH
zlu5/ZuWc5F83rd76/vbKJN35gV6z93sce59Xiv+93/o+NCy7lcXPVC2fOuf
D3lM7+3vc66H6vF2zlu5/axUGs/n85nx1sV37teqv9OqPmusO8pN/l+a/K33
//3KVGNZaPX6VO6XAb+5dLex7srdczU+J5+H8F5qRRr+plxr4NXO2/KjfW9h
f7M73n+OD75P7uFXP/mVhXbq5WZHk3LW7jXey8XUrG5v9Xitrut9n4ffv3k/
i63O89B1t3r8ZvV3Y/notL55n6NWntw5tE3joQ/UEffi4222A+7Ehdv5rm1y
nju/e8u2+x1YU+1vlJt/lls9RqvPTau/a+f7utnjifjXiQ+1ARvv33jOJu9j
fQqw3/thKnJvflI7j9/pZ7n2NzaPxu+7vLFu89PqWh56P5q9Vq3+zt6PitwW
JLn/PvmV8YfqjGbX1Xj7+3zOvNfe6nr8yklF/MvNU9RbHBwcHBwcHBwcrQ9t
2xdKkj5Py34PxOy9/n8JFTzh
     "], {{0, 1144}, {2032, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
zHPc7HjFCXXydspxqna67Iw6+zhLnDc7d4whjPEbIx1TM+amC9Ul1KXEpc7l
oSvTNda1zLXR9flYm7EZY1eOPTf2k5u3W77bDre77vru493L3Jvd//Jw8hB4
VHtc86R5RnrO92zyfOHl7CXy2uJ1y5vhPcH7O+9W748+vj4yn3qfXl8b30zf
Tb432QbsBPZS9nk/gl+Y33y/Fr93/j7+xf4H/f8McAnIC9gT8HSc/TjRuB3j
ugOtAvmB2wK7glhBmUE/BHUFWwbzg2uCH4VYhwhDdoY8CXUMzQ3dG/o8zC1M
FnYk7A3HnzOXczIcC48Krwhvj9CPSI7YGPEg0ipSHFkX2R/lHTU76mQ0ITom
emX0Ta4ZV8Ct5faP9x0/d/yZGGpMYszGmEexTrGy2OYJ6ITxE1ZPuBdnGyeN
a4wH8dz41fH3E+wTpif8PJE4MWFi9cTHPHfeHN65REbitMQ9ia+TwpKWJ91N
dkhWJLem6KRMTqlNeZManroqtSttbNrctEvpJumS9KYMUkZKxs6MgUkRk9ZO
6pnsPbl88o0p9lNmTrkw1WRq/tRj03Sm8acdyiRkpmbuyfzAj+fX8AeyuFmb
svoFHME6wTNhiHCNsFcUKFolepIdmL0q+6k4ULxa3JsTnFOV0yfhSDZKXuRG
527NfZMXn7crbyg/NX9/Abkgs+CoVF+aJz1TaF44s7CjyLmovKhruv/0tdP7
ZTGynXJEPkXeVGwArzltCgfFt4qHJUEl1SVvZ6TMODRTb6Z0Ztssp1lLZj0p
jSz9cTY+WzC7dY7lnIVzHs4NnbttHjIva17rfOv5i+b3LIhasHshZWHewl/L
3MpWlb36JvWb5kVmixYs6v426tu6cnq5rPzmdwHfbV2ML5Ysbl/iuWTDkk8V
woqLlW6VVZUflgqWXvze/fv13w8ty17Wvtxn+ZYVxBXSFTdWBq/cvUpvVemq
7tUTVjesYa2pWPNq7bS1F6q8qrauo6xTrOtaH7u+aYPNhhUbPmzM2Xi9Oqx6
/ybTTUs2vdks3Ny5JWRL/VazrZVb3/8g+eHWtqhtDTV2NVXbidtLtj/ekbLj
3I/sH2t3muys3Plxl3RX127e7jO1vrW1e0z3LK9D6xR1vXsn772yL3xfU71L
/bb9zP2VB8ABxYHff8r86cbBmIOth9iH6g/bHt50hHGkogFpmNXQ35jT2NWU
3tRxdPzR1uaA5iM/u/68q8WypfqY4bHlxynHFx0fOlF6YuBk0cm+U+JT3a3T
Wu+eTjt97czEM+1nY86e/yXyl9PnQs+dOB94vuWC/4WjF9kXGy/5XGpo8247
8qv3r0fafdobLvtebrrid6W5Y1zH8c7gzlNXw6/+co177dL1uOsdN5Jv3Lo5
+WbXLeGtp7fzb7+4U3Jn8O6Ce4R7Ffd171c9MH1Q8w/Hf+zv8uk69jD8Yduj
xEd3uwXdz36T//ahZ9Fj2uOqJxZPap96PG3pjey98vuk33ueFT0b7Cv/Q++P
Tc8dnh/+M+TPtv60/p4XshdDfy19afxy1yuvV60DCQMPXhe8HnxT8db47e53
7Hfn3qe+fzI44wPpw/qPjh+bP8V8ujdUMDRUxJfxVVcBDBY0OxuAv3YBQEsH
gHEF3h/o6reXShD1e1GFwH/C6veZSnwAqIeN8srNOQnAAVjsYKEtAEB59U4K
Aain50jRiDzb00PtiwpfMIS3Q0MvzQAgNQPwUTY0NLh5aOjjDkj2NgAnp6vf
fEohwvv9DyofnUz5WfCV/BPrJ3mX
       "], "RGB", "XYZ"], Interleaving -> True, MetaInformation -> 
     Association[
      "Comments" -> 
       Association[
        "XML:com.adobe.xmp" -> 
         "<x:xmpmeta xmlns:x=adobe:ns:meta/ x:xmptk=XMP Core 5.4.0> <rdf:RDF \
xmlns:rdf=http://www.w3.org/1999/02/22-rdf-syntax-ns#><rdf:Description \
rdf:about=xmlns:exif=http://ns.adobe.com/exif/1.0/> \
<exif:PixelXDimension>2032</exif:PixelXDimension> \
<exif:PixelYDimension>1144</exif:PixelYDimension></rdf:Description> \
</rdf:RDF></x:xmpmeta>"]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{889.8137500000001, Automatic},
   ImageSizeRaw->{2032, 1144},
   PlotRange->{{0, 2032}, {0, 1144}}]], "Input",ExpressionUUID->
  "769e5960-b076-4ce2-92a1-73f4052cfa0e"],
 "\n\nMathematica is a computation program well known for technical computing \
such as machine learning and it uses Wolfram language, that is a \
multi-paradigm, functional language. In the rest of the notebook we start \
with data load and wrangling (Chapter 1 and Chapter 2), continue with several \
dimension reduction attempts on the training data and training the \
classifiers accordingly (Chapter 3). We also present the prediction results \
in Section 3.3.4. Lastly, we do comparisons on classifiers and sum up the \
learnings (Chapter 4)."
}], "Text",
 CellChangeTimes->{{3.734274316157036*^9, 3.734274324746511*^9}, {
   3.7343287329987173`*^9, 3.7343287844680157`*^9}, {3.7343288208836393`*^9, 
   3.7343289336864557`*^9}, {3.73432896751425*^9, 3.734328995231641*^9}, {
   3.7343290407796993`*^9, 3.734329266685176*^9}, {3.734329475085004*^9, 
   3.734329483034573*^9}, {3.7343295287502127`*^9, 3.7343295287540703`*^9}, {
   3.734329565373981*^9, 3.734329674736128*^9}, {3.7343302112351503`*^9, 
   3.734330318967095*^9}, {3.734330408703841*^9, 3.734330425502522*^9}, {
   3.7343304699276876`*^9, 3.7343305491598053`*^9}, {3.734339805689641*^9, 
   3.734339826049556*^9}, {3.734341177475822*^9, 3.73434117834424*^9}, 
   3.734341213195269*^9, {3.7343412986858063`*^9, 3.73434144350998*^9}, {
   3.734341557430903*^9, 3.734341580870319*^9}, 3.7343416542310553`*^9, {
   3.734343603332156*^9, 3.734343703826002*^9}, {3.734343742730359*^9, 
   3.734343778810923*^9}, 
   3.760155453870657*^9},ExpressionUUID->"d79f9712-1226-443a-b0fd-\
23b529b870ec"],

Cell[CellGroupData[{

Cell["1. Data load", "Section",
 CellChangeTimes->{{3.7336518594283867`*^9, 3.733651862712413*^9}, {
  3.733662388947257*^9, 3.733662392296378*^9}, {3.734329428848522*^9, 
  3.734329453013338*^9}},ExpressionUUID->"bf4ce0ba-e249-47fd-91a6-\
54eda1f2943e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "Import", "[", 
   "\"\<https://raw.githubusercontent.com/antononcube/\
MathematicaForPrediction/master/MonadicProgramming/\
MonadicContextualClassification.m\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Import", "[", 
   "\"\<https://raw.githubusercontent.com/antononcube/\
MathematicaForPrediction/master/MathematicaForPredictionUtilities.m\>\"", 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "Import", "[", 
    "\"\<https://raw.githubusercontent.com/antononcube/\
MathematicaForPrediction/master/MosaicPlot.m\>\"", "]"}], ";"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.733650268665009*^9, 3.733650272668333*^9}, {
   3.733658979648295*^9, 3.7336590292467003`*^9}, {3.733659340825478*^9, 
   3.733659403445961*^9}, {3.733659616626684*^9, 3.733659622953367*^9}, {
   3.7336598302496853`*^9, 3.733659875334313*^9}, 3.7336600586394873`*^9, {
   3.733660092346485*^9, 3.7336602719496527`*^9}, {3.733660329066957*^9, 
   3.7336603358227043`*^9}, {3.733660434044964*^9, 3.733660444202752*^9}, {
   3.733660586122552*^9, 3.7336605940480413`*^9}, {3.73366097696873*^9, 
   3.733661001314712*^9}, {3.733661032618713*^9, 3.7336610378306026`*^9}, {
   3.733712948430855*^9, 3.733712965764924*^9}, {3.733713024565713*^9, 
   3.733713051343626*^9}, {3.733713090640353*^9, 3.7337131183126087`*^9}, {
   3.7337141573625107`*^9, 3.733714169477983*^9}, 
   3.733716767405634*^9},ExpressionUUID->"c75deac5-ee64-48e3-b6aa-\
d9fb88282980"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Training", "=", " ", 
   RowBox[{
   "Import", "[", "\"\</Users/yaman/Desktop/homework_48/train_data.csv\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tlabels", "=", " ", 
   RowBox[{
   "Import", "[", "\"\</Users/yaman/Desktop/homework_48/train_labels.csv\>\"",
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testingCSVData", "=", " ", 
    RowBox[{
    "Import", "[", "\"\</Users/yaman/Desktop/homework_48/test_data.csv\>\"", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "Training", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "Tlabels", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "testingCSVData", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.733650268665009*^9, 3.733650272668333*^9}, {
   3.733658979648295*^9, 3.7336590292467003`*^9}, {3.733659340825478*^9, 
   3.733659403445961*^9}, {3.733659616626684*^9, 3.733659622953367*^9}, {
   3.7336598302496853`*^9, 3.733659875334313*^9}, 3.7336600586394873`*^9, {
   3.733660092346485*^9, 3.7336602719496527`*^9}, {3.733660329066957*^9, 
   3.7336603358227043`*^9}, {3.733660434044964*^9, 3.733660444202752*^9}, {
   3.733660586122552*^9, 3.7336605940480413`*^9}, {3.73366097696873*^9, 
   3.733661001314712*^9}, {3.733661032618713*^9, 3.7336610378306026`*^9}, {
   3.733712948430855*^9, 3.733712965764924*^9}, {3.733713024565713*^9, 
   3.733713051343626*^9}, {3.733713090640353*^9, 3.7337131183126087`*^9}, {
   3.7337141573625107`*^9, 3.733714169477983*^9}, 3.733716767405634*^9, {
   3.734316974987578*^9, 3.73431701197231*^9}, {3.734317275065095*^9, 
   3.734317277638056*^9}, {3.734317362353483*^9, 3.7343173759878483`*^9}, {
   3.7343174875086117`*^9, 
   3.73431750040656*^9}},ExpressionUUID->"f6988753-2d86-40a4-867a-\
d45639a85ee4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3750", ",", "10000"}], "}"}]], "Output",
 CellChangeTimes->{3.7343175698997087`*^9, 3.734334412451962*^9, 
  3.734336558999271*^9, 3.7353877824577427`*^9, 
  3.735387876599772*^9},ExpressionUUID->"565d69b2-494f-475d-ab1f-\
7d22d1413ea3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3750", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.7343175698997087`*^9, 3.734334412451962*^9, 
  3.734336558999271*^9, 3.7353877824577427`*^9, 
  3.735387876612838*^9},ExpressionUUID->"41451e0e-8fcd-41af-87c5-\
d3dead39f8ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1250", ",", "10000"}], "}"}]], "Output",
 CellChangeTimes->{3.7343175698997087`*^9, 3.734334412451962*^9, 
  3.734336558999271*^9, 3.7353877824577427`*^9, 
  3.735387876622504*^9},ExpressionUUID->"dcfbbaa4-0ff1-45bc-a813-\
8eaa0a489248"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Data wrangling", "Section",
 CellChangeTimes->{{3.733660641043133*^9, 3.7336606832546587`*^9}, {
   3.7336607228618507`*^9, 3.733660723971265*^9}, {3.734317339095482*^9, 
   3.734317340568344*^9}, {3.73431776388533*^9, 3.734317771820718*^9}, {
   3.734329308263279*^9, 3.7343293088537827`*^9}, 3.734329344662969*^9, 
   3.7343294561852827`*^9},ExpressionUUID->"af475602-cd5b-45ce-84b2-\
eb89a24223fd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tally", "[", "Tlabels", "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mlData", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{"Rule", ",", 
     RowBox[{"{", 
      RowBox[{"Training", ",", 
       RowBox[{"Tlabels", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "/@", 
  RowBox[{"mlData", "\[LeftDoubleBracket]", 
   RowBox[{"1", ";;", "6"}], "\[RightDoubleBracket]"}]}]}], "Input",
 CellChangeTimes->{{3.734317815271435*^9, 3.734317815290399*^9}, {
  3.734317863829586*^9, 3.734317864738297*^9}, {3.734317895158534*^9, 
  3.734317895736411*^9}, {3.7343286398131247`*^9, 
  3.734328649024682*^9}},ExpressionUUID->"4a168ab8-24ff-46cd-ab7b-\
993eb241b778"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", "3378"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"-", "1"}], "}"}], ",", "372"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.73433672639028*^9, 3.73538776689373*^9, 
  3.735387888206253*^9},ExpressionUUID->"6750b1c2-79a8-488c-bb0d-\
70b0f875c868"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"620.643`", ",", 
       RowBox[{"-", "225.484`"}], ",", 
       RowBox[{"-", "131213.801`"}], ",", "83536.65`", ",", 
       RowBox[{"\[LeftSkeleton]", "9993", "\[RightSkeleton]"}], ",", 
       "133.456`", ",", 
       RowBox[{"-", "344.193`"}], ",", "626.785`"}], "}"}], "\[Rule]", "1"}],
    Short], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"789.336`", ",", "158.857`", ",", 
       RowBox[{"-", "8422.367`"}], ",", "54747.57`", ",", 
       RowBox[{"\[LeftSkeleton]", "9992", "\[RightSkeleton]"}], ",", 
       "32.379`", ",", 
       RowBox[{"-", "418.297`"}], ",", 
       RowBox[{"-", "292.736`"}], ",", 
       RowBox[{"-", "390.922`"}]}], "}"}], "\[Rule]", "1"}],
    Short], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "323.514`"}], ",", 
       RowBox[{"-", "520.415`"}], ",", 
       RowBox[{"-", "43709.199`"}], ",", "150098.21`", ",", 
       RowBox[{"\[LeftSkeleton]", "9993", "\[RightSkeleton]"}], ",", 
       RowBox[{"-", "684.42`"}], ",", 
       RowBox[{"-", "1878.696`"}], ",", 
       RowBox[{"-", "31.079`"}]}], "}"}], "\[Rule]", "1"}],
    Short], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"280.384`", ",", "4.955`", ",", 
       RowBox[{"-", "13609.268`"}], ",", 
       RowBox[{"-", "141965.688`"}], ",", 
       RowBox[{"\[LeftSkeleton]", "9993", "\[RightSkeleton]"}], ",", 
       RowBox[{"-", "496.787`"}], ",", 
       RowBox[{"-", "205.806`"}], ",", 
       RowBox[{"-", "240.249`"}]}], "}"}], "\[Rule]", "1"}],
    Short], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"15.483`", ",", 
       RowBox[{"-", "98.902`"}], ",", "37405.965`", ",", "138522.182`", ",", 
       RowBox[{"\[LeftSkeleton]", "9993", "\[RightSkeleton]"}], ",", 
       RowBox[{"-", "650.591`"}], ",", 
       RowBox[{"-", "45.142`"}], ",", "678.672`"}], "}"}], "\[Rule]", "1"}],
    Short], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"575.561`", ",", 
       RowBox[{"-", "345.999`"}], ",", "28541.294`", ",", "20939.801`", ",", 
       RowBox[{"\[LeftSkeleton]", "9993", "\[RightSkeleton]"}], ",", 
       RowBox[{"-", "232.023`"}], ",", 
       RowBox[{"-", "436.482`"}], ",", 
       RowBox[{"-", "158.154`"}]}], "}"}], "\[Rule]", "1"}],
    Short]}], "}"}]], "Output",
 CellChangeTimes->{3.73433672639028*^9, 3.73538776689373*^9, 
  3.735387888299137*^9},ExpressionUUID->"ebf05163-5817-4b58-b53b-\
3efbd6bf2fa0"]
}, Open  ]],

Cell["\<\
Now we merged labels with the training data and put it in the right form. One \
observation is that the labels are mostly 1\[CloseCurlyQuote]s. Dimension \
reduction could be wise to apply. \
\>", "Text",
 CellChangeTimes->{{3.7343298160837584`*^9, 
  3.7343298506650553`*^9}},ExpressionUUID->"e2993ce3-407f-411d-944c-\
23ab5ac42b54"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Attempts with dimension reduction", "Section",
 CellChangeTimes->{{3.733716875334642*^9, 3.733716883130137*^9}, {
   3.733737011119905*^9, 3.733737016553834*^9}, {3.7343292986870937`*^9, 
   3.734329341766786*^9}, 
   3.734329458625512*^9},ExpressionUUID->"543b2597-15c6-4e2f-ab30-\
8dd615c93b9d"],

Cell[CellGroupData[{

Cell["3.1 First try with 12 dimensions", "Subsection",
 CellChangeTimes->{{3.7337369778658657`*^9, 3.7337369854808197`*^9}, {
   3.7343181029459457`*^9, 3.734318106517016*^9}, {3.734318551058169*^9, 
   3.734318553535125*^9}, {3.734329320055354*^9, 3.734329353302854*^9}, 
   3.73432946148208*^9},ExpressionUUID->"2a6f865c-671f-4441-ae02-\
b0214ba4a173"],

Cell["\<\
In this section, let\[CloseCurlyQuote]s first try apply low-rank SVD to the \
training data in order to reduce the dimension to 12 basis vectors and train \
a classifier.\
\>", "Text",
 CellChangeTimes->{{3.734318560426549*^9, 3.7343186108657217`*^9}, {
  3.734318778459181*^9, 3.73431879497717*^9}, {3.7343190422007847`*^9, 
  3.734319060571764*^9}, {3.734330098480007*^9, 3.734330124294388*^9}, {
  3.734343807108869*^9, 
  3.734343808710116*^9}},ExpressionUUID->"a912498e-b104-41d2-a215-\
437957a31e41"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RecordsSummary", "[", 
  RowBox[{"Mean", "[", 
   RowBox[{"mlData", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.733737288264153*^9, 
  3.7337373078441277`*^9}},ExpressionUUID->"5c80f488-2a4d-418f-98e6-\
047bbade7268"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[GridBox[{
     {
      StyleBox["\<\"1 column 1\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0, 0, 1],
       FrontFaceColor->RGBColor[0, 0, 1],
       BackFaceColor->RGBColor[0, 0, 1],
       GraphicsColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1]]},
     {
      TagBox[GridBox[{
         {"\<\"Min\"\>", 
          RowBox[{"-", "752.9131173333316`"}]},
         {"\<\"1st Qu\"\>", "9.071437199999984`"},
         {"\<\"Median\"\>", "14.481448533333324`"},
         {"\<\"3rd Qu\"\>", "20.149351866666706`"},
         {"\<\"Mean\"\>", "25.313169376773338`"},
         {"\<\"Max\"\>", "85695.47488800004`"}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], "}"}]], "Output",
 CellChangeTimes->{3.734318064253023*^9, 
  3.734336745264971*^9},ExpressionUUID->"f19283da-e33d-4b9c-9788-\
7afe2590921a"]
}, Open  ]],

Cell["Apply SVD on training data:", "Text",
 CellChangeTimes->{{3.734318190273878*^9, 
  3.73431819908799*^9}},ExpressionUUID->"8c682041-3e86-47ef-9cff-\
a747615de118"],

Cell[BoxData[
 RowBox[{
  RowBox[{"svdRes0", "=", 
   RowBox[{"SingularValueDecomposition", "[", 
    RowBox[{
     RowBox[{"mlData", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", "12"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.73371709985462*^9, 3.7337171218492737`*^9}, {
   3.733717156003921*^9, 3.733717160154441*^9}, 3.733717201911574*^9, {
   3.733737316519895*^9, 3.733737319521345*^9}, 
   3.734320202488741*^9},ExpressionUUID->"fbd20af9-baca-4265-8649-\
7158f62aa6dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "/@", "svdRes0"}]], "Input",
 CellChangeTimes->{{3.733717207463073*^9, 3.733717209161001*^9}, 
   3.7343202488756723`*^9},ExpressionUUID->"d6a9a361-415f-4970-ba4c-\
c7d0b2f21bc1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3750", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10000", ",", "12"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.73431811123387*^9, 3.734320250597735*^9, 
  3.734336776417634*^9},ExpressionUUID->"02fa79f7-13b0-44e3-b4f4-\
dbac96791969"]
}, Open  ]],

Cell["Transform the data:", "Text",
 CellChangeTimes->{{3.734318155578588*^9, 
  3.73431821144693*^9}},ExpressionUUID->"7c93a6ff-f274-496d-8aee-\
261fcd45c6bb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mlData2", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{"Rule", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "svdRes0", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       RowBox[{"Tlabels", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"RecordsSummary", "[", 
  RowBox[{"mlData2", ",", 
   RowBox[{"Thread", "\[Rule]", "True"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "/@", 
  RowBox[{"mlData2", "\[LeftDoubleBracket]", 
   RowBox[{"1", ";;", "6"}], "\[RightDoubleBracket]"}]}]}], "Input",
 CellChangeTimes->{{3.7337172139974747`*^9, 3.7337172511569223`*^9}, {
  3.734318242995743*^9, 3.734318272793076*^9}, {3.734320255330584*^9, 
  3.734320277556671*^9}},ExpressionUUID->"ed28b3d8-c1b4-49a1-929e-\
0ea69d8c5a34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    TagBox[GridBox[{
       {
        StyleBox["\<\"1 column 1\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.038157944425920146`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.021021867445858173`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "0.007385759221462897`"}]},
           {"\<\"Mean\"\>", 
            RowBox[{"-", "0.007204283765204795`"}]},
           {"\<\"3rd Qu\"\>", "0.006623015315013407`"},
           {"\<\"Max\"\>", "0.024254766992779585`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"2 column 2\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.05659059212842183`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.011152676619845477`"}]},
           {"\<\"Mean\"\>", 
            RowBox[{"-", "0.00015954521158202388`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "0.00010027867944317734`"}]},
           {"\<\"3rd Qu\"\>", "0.011187146674659441`"},
           {"\<\"Max\"\>", "0.05578582856667706`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"3 column 3\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.052951039701804876`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.010763190891793391`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "0.00013289637598223124`"}]},
           {"\<\"Mean\"\>", 
            RowBox[{"-", "0.0000214608892764375`"}]},
           {"\<\"3rd Qu\"\>", "0.010995354172502334`"},
           {"\<\"Max\"\>", "0.05750354078653997`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"4 column 4\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.05995388220983168`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.011012096177294912`"}]},
           {"\<\"Mean\"\>", "0.0002055142204020242`"},
           {"\<\"Median\"\>", "0.00029938028861408914`"},
           {"\<\"3rd Qu\"\>", "0.011023580988731923`"},
           {"\<\"Max\"\>", "0.05986822323669791`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"5 column 5\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.06195296451318484`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.010073018377925777`"}]},
           {"\<\"Median\"\>", "0.0007201621177349385`"},
           {"\<\"Mean\"\>", "0.0009345447625180908`"},
           {"\<\"3rd Qu\"\>", "0.011841643784765038`"},
           {"\<\"Max\"\>", "0.07108338982887048`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"6 column 6\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.029719894390231188`"}]},
           {"\<\"1st Qu\"\>", "0.0022752692138889455`"},
           {"\<\"Median\"\>", "0.010747087582284497`"},
           {"\<\"Mean\"\>", "0.010828554886657196`"},
           {"\<\"3rd Qu\"\>", "0.01908857025888491`"},
           {"\<\"Max\"\>", "0.055541908604816025`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"7 column 7\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.059453457834393604`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.011144739054916478`"}]},
           {"\<\"Mean\"\>", 
            RowBox[{"-", "0.00032878081657948326`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "0.0002205892396179345`"}]},
           {"\<\"3rd Qu\"\>", "0.0107262545476255`"},
           {"\<\"Max\"\>", "0.05227195975929231`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"8 column 8\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.05926294502961288`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.011385560884850262`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "0.00042207702693317946`"}]},
           {"\<\"Mean\"\>", 
            RowBox[{"-", "0.0003003833390466334`"}]},
           {"\<\"3rd Qu\"\>", "0.010764448822211628`"},
           {"\<\"Max\"\>", "0.05584490113571792`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"9 column 9\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.059068003249989134`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.011133140794896822`"}]},
           {"\<\"Mean\"\>", 
            RowBox[{"-", "0.0000339777366384299`"}]},
           {"\<\"Median\"\>", "0.00009954715489562347`"},
           {"\<\"3rd Qu\"\>", "0.010898757392148625`"},
           {"\<\"Max\"\>", "0.05915680174091711`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"10 column 10\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.05576895285224817`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.010841898774442494`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "0.0001277759130007503`"}]},
           {"\<\"Mean\"\>", "0.00017809808268847127`"},
           {"\<\"3rd Qu\"\>", "0.011508203590293642`"},
           {"\<\"Max\"\>", "0.06868196967875143`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"11 column 11\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.05446216484391296`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.01123190314275223`"}]},
           {"\<\"Mean\"\>", 
            RowBox[{"-", "0.00036475595738629576`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "0.00023986825469008268`"}]},
           {"\<\"3rd Qu\"\>", "0.010415112626263656`"},
           {"\<\"Max\"\>", "0.0664437697314199`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"12 column 12\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.05436778467893954`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.011642902377440938`"}]},
           {"\<\"Mean\"\>", 
            RowBox[{"-", "0.0006764835469813535`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "0.0006448345580425396`"}]},
           {"\<\"3rd Qu\"\>", "0.010717414227661377`"},
           {"\<\"Max\"\>", "0.057725815559403454`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}], "}"}], "\[Rule]", 
  RowBox[{"{", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 column 1\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "1"}]},
          {"\<\"Mean\"\>", "0.8016`"},
          {"\<\"1st Qu\"\>", "1"},
          {"\<\"3rd Qu\"\>", "1"},
          {"\<\"Max\"\>", "1"},
          {"\<\"Median\"\>", "1"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], "}"}]}]], "Output",
 CellChangeTimes->{3.73431821829627*^9, 3.7343182747746687`*^9, 
  3.734320280481678*^9, 
  3.7343367764642467`*^9},ExpressionUUID->"657109cf-ccda-4623-acc3-\
98417d045462"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.019666592632810457`"}], ",", "0.018142598747663743`", 
       ",", 
       RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",", 
       "0.0056319910293479245`", ",", 
       RowBox[{"-", "0.00951586296660855`"}]}], "}"}], "\[Rule]", "1"}],
    Short], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.010188590435803446`", ",", "0.01187667350438426`", ",", 
       RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",", 
       RowBox[{"-", "0.021327148115781857`"}], ",", 
       RowBox[{"-", "0.004763918860236605`"}]}], "}"}], "\[Rule]", "1"}],
    Short], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.00001719039169928438`"}], ",", "0.031221456847330686`",
        ",", 
       RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",", 
       "0.014774259631590332`", ",", "0.04445618003482495`"}], "}"}], 
     "\[Rule]", "1"}],
    Short], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.01620101524732108`"}], ",", 
       RowBox[{"-", "0.026447053880643057`"}], ",", 
       RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",", 
       RowBox[{"-", "0.011729581213137809`"}], ",", 
       RowBox[{"-", "0.014066391754991567`"}]}], "}"}], "\[Rule]", "1"}],
    Short], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.024540831891929085`"}], ",", "0.02424269262768596`", 
       ",", 
       RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",", 
       "0.004354547882632618`", ",", 
       RowBox[{"-", "0.01219165600452507`"}]}], "}"}], "\[Rule]", "1"}],
    Short], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.005088325837846056`", ",", "0.0038917768543931613`", ",", 
       RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",", 
       "0.009097269839218047`", ",", "0.015373340145801705`"}], "}"}], 
     "\[Rule]", "1"}],
    Short]}], "}"}]], "Output",
 CellChangeTimes->{3.73431821829627*^9, 3.7343182747746687`*^9, 
  3.734320280481678*^9, 
  3.734336776475128*^9},ExpressionUUID->"5ec7f881-6c89-45a0-b79b-\
b67f699012cc"]
}, Open  ]],

Cell["Just checking the matrices:", "Text",
 CellChangeTimes->{{3.734318381885372*^9, 
  3.734318389674213*^9}},ExpressionUUID->"88e60b43-f9cf-4a93-bbdd-\
63445c919979"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"svdRes0", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7337180103489637`*^9, 3.733718012097919*^9}, 
   3.734320285857812*^9},ExpressionUUID->"62396838-91d6-4be8-92ee-\
d1047e750430"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12", ",", "10000"}], "}"}]], "Output",
 CellChangeTimes->{{3.734320287716773*^9, 3.734320293905408*^9}, 
   3.734330140533154*^9, 
   3.734336776515135*^9},ExpressionUUID->"9461dc4d-5471-406a-a3ef-\
61452c177056"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{
     "svdRes0", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "]"}],
     ".", 
    RowBox[{
     RowBox[{"mlData", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ")"}], ".", 
  RowBox[{"Inverse", "[", 
   RowBox[{"svdRes0", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7337177082686577`*^9, 3.733717744038608*^9}, {
  3.7337177874884377`*^9, 3.733717887521247*^9}, {3.7337179229860077`*^9, 
  3.7337179257062283`*^9}, {3.7337179937955227`*^9, 3.733717998720491*^9}, {
  3.733718232931527*^9, 3.733718250129155*^9}, {3.733718413054633*^9, 
  3.733718424336584*^9}, {3.734320298821948*^9, 
  3.734320301865189*^9}},ExpressionUUID->"71c93fc7-8f47-412d-915f-\
11639f79a380"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.019666592632810467`"}], ",", "0.018142598747663784`", ",", 
   RowBox[{"-", "0.00018902403111403007`"}], ",", "0.030511960189038248`", 
   ",", 
   RowBox[{"-", "0.005890981698807098`"}], ",", "0.007726347776524877`", ",", 
   "0.005535644986342683`", ",", 
   RowBox[{"-", "0.0024317333718135324`"}], ",", "0.008812161290631278`", ",", 
   RowBox[{"-", "0.0032333626769078866`"}], ",", "0.0056319910293478916`", 
   ",", 
   RowBox[{"-", "0.009515862966608498`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7343183067847567`*^9, 3.734320304740571*^9, 
  3.734336776564268*^9},ExpressionUUID->"41497b86-4af7-4215-88c3-\
44024aea3ca9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"svdRes0", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
     ".", 
    RowBox[{"Transpose", "[", 
     RowBox[{
     "svdRes0", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
     "]"}]}], ")"}], ".", 
  RowBox[{
   RowBox[{"mlData", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.7337177082686577`*^9, 3.733717744038608*^9}, {
   3.7337177874884377`*^9, 3.733717887521247*^9}, {3.7337179229860077`*^9, 
   3.7337179257062283`*^9}, 3.7337179916683064`*^9, {3.734320308695816*^9, 
   3.7343203110620604`*^9}},ExpressionUUID->"6171821f-6355-43b1-acbb-\
2815741a5164"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.9811218283890957`*^12"}], ",", "4.7131347399075714`*^11", 
   ",", 
   RowBox[{"-", "3.8698254840059004`*^9"}], ",", "5.260828327221176`*^11", 
   ",", 
   RowBox[{"-", "4.69739048478759`*^9"}], ",", "1.0390624361384213`*^8", ",", 
   "6.832389069701764`*^7", ",", 
   RowBox[{"-", "2.983970861622086`*^7"}], ",", "1.0774751897279118`*^8", ",", 
   RowBox[{"-", "3.94220929647537`*^7"}], ",", "6.825469991274357`*^7", ",", 
   RowBox[{"-", "1.1522491080155253`*^8"}]}], "}"}]], "Output",
 CellChangeTimes->{3.734318319303363*^9, 3.734320313290324*^9, 
  3.734336776615036*^9},ExpressionUUID->"593d54c0-84db-4fa5-a8c5-\
c2c65a204536"]
}, Open  ]],

Cell["\<\
Now using the pipeline to get the classifier trained and see the performance:\
\>", "Text",
 CellChangeTimes->{{3.734318400358383*^9, 3.734318405022936*^9}, {
   3.734330155304864*^9, 3.734330161073824*^9}, {3.7343305817480497`*^9, 
   3.734330600904233*^9}, 
   3.734330642564396*^9},ExpressionUUID->"bc8e75bf-1620-48ad-80e7-\
856d22aa904d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"res1", " ", "=", " ", 
   RowBox[{
    RowBox[{"ClConUnit", "[", "mlData2", "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ClConModifyContext", "[", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", 
        RowBox[{"<|", 
         RowBox[{"\"\<variableNames\>\"", "\[Rule]", 
          RowBox[{"Map", "[", 
           RowBox[{"ToString", ",", 
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"mlData2", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
              "+", "1"}], "]"}]}], "]"}]}], "|>"}]}], "]"}], "&"}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ClConSplitData", "[", "0.8", "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", "ClConAddToContext", "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ClConSummarizeData", "[", "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ClConMakeClassifier", "[", "\"\<RandomForest\>\"", "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ClConEchoFunctionContext", "[", 
     RowBox[{
      RowBox[{"Magnify", "[", 
       RowBox[{
        RowBox[{"ClassifierInformation", "[", 
         RowBox[{"#", "[", "\"\<classifier\>\"", "]"}], "]"}], ",", "0.6"}], 
       "]"}], "&"}], "]"}], "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ClConClassifierMeasurements", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Accuracy\>\"", ",", "\"\<Precision\>\"", ",", "\"\<Recall\>\""}], 
      "}"}], "]"}], "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    "ClConEchoValue", "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ClConROCPlot", "[", "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ClConAccuracyByVariableShuffling", "[", "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", "ClConEchoValue"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7337172865858707`*^9, 3.733717499898696*^9}, {
  3.7337175326059723`*^9, 3.733717540095145*^9}, {3.734320875705605*^9, 
  3.734320882389903*^9}},ExpressionUUID->"279e009e-bb87-420c-b592-\
26dabf7714dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"summaries:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"trainingData\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       TagBox[GridBox[{
          {
           StyleBox["\<\"1 RowID\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"1\"\>", "13"},
              {"\<\"10\"\>", "13"},
              {"\<\"100\"\>", "13"},
              {"\<\"1000\"\>", "13"},
              {"\<\"1001\"\>", "13"},
              {"\<\"1002\"\>", "13"},
              {"\<\"(Other)\"\>", "38909"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"2 Variable\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"1\"\>", "2999"},
              {"\<\"10\"\>", "2999"},
              {"\<\"11\"\>", "2999"},
              {"\<\"12\"\>", "2999"},
              {"\<\"13\"\>", "2999"},
              {"\<\"2\"\>", "2999"},
              {"\<\"(Other)\"\>", "20993"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"3 Value\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"Min\"\>", 
               RowBox[{"-", "1"}]},
              {"\<\"1st Qu\"\>", 
               RowBox[{"-", "0.010323130750262479`"}]},
              {"\<\"Median\"\>", "0.0022206266351951654`"},
              {"\<\"3rd Qu\"\>", "0.014201571730803213`"},
              {"\<\"Mean\"\>", "0.06196172140552466`"},
              {"\<\"Max\"\>", "1"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}]}], ",", 
    RowBox[{"\<\"testData\"\>", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       TagBox[GridBox[{
          {
           StyleBox["\<\"1 RowID\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"1\"\>", "13"},
              {"\<\"10\"\>", "13"},
              {"\<\"100\"\>", "13"},
              {"\<\"101\"\>", "13"},
              {"\<\"102\"\>", "13"},
              {"\<\"103\"\>", "13"},
              {"\<\"(Other)\"\>", "9685"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"2 Variable\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"1\"\>", "751"},
              {"\<\"10\"\>", "751"},
              {"\<\"11\"\>", "751"},
              {"\<\"12\"\>", "751"},
              {"\<\"13\"\>", "751"},
              {"\<\"2\"\>", "751"},
              {"\<\"(Other)\"\>", "5257"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], ",", 
       TagBox[GridBox[{
          {
           StyleBox["\<\"3 Value\"\>",
            StripOnInput->False,
            LineColor->RGBColor[0, 0, 1],
            FrontFaceColor->RGBColor[0, 0, 1],
            BackFaceColor->RGBColor[0, 0, 1],
            GraphicsColor->RGBColor[0, 0, 1],
            FontFamily->"Times",
            FontColor->RGBColor[0, 0, 1]]},
          {
           TagBox[GridBox[{
              {"\<\"Min\"\>", 
               RowBox[{"-", "1"}]},
              {"\<\"1st Qu\"\>", 
               RowBox[{"-", "0.010426842627468803`"}]},
              {"\<\"Median\"\>", "0.001935341073328755`"},
              {"\<\"3rd Qu\"\>", "0.014068479224837662`"},
              {"\<\"Mean\"\>", "0.061637024495411134`"},
              {"\<\"Max\"\>", "1"}
             },
             AutoDelete->False,
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}]}]}], "}"}]}]], "Echo",
 CellChangeTimes->{
  3.734336925456995*^9},ExpressionUUID->"c8ffea4a-ec04-462c-a0c2-\
21bffbe9d56b"],

Cell[BoxData[
 StyleBox[
  InterpretationBox[
   TagBox[
    StyleBox[
     FrameBox[GridBox[{
        {
         ItemBox[
          FrameBox[
           StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
            StripOnInput->False,
            FontSize->Larger],
           FrameMargins->{{10, 0}, {-5, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Alignment->{Left, Bottom},
          Background->RGBColor[0.93119, 0.93119, 0.93119],
          Frame->{{False, False}, {True, False}},
          FrameStyle->Opacity[0.1],
          ItemSize->{Automatic, 1},
          StripOnInput->False]},
        {
         ItemBox[
          FrameBox[
           TagBox[GridBox[{
              {
               StyleBox["\<\"Method\"\>",
                StripOnInput->False,
                LineOpacity->0.8,
                FrontFaceOpacity->0.8,
                BackFaceOpacity->0.8,
                Opacity->0.8,
                FontWeight->"SemiBold",
                FontOpacity->0.8], "\<\"Random forest\"\>"},
              {
               StyleBox["\<\"Number of classes\"\>",
                StripOnInput->False,
                LineOpacity->0.8,
                FrontFaceOpacity->0.8,
                BackFaceOpacity->0.8,
                Opacity->0.8,
                FontWeight->"SemiBold",
                FontOpacity->0.8], "2"},
              {
               StyleBox["\<\"Number of features\"\>",
                StripOnInput->False,
                LineOpacity->0.8,
                FrontFaceOpacity->0.8,
                BackFaceOpacity->0.8,
                Opacity->0.8,
                FontWeight->"SemiBold",
                FontOpacity->0.8], "1"},
              {
               StyleBox["\<\"Number of training examples\"\>",
                StripOnInput->False,
                LineOpacity->0.8,
                FrontFaceOpacity->0.8,
                BackFaceOpacity->0.8,
                Opacity->0.8,
                FontWeight->"SemiBold",
                FontOpacity->0.8], "2999"},
              {
               StyleBox["\<\"Number of trees\"\>",
                StripOnInput->False,
                LineOpacity->0.8,
                FrontFaceOpacity->0.8,
                BackFaceOpacity->0.8,
                Opacity->0.8,
                FontWeight->"SemiBold",
                FontOpacity->0.8], "50"}
             },
             AutoDelete->False,
             
             BaseStyle->{
              FontWeight -> "Light", FontFamily -> ".SF NS Text", NumberMarks -> 
               False},
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[2.0999999999999996`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Alignment->Left,
          BaseStyle->{Deployed -> False},
          StripOnInput->False]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxDividers->{
        "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
         "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], 
           Offset[1.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Background->RGBColor[0.9802, 0.9802, 0.9802],
      FrameMargins->{{0, 0}, {0, 0}},
      FrameStyle->GrayLevel[0.85],
      RoundingRadius->5,
      StripOnInput->False],
     StripOnInput->False,
     LineBreakWithin->False],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Association[
   "Method" -> "Random forest", "Number of classes" -> 2, 
    "Number of features" -> 1, "Number of training examples" -> 2999, 
    "Number of trees" -> 50]],
  StripOnInput->False,
  Magnification->0.6 Inherited]], "Echo",
 CellChangeTimes->{
  3.734336926078923*^9},ExpressionUUID->"ecac3d97-69eb-4434-969a-\
76e05e0a0683"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"value:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"Accuracy\"\>", "\[Rule]", "0.9600532623169108`"}], ",", 
    RowBox[{"\<\"Precision\"\>", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "\[Rule]", "0.8688524590163934`"}], ",", 
       RowBox[{"1", "\[Rule]", "0.9681159420289855`"}]}], 
      "\[RightAssociation]"}]}], ",", 
    RowBox[{"\<\"Recall\"\>", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "\[Rule]", "0.7066666666666667`"}], ",", 
       RowBox[{"1", "\[Rule]", "0.9881656804733728`"}]}], 
      "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}]], "Echo",
 CellChangeTimes->{
  3.734336926156281*^9},ExpressionUUID->"984ba105-4da0-4752-a41d-\
42ebae0e462b"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"ROC plot(s):\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "\[Rule]", 
     GraphicsBox[{
       {RGBColor[
         NCache[
          Rational[5, 9], 0.5555555555555556], 
         NCache[
          Rational[5, 9], 0.5555555555555556], 1], 
        LineBox[NCache[{{1, 1}, {1, 1}, {
           Rational[33, 169], Rational[74, 75]}, {
           Rational[87, 676], Rational[74, 75]}, {
           Rational[61, 676], Rational[24, 25]}, {
           Rational[45, 676], Rational[71, 75]}, {
           Rational[41, 676], Rational[71, 75]}, {
           Rational[9, 169], Rational[23, 25]}, {
           Rational[33, 676], Rational[23, 25]}, {
           Rational[27, 676], Rational[23, 25]}, {
           Rational[1, 26], Rational[68, 75]}, {
           Rational[11, 338], Rational[67, 75]}, {
           Rational[5, 169], Rational[67, 75]}, {
           Rational[19, 676], Rational[22, 25]}, {
           Rational[4, 169], Rational[22, 25]}, {
           Rational[7, 338], Rational[21, 25]}, {
           Rational[3, 169], Rational[62, 75]}, {
           Rational[3, 169], Rational[59, 75]}, {
           Rational[3, 169], Rational[19, 25]}, {
           Rational[5, 338], Rational[11, 15]}, {
           Rational[2, 169], Rational[53, 75]}, {
           Rational[2, 169], Rational[52, 75]}, {
           Rational[7, 676], Rational[44, 75]}, {
           Rational[5, 676], Rational[41, 75]}, {
           Rational[3, 676], Rational[12, 25]}, {
           Rational[3, 676], Rational[34, 75]}, {
           Rational[1, 338], Rational[26, 75]}, {
           Rational[1, 338], Rational[22, 75]}, {0, Rational[14, 75]}, {
           0, Rational[2, 15]}, {0, Rational[1, 25]}, {0, Rational[2, 75]}, {
           0, Rational[1, 75]}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}}, {{1, 1}, {1, 1}, {0.1952662721893491, 
           0.9866666666666667}, {0.128698224852071, 0.9866666666666667}, {
           0.09023668639053255, 0.96}, {0.06656804733727811, 
           0.9466666666666667}, {0.060650887573964495`, 0.9466666666666667}, {
           0.05325443786982249, 0.92}, {0.04881656804733728, 0.92}, {
           0.03994082840236687, 0.92}, {0.038461538461538464`, 
           0.9066666666666666}, {0.03254437869822485, 0.8933333333333333}, {
           0.029585798816568046`, 0.8933333333333333}, {0.028106508875739646`,
            0.88}, {0.023668639053254437`, 0.88}, {0.020710059171597635`, 
           0.84}, {0.01775147928994083, 0.8266666666666667}, {
           0.01775147928994083, 0.7866666666666666}, {0.01775147928994083, 
           0.76}, {0.014792899408284023`, 0.7333333333333333}, {
           0.011834319526627219`, 0.7066666666666667}, {0.011834319526627219`,
            0.6933333333333334}, {0.010355029585798817`, 
           0.5866666666666667}, {0.0073964497041420114`, 
           0.5466666666666666}, {0.004437869822485207, 0.48}, {
           0.004437869822485207, 0.4533333333333333}, {0.0029585798816568047`,
            0.3466666666666667}, {0.0029585798816568047`, 
           0.29333333333333333`}, {0, 0.18666666666666668`}, {
           0, 0.13333333333333333`}, {0, 0.04}, {0, 0.02666666666666667}, {
           0, 0.013333333333333334`}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}, {0, 0}}]]}, 
       {RGBColor[
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333], 1], PointSize[0.02], 
        LineBox[NCache[{{1, 1}, {1, 1}, {
           Rational[33, 169], Rational[74, 75]}, {
           Rational[87, 676], Rational[74, 75]}, {
           Rational[61, 676], Rational[24, 25]}, {
           Rational[45, 676], Rational[71, 75]}, {
           Rational[41, 676], Rational[71, 75]}, {
           Rational[9, 169], Rational[23, 25]}, {
           Rational[33, 676], Rational[23, 25]}, {
           Rational[27, 676], Rational[23, 25]}, {
           Rational[1, 26], Rational[68, 75]}, {
           Rational[11, 338], Rational[67, 75]}, {
           Rational[5, 169], Rational[67, 75]}, {
           Rational[19, 676], Rational[22, 25]}, {
           Rational[4, 169], Rational[22, 25]}, {
           Rational[7, 338], Rational[21, 25]}, {
           Rational[3, 169], Rational[62, 75]}, {
           Rational[3, 169], Rational[59, 75]}, {
           Rational[3, 169], Rational[19, 25]}, {
           Rational[5, 338], Rational[11, 15]}, {
           Rational[2, 169], Rational[53, 75]}, {
           Rational[2, 169], Rational[52, 75]}, {
           Rational[7, 676], Rational[44, 75]}, {
           Rational[5, 676], Rational[41, 75]}, {
           Rational[3, 676], Rational[12, 25]}, {
           Rational[3, 676], Rational[34, 75]}, {
           Rational[1, 338], Rational[26, 75]}, {
           Rational[1, 338], Rational[22, 75]}, {0, Rational[14, 75]}, {
           0, Rational[2, 15]}, {0, Rational[1, 25]}, {0, Rational[2, 75]}, {
           0, Rational[1, 75]}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}}, {{1, 1}, {1, 1}, {0.1952662721893491, 
           0.9866666666666667}, {0.128698224852071, 0.9866666666666667}, {
           0.09023668639053255, 0.96}, {0.06656804733727811, 
           0.9466666666666667}, {0.060650887573964495`, 0.9466666666666667}, {
           0.05325443786982249, 0.92}, {0.04881656804733728, 0.92}, {
           0.03994082840236687, 0.92}, {0.038461538461538464`, 
           0.9066666666666666}, {0.03254437869822485, 0.8933333333333333}, {
           0.029585798816568046`, 0.8933333333333333}, {0.028106508875739646`,
            0.88}, {0.023668639053254437`, 0.88}, {0.020710059171597635`, 
           0.84}, {0.01775147928994083, 0.8266666666666667}, {
           0.01775147928994083, 0.7866666666666666}, {0.01775147928994083, 
           0.76}, {0.014792899408284023`, 0.7333333333333333}, {
           0.011834319526627219`, 0.7066666666666667}, {0.011834319526627219`,
            0.6933333333333334}, {0.010355029585798817`, 
           0.5866666666666667}, {0.0073964497041420114`, 
           0.5466666666666666}, {0.004437869822485207, 0.48}, {
           0.004437869822485207, 0.4533333333333333}, {0.0029585798816568047`,
            0.3466666666666667}, {0.0029585798816568047`, 
           0.29333333333333333`}, {0, 0.18666666666666668`}, {
           0, 0.13333333333333333`}, {0, 0.04}, {0, 0.02666666666666667}, {
           0, 0.013333333333333334`}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}, {0, 0}}]], {
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.`"],
          Annotation[#, 0., "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.025`"],
          Annotation[#, 0.025, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[33, 169], Rational[74, 75]}, {0.1952662721893491,
              0.9866666666666667}]],
           "0.05`"],
          Annotation[#, 0.05, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[87, 676], Rational[74, 75]}, {0.128698224852071, 
             0.9866666666666667}]],
           "0.07500000000000001`"],
          Annotation[#, 0.07500000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[61, 676], Rational[24, 25]}, {
             0.09023668639053255, 0.96}]],
           "0.1`"],
          Annotation[#, 0.1, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[45, 676], Rational[71, 75]}, {
             0.06656804733727811, 0.9466666666666667}]],
           "0.125`"],
          Annotation[#, 0.125, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[41, 676], Rational[71, 75]}, {
             0.060650887573964495`, 0.9466666666666667}]],
           "0.15000000000000002`"],
          Annotation[#, 0.15000000000000002`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[9, 169], Rational[23, 25]}, {0.05325443786982249,
              0.92}]],
           "0.17500000000000002`"],
          Annotation[#, 0.17500000000000002`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[33, 676], Rational[23, 25]}, {
             0.04881656804733728, 0.92}]],
           "0.2`"],
          Annotation[#, 0.2, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[27, 676], Rational[23, 25]}, {
             0.03994082840236687, 0.92}]],
           "0.225`"],
          Annotation[#, 0.225, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 26], Rational[68, 75]}, {
             0.038461538461538464`, 0.9066666666666666}]],
           "0.25`"],
          Annotation[#, 0.25, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[11, 338], Rational[67, 75]}, {
             0.03254437869822485, 0.8933333333333333}]],
           "0.275`"],
          Annotation[#, 0.275, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[5, 169], Rational[67, 75]}, {
             0.029585798816568046`, 0.8933333333333333}]],
           "0.30000000000000004`"],
          Annotation[#, 0.30000000000000004`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[19, 676], Rational[22, 25]}, {
             0.028106508875739646`, 0.88}]],
           "0.325`"],
          Annotation[#, 0.325, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[4, 169], Rational[22, 25]}, {
             0.023668639053254437`, 0.88}]],
           "0.35000000000000003`"],
          Annotation[#, 0.35000000000000003`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[7, 338], Rational[21, 25]}, {
             0.020710059171597635`, 0.84}]],
           "0.375`"],
          Annotation[#, 0.375, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 169], Rational[62, 75]}, {0.01775147928994083,
              0.8266666666666667}]],
           "0.4`"],
          Annotation[#, 0.4, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 169], Rational[59, 75]}, {0.01775147928994083,
              0.7866666666666666}]],
           "0.42500000000000004`"],
          Annotation[#, 0.42500000000000004`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 169], Rational[19, 25]}, {0.01775147928994083,
              0.76}]],
           "0.45`"],
          Annotation[#, 0.45, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[5, 338], Rational[11, 15]}, {
             0.014792899408284023`, 0.7333333333333333}]],
           "0.47500000000000003`"],
          Annotation[#, 0.47500000000000003`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[2, 169], Rational[53, 75]}, {
             0.011834319526627219`, 0.7066666666666667}]],
           "0.5`"],
          Annotation[#, 0.5, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[2, 169], Rational[52, 75]}, {
             0.011834319526627219`, 0.6933333333333334}]],
           "0.525`"],
          Annotation[#, 0.525, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[7, 676], Rational[44, 75]}, {
             0.010355029585798817`, 0.5866666666666667}]],
           "0.55`"],
          Annotation[#, 0.55, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[5, 676], Rational[41, 75]}, {
             0.0073964497041420114`, 0.5466666666666666}]],
           "0.5750000000000001`"],
          Annotation[#, 0.5750000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 676], Rational[12, 25]}, {
             0.004437869822485207, 0.48}]],
           "0.6000000000000001`"],
          Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 676], Rational[34, 75]}, {
             0.004437869822485207, 0.4533333333333333}]],
           "0.625`"],
          Annotation[#, 0.625, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 338], Rational[26, 75]}, {
             0.0029585798816568047`, 0.3466666666666667}]],
           "0.65`"],
          Annotation[#, 0.65, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 338], Rational[22, 75]}, {
             0.0029585798816568047`, 0.29333333333333333`}]],
           "0.675`"],
          Annotation[#, 0.675, "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           PointBox[NCache[{0, Rational[14, 75]}, {0, 0.18666666666666668`}]],
           "0.7000000000000001`"],
          Annotation[#, 0.7000000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[NCache[{0, Rational[2, 15]}, {0, 0.13333333333333333`}]],
           "0.7250000000000001`"],
          Annotation[#, 0.7250000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[NCache[{0, Rational[1, 25]}, {0, 0.04}]],
           "0.75`"],
          Annotation[#, 0.75, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[NCache[{0, Rational[2, 75]}, {0, 0.02666666666666667}]],
           "0.775`"],
          Annotation[#, 0.775, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[NCache[{0, Rational[1, 75]}, {0, 0.013333333333333334`}]],
           "0.8`"],
          Annotation[#, 0.8, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.8250000000000001`"],
          Annotation[#, 0.8250000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.8500000000000001`"],
          Annotation[#, 0.8500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.875`"],
          Annotation[#, 0.875, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9`"],
          Annotation[#, 0.9, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.925`"],
          Annotation[#, 0.925, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9500000000000001`"],
          Annotation[#, 0.9500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9750000000000001`"],
          Annotation[#, 0.9750000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "1.`"],
          Annotation[#, 1., "Tooltip"]& ]}, 
        {GrayLevel[0], InsetBox["0.`", {1, 1}, {-1, 2}], 
         InsetBox["0.025`", {1, 1}, {-1, 2}], 
         InsetBox["0.05`", 
          NCache[{Rational[33, 169], Rational[74, 75]}, {0.1952662721893491, 
           0.9866666666666667}], {-1, 2}], 
         InsetBox["0.07500000000000001`", 
          NCache[{Rational[87, 676], Rational[74, 75]}, {0.128698224852071, 
           0.9866666666666667}], {-1, 2}], 
         InsetBox["0.1`", 
          NCache[{Rational[61, 676], Rational[24, 25]}, {0.09023668639053255, 
           0.96}], {-1, 2}], 
         InsetBox["0.125`", 
          NCache[{Rational[45, 676], Rational[71, 75]}, {0.06656804733727811, 
           0.9466666666666667}], {-1, 2}], 
         InsetBox["0.15000000000000002`", 
          NCache[{Rational[41, 676], Rational[71, 75]}, {
           0.060650887573964495`, 0.9466666666666667}], {-1, 2}], 
         InsetBox["0.17500000000000002`", 
          NCache[{Rational[9, 169], Rational[23, 25]}, {0.05325443786982249, 
           0.92}], {-1, 2}], 
         InsetBox["0.2`", 
          NCache[{Rational[33, 676], Rational[23, 25]}, {0.04881656804733728, 
           0.92}], {-1, 2}], 
         InsetBox["0.225`", 
          NCache[{Rational[27, 676], Rational[23, 25]}, {0.03994082840236687, 
           0.92}], {-1, 2}], 
         InsetBox["0.25`", 
          NCache[{Rational[1, 26], Rational[68, 75]}, {0.038461538461538464`, 
           0.9066666666666666}], {-1, 2}], 
         InsetBox["0.275`", 
          NCache[{Rational[11, 338], Rational[67, 75]}, {0.03254437869822485, 
           0.8933333333333333}], {-1, 2}], 
         InsetBox["0.30000000000000004`", 
          NCache[{Rational[5, 169], Rational[67, 75]}, {0.029585798816568046`,
            0.8933333333333333}], {-1, 2}], 
         InsetBox["0.325`", 
          NCache[{Rational[19, 676], Rational[22, 25]}, {
           0.028106508875739646`, 0.88}], {-1, 2}], 
         InsetBox["0.35000000000000003`", 
          NCache[{Rational[4, 169], Rational[22, 25]}, {0.023668639053254437`,
            0.88}], {-1, 2}], 
         InsetBox["0.375`", 
          NCache[{Rational[7, 338], Rational[21, 25]}, {0.020710059171597635`,
            0.84}], {-1, 2}], 
         InsetBox["0.4`", 
          NCache[{Rational[3, 169], Rational[62, 75]}, {0.01775147928994083, 
           0.8266666666666667}], {-1, 2}], 
         InsetBox["0.42500000000000004`", 
          NCache[{Rational[3, 169], Rational[59, 75]}, {0.01775147928994083, 
           0.7866666666666666}], {-1, 2}], 
         InsetBox["0.45`", 
          NCache[{Rational[3, 169], Rational[19, 25]}, {0.01775147928994083, 
           0.76}], {-1, 2}], 
         InsetBox["0.47500000000000003`", 
          NCache[{Rational[5, 338], Rational[11, 15]}, {0.014792899408284023`,
            0.7333333333333333}], {-1, 2}], 
         InsetBox["0.5`", 
          NCache[{Rational[2, 169], Rational[53, 75]}, {0.011834319526627219`,
            0.7066666666666667}], {-1, 2}], 
         InsetBox["0.525`", 
          NCache[{Rational[2, 169], Rational[52, 75]}, {0.011834319526627219`,
            0.6933333333333334}], {-1, 2}], 
         InsetBox["0.55`", 
          NCache[{Rational[7, 676], Rational[44, 75]}, {0.010355029585798817`,
            0.5866666666666667}], {-1, 2}], 
         InsetBox["0.5750000000000001`", 
          NCache[{Rational[5, 676], Rational[41, 75]}, {
           0.0073964497041420114`, 0.5466666666666666}], {-1, 2}], 
         InsetBox["0.6000000000000001`", 
          NCache[{Rational[3, 676], Rational[12, 25]}, {0.004437869822485207, 
           0.48}], {-1, 2}], 
         InsetBox["0.625`", 
          NCache[{Rational[3, 676], Rational[34, 75]}, {0.004437869822485207, 
           0.4533333333333333}], {-1, 2}], 
         InsetBox["0.65`", 
          NCache[{Rational[1, 338], Rational[26, 75]}, {
           0.0029585798816568047`, 0.3466666666666667}], {-1, 2}], 
         InsetBox["0.675`", 
          NCache[{Rational[1, 338], Rational[22, 75]}, {
           0.0029585798816568047`, 0.29333333333333333`}], {-1, 2}], 
         InsetBox["0.7000000000000001`", 
          NCache[{0, Rational[14, 75]}, {0, 0.18666666666666668`}], {-1, 2}], 
         InsetBox["0.7250000000000001`", 
          NCache[{0, Rational[2, 15]}, {0, 0.13333333333333333`}], {-1, 2}], 
         InsetBox["0.75`", NCache[{0, Rational[1, 25]}, {0, 0.04}], {-1, 2}], 
         InsetBox["0.775`", 
          NCache[{0, Rational[2, 75]}, {0, 0.02666666666666667}], {-1, 2}], 
         InsetBox["0.8`", 
          NCache[{0, Rational[1, 75]}, {0, 0.013333333333333334`}], {-1, 2}], 
         InsetBox["0.8250000000000001`", {0, 0}, {-1, 2}], 
         InsetBox["0.8500000000000001`", {0, 0}, {-1, 2}], 
         InsetBox["0.875`", {0, 0}, {-1, 2}], 
         InsetBox["0.9`", {0, 0}, {-1, 2}], 
         InsetBox["0.925`", {0, 0}, {-1, 2}], 
         InsetBox["0.9500000000000001`", {0, 0}, {-1, 2}], 
         InsetBox["0.9750000000000001`", {0, 0}, {-1, 2}], 
         InsetBox["1.`", {0, 0}, {-1, 2}]}}},
      AspectRatio->1,
      Frame->True,
      FrameLabel->{
        FormBox[
         StyleBox[
         "\"FPR, false positive rate\"", Larger, Bold, StripOnInput -> False],
          TraditionalForm], 
        FormBox[
         StyleBox[
         "\"TPR, true positive rate\"", Larger, Bold, StripOnInput -> False], 
         TraditionalForm]},
      GridLines->Automatic,
      ImageSize->Medium]}], ",", 
    RowBox[{"1", "\[Rule]", 
     GraphicsBox[{
       {RGBColor[
         NCache[
          Rational[5, 9], 0.5555555555555556], 
         NCache[
          Rational[5, 9], 0.5555555555555556], 1], 
        LineBox[NCache[{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 
           1}, {1, 1}, {Rational[74, 75], 1}, {Rational[73, 75], 1}, {
           Rational[24, 25], 1}, {Rational[13, 15], 1}, {
           Rational[61, 75], 1}, {Rational[53, 75], Rational[337, 338]}, {
           Rational[49, 75], Rational[337, 338]}, {
           Rational[41, 75], Rational[673, 676]}, {
           Rational[13, 25], Rational[673, 676]}, {
           Rational[34, 75], Rational[671, 676]}, {
           Rational[31, 75], Rational[669, 676]}, {
           Rational[23, 75], Rational[167, 169]}, {
           Rational[22, 75], Rational[167, 169]}, {
           Rational[4, 15], Rational[333, 338]}, {
           Rational[6, 25], Rational[166, 169]}, {
           Rational[16, 75], Rational[166, 169]}, {
           Rational[13, 75], Rational[166, 169]}, {
           Rational[4, 25], Rational[331, 338]}, {
           Rational[3, 25], Rational[165, 169]}, {
           Rational[3, 25], Rational[657, 676]}, {
           Rational[8, 75], Rational[164, 169]}, {
           Rational[8, 75], Rational[327, 338]}, {
           Rational[7, 75], Rational[25, 26]}, {
           Rational[2, 25], Rational[649, 676]}, {
           Rational[2, 25], Rational[643, 676]}, {
           Rational[2, 25], Rational[160, 169]}, {
           Rational[4, 75], Rational[635, 676]}, {
           Rational[4, 75], Rational[631, 676]}, {
           Rational[1, 25], Rational[615, 676]}, {
           Rational[1, 75], Rational[589, 676]}, {
           Rational[1, 75], Rational[136, 169]}, {0, 0}, {0, 0}}, {{1, 1}, {1,
            1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {
           0.9866666666666667, 1}, {0.9733333333333334, 1}, {0.96, 1}, {
           0.8666666666666667, 1}, {0.8133333333333334, 1}, {
           0.7066666666666667, 0.9970414201183432}, {0.6533333333333333, 
           0.9970414201183432}, {0.5466666666666666, 0.9955621301775148}, {
           0.52, 0.9955621301775148}, {0.4533333333333333, 
           0.992603550295858}, {0.41333333333333333`, 0.9896449704142012}, {
           0.30666666666666664`, 0.9881656804733728}, {0.29333333333333333`, 
           0.9881656804733728}, {0.26666666666666666`, 0.985207100591716}, {
           0.24, 0.9822485207100592}, {0.21333333333333335`, 
           0.9822485207100592}, {0.17333333333333334`, 0.9822485207100592}, {
           0.16, 0.9792899408284024}, {0.12, 0.9763313609467456}, {0.12, 
           0.9718934911242604}, {0.10666666666666667`, 0.9704142011834319}, {
           0.10666666666666667`, 0.9674556213017751}, {0.09333333333333334, 
           0.9615384615384616}, {0.08, 0.9600591715976331}, {0.08, 
           0.9511834319526628}, {0.08, 0.9467455621301775}, {
           0.05333333333333334, 0.9393491124260355}, {0.05333333333333334, 
           0.9334319526627219}, {0.04, 0.9097633136094675}, {
           0.013333333333333334`, 0.871301775147929}, {0.013333333333333334`, 
           0.8047337278106509}, {0, 0}, {0, 0}}]]}, 
       {RGBColor[
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333], 1], PointSize[0.02], 
        LineBox[NCache[{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 
           1}, {1, 1}, {Rational[74, 75], 1}, {Rational[73, 75], 1}, {
           Rational[24, 25], 1}, {Rational[13, 15], 1}, {
           Rational[61, 75], 1}, {Rational[53, 75], Rational[337, 338]}, {
           Rational[49, 75], Rational[337, 338]}, {
           Rational[41, 75], Rational[673, 676]}, {
           Rational[13, 25], Rational[673, 676]}, {
           Rational[34, 75], Rational[671, 676]}, {
           Rational[31, 75], Rational[669, 676]}, {
           Rational[23, 75], Rational[167, 169]}, {
           Rational[22, 75], Rational[167, 169]}, {
           Rational[4, 15], Rational[333, 338]}, {
           Rational[6, 25], Rational[166, 169]}, {
           Rational[16, 75], Rational[166, 169]}, {
           Rational[13, 75], Rational[166, 169]}, {
           Rational[4, 25], Rational[331, 338]}, {
           Rational[3, 25], Rational[165, 169]}, {
           Rational[3, 25], Rational[657, 676]}, {
           Rational[8, 75], Rational[164, 169]}, {
           Rational[8, 75], Rational[327, 338]}, {
           Rational[7, 75], Rational[25, 26]}, {
           Rational[2, 25], Rational[649, 676]}, {
           Rational[2, 25], Rational[643, 676]}, {
           Rational[2, 25], Rational[160, 169]}, {
           Rational[4, 75], Rational[635, 676]}, {
           Rational[4, 75], Rational[631, 676]}, {
           Rational[1, 25], Rational[615, 676]}, {
           Rational[1, 75], Rational[589, 676]}, {
           Rational[1, 75], Rational[136, 169]}, {0, 0}, {0, 0}}, {{1, 1}, {1,
            1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {
           0.9866666666666667, 1}, {0.9733333333333334, 1}, {0.96, 1}, {
           0.8666666666666667, 1}, {0.8133333333333334, 1}, {
           0.7066666666666667, 0.9970414201183432}, {0.6533333333333333, 
           0.9970414201183432}, {0.5466666666666666, 0.9955621301775148}, {
           0.52, 0.9955621301775148}, {0.4533333333333333, 
           0.992603550295858}, {0.41333333333333333`, 0.9896449704142012}, {
           0.30666666666666664`, 0.9881656804733728}, {0.29333333333333333`, 
           0.9881656804733728}, {0.26666666666666666`, 0.985207100591716}, {
           0.24, 0.9822485207100592}, {0.21333333333333335`, 
           0.9822485207100592}, {0.17333333333333334`, 0.9822485207100592}, {
           0.16, 0.9792899408284024}, {0.12, 0.9763313609467456}, {0.12, 
           0.9718934911242604}, {0.10666666666666667`, 0.9704142011834319}, {
           0.10666666666666667`, 0.9674556213017751}, {0.09333333333333334, 
           0.9615384615384616}, {0.08, 0.9600591715976331}, {0.08, 
           0.9511834319526628}, {0.08, 0.9467455621301775}, {
           0.05333333333333334, 0.9393491124260355}, {0.05333333333333334, 
           0.9334319526627219}, {0.04, 0.9097633136094675}, {
           0.013333333333333334`, 0.871301775147929}, {0.013333333333333334`, 
           0.8047337278106509}, {0, 0}, {0, 0}}]], {
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.`"],
          Annotation[#, 0., "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.025`"],
          Annotation[#, 0.025, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.05`"],
          Annotation[#, 0.05, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.07500000000000001`"],
          Annotation[#, 0.07500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.1`"],
          Annotation[#, 0.1, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.125`"],
          Annotation[#, 0.125, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.15000000000000002`"],
          Annotation[#, 0.15000000000000002`, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.17500000000000002`"],
          Annotation[#, 0.17500000000000002`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[NCache[{Rational[74, 75], 1}, {0.9866666666666667, 1}]],
           "0.2`"],
          Annotation[#, 0.2, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[NCache[{Rational[73, 75], 1}, {0.9733333333333334, 1}]],
           "0.225`"],
          Annotation[#, 0.225, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[NCache[{Rational[24, 25], 1}, {0.96, 1}]],
           "0.25`"],
          Annotation[#, 0.25, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[NCache[{Rational[13, 15], 1}, {0.8666666666666667, 1}]],
           "0.275`"],
          Annotation[#, 0.275, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[NCache[{Rational[61, 75], 1}, {0.8133333333333334, 1}]],
           "0.30000000000000004`"],
          Annotation[#, 0.30000000000000004`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[53, 75], Rational[337, 338]}, {
             0.7066666666666667, 0.9970414201183432}]],
           "0.325`"],
          Annotation[#, 0.325, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[49, 75], Rational[337, 338]}, {
             0.6533333333333333, 0.9970414201183432}]],
           "0.35000000000000003`"],
          Annotation[#, 0.35000000000000003`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[41, 75], Rational[673, 676]}, {
             0.5466666666666666, 0.9955621301775148}]],
           "0.375`"],
          Annotation[#, 0.375, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[13, 25], Rational[673, 676]}, {0.52, 
             0.9955621301775148}]],
           "0.4`"],
          Annotation[#, 0.4, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[34, 75], Rational[671, 676]}, {
             0.4533333333333333, 0.992603550295858}]],
           "0.42500000000000004`"],
          Annotation[#, 0.42500000000000004`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[31, 75], Rational[669, 676]}, {
             0.41333333333333333`, 0.9896449704142012}]],
           "0.45`"],
          Annotation[#, 0.45, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[23, 75], Rational[167, 169]}, {
             0.30666666666666664`, 0.9881656804733728}]],
           "0.47500000000000003`"],
          Annotation[#, 0.47500000000000003`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[22, 75], Rational[167, 169]}, {
             0.29333333333333333`, 0.9881656804733728}]],
           "0.5`"],
          Annotation[#, 0.5, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[4, 15], Rational[333, 338]}, {
             0.26666666666666666`, 0.985207100591716}]],
           "0.525`"],
          Annotation[#, 0.525, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[6, 25], Rational[166, 169]}, {0.24, 
             0.9822485207100592}]],
           "0.55`"],
          Annotation[#, 0.55, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[16, 75], Rational[166, 169]}, {
             0.21333333333333335`, 0.9822485207100592}]],
           "0.5750000000000001`"],
          Annotation[#, 0.5750000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[13, 75], Rational[166, 169]}, {
             0.17333333333333334`, 0.9822485207100592}]],
           "0.6000000000000001`"],
          Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[4, 25], Rational[331, 338]}, {0.16, 
             0.9792899408284024}]],
           "0.625`"],
          Annotation[#, 0.625, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 25], Rational[165, 169]}, {0.12, 
             0.9763313609467456}]],
           "0.65`"],
          Annotation[#, 0.65, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 25], Rational[657, 676]}, {0.12, 
             0.9718934911242604}]],
           "0.675`"],
          Annotation[#, 0.675, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[8, 75], Rational[164, 169]}, {
             0.10666666666666667`, 0.9704142011834319}]],
           "0.7000000000000001`"],
          Annotation[#, 0.7000000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[8, 75], Rational[327, 338]}, {
             0.10666666666666667`, 0.9674556213017751}]],
           "0.7250000000000001`"],
          Annotation[#, 0.7250000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[7, 75], Rational[25, 26]}, {0.09333333333333334, 
             0.9615384615384616}]],
           "0.75`"],
          Annotation[#, 0.75, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[2, 25], Rational[649, 676]}, {0.08, 
             0.9600591715976331}]],
           "0.775`"],
          Annotation[#, 0.775, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[2, 25], Rational[643, 676]}, {0.08, 
             0.9511834319526628}]],
           "0.8`"],
          Annotation[#, 0.8, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[2, 25], Rational[160, 169]}, {0.08, 
             0.9467455621301775}]],
           "0.8250000000000001`"],
          Annotation[#, 0.8250000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[4, 75], Rational[635, 676]}, {
             0.05333333333333334, 0.9393491124260355}]],
           "0.8500000000000001`"],
          Annotation[#, 0.8500000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[4, 75], Rational[631, 676]}, {
             0.05333333333333334, 0.9334319526627219}]],
           "0.875`"],
          Annotation[#, 0.875, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 25], Rational[615, 676]}, {0.04, 
             0.9097633136094675}]],
           "0.9`"],
          Annotation[#, 0.9, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 75], Rational[589, 676]}, {
             0.013333333333333334`, 0.871301775147929}]],
           "0.925`"],
          Annotation[#, 0.925, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 75], Rational[136, 169]}, {
             0.013333333333333334`, 0.8047337278106509}]],
           "0.9500000000000001`"],
          Annotation[#, 0.9500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9750000000000001`"],
          Annotation[#, 0.9750000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "1.`"],
          Annotation[#, 1., "Tooltip"]& ]}, 
        {GrayLevel[0], InsetBox["0.`", {1, 1}, {-1, 2}], 
         InsetBox["0.025`", {1, 1}, {-1, 2}], 
         InsetBox["0.05`", {1, 1}, {-1, 2}], 
         InsetBox["0.07500000000000001`", {1, 1}, {-1, 2}], 
         InsetBox["0.1`", {1, 1}, {-1, 2}], 
         InsetBox["0.125`", {1, 1}, {-1, 2}], 
         InsetBox["0.15000000000000002`", {1, 1}, {-1, 2}], 
         InsetBox["0.17500000000000002`", {1, 1}, {-1, 2}], 
         InsetBox["0.2`", 
          NCache[{Rational[74, 75], 1}, {0.9866666666666667, 1}], {-1, 2}], 
         InsetBox["0.225`", 
          NCache[{Rational[73, 75], 1}, {0.9733333333333334, 1}], {-1, 2}], 
         InsetBox["0.25`", NCache[{Rational[24, 25], 1}, {0.96, 1}], {-1, 2}],
          InsetBox["0.275`", 
          NCache[{Rational[13, 15], 1}, {0.8666666666666667, 1}], {-1, 2}], 
         InsetBox["0.30000000000000004`", 
          NCache[{Rational[61, 75], 1}, {0.8133333333333334, 1}], {-1, 2}], 
         InsetBox["0.325`", 
          NCache[{Rational[53, 75], Rational[337, 338]}, {0.7066666666666667, 
           0.9970414201183432}], {-1, 2}], 
         InsetBox["0.35000000000000003`", 
          NCache[{Rational[49, 75], Rational[337, 338]}, {0.6533333333333333, 
           0.9970414201183432}], {-1, 2}], 
         InsetBox["0.375`", 
          NCache[{Rational[41, 75], Rational[673, 676]}, {0.5466666666666666, 
           0.9955621301775148}], {-1, 2}], 
         InsetBox["0.4`", 
          NCache[{Rational[13, 25], Rational[673, 676]}, {0.52, 
           0.9955621301775148}], {-1, 2}], 
         InsetBox["0.42500000000000004`", 
          NCache[{Rational[34, 75], Rational[671, 676]}, {0.4533333333333333, 
           0.992603550295858}], {-1, 2}], 
         InsetBox["0.45`", 
          NCache[{Rational[31, 75], Rational[669, 676]}, {
           0.41333333333333333`, 0.9896449704142012}], {-1, 2}], 
         InsetBox["0.47500000000000003`", 
          NCache[{Rational[23, 75], Rational[167, 169]}, {
           0.30666666666666664`, 0.9881656804733728}], {-1, 2}], 
         InsetBox["0.5`", 
          NCache[{Rational[22, 75], Rational[167, 169]}, {
           0.29333333333333333`, 0.9881656804733728}], {-1, 2}], 
         InsetBox["0.525`", 
          NCache[{Rational[4, 15], Rational[333, 338]}, {0.26666666666666666`,
            0.985207100591716}], {-1, 2}], 
         InsetBox["0.55`", 
          NCache[{Rational[6, 25], Rational[166, 169]}, {0.24, 
           0.9822485207100592}], {-1, 2}], 
         InsetBox["0.5750000000000001`", 
          NCache[{Rational[16, 75], Rational[166, 169]}, {
           0.21333333333333335`, 0.9822485207100592}], {-1, 2}], 
         InsetBox["0.6000000000000001`", 
          NCache[{Rational[13, 75], Rational[166, 169]}, {
           0.17333333333333334`, 0.9822485207100592}], {-1, 2}], 
         InsetBox["0.625`", 
          NCache[{Rational[4, 25], Rational[331, 338]}, {0.16, 
           0.9792899408284024}], {-1, 2}], 
         InsetBox["0.65`", 
          NCache[{Rational[3, 25], Rational[165, 169]}, {0.12, 
           0.9763313609467456}], {-1, 2}], 
         InsetBox["0.675`", 
          NCache[{Rational[3, 25], Rational[657, 676]}, {0.12, 
           0.9718934911242604}], {-1, 2}], 
         InsetBox["0.7000000000000001`", 
          NCache[{Rational[8, 75], Rational[164, 169]}, {0.10666666666666667`,
            0.9704142011834319}], {-1, 2}], 
         InsetBox["0.7250000000000001`", 
          NCache[{Rational[8, 75], Rational[327, 338]}, {0.10666666666666667`,
            0.9674556213017751}], {-1, 2}], 
         InsetBox["0.75`", 
          NCache[{Rational[7, 75], Rational[25, 26]}, {0.09333333333333334, 
           0.9615384615384616}], {-1, 2}], 
         InsetBox["0.775`", 
          NCache[{Rational[2, 25], Rational[649, 676]}, {0.08, 
           0.9600591715976331}], {-1, 2}], 
         InsetBox["0.8`", 
          NCache[{Rational[2, 25], Rational[643, 676]}, {0.08, 
           0.9511834319526628}], {-1, 2}], 
         InsetBox["0.8250000000000001`", 
          NCache[{Rational[2, 25], Rational[160, 169]}, {0.08, 
           0.9467455621301775}], {-1, 2}], 
         InsetBox["0.8500000000000001`", 
          NCache[{Rational[4, 75], Rational[635, 676]}, {0.05333333333333334, 
           0.9393491124260355}], {-1, 2}], 
         InsetBox["0.875`", 
          NCache[{Rational[4, 75], Rational[631, 676]}, {0.05333333333333334, 
           0.9334319526627219}], {-1, 2}], 
         InsetBox["0.9`", 
          NCache[{Rational[1, 25], Rational[615, 676]}, {0.04, 
           0.9097633136094675}], {-1, 2}], 
         InsetBox["0.925`", 
          NCache[{Rational[1, 75], Rational[589, 676]}, {
           0.013333333333333334`, 0.871301775147929}], {-1, 2}], 
         InsetBox["0.9500000000000001`", 
          NCache[{Rational[1, 75], Rational[136, 169]}, {
           0.013333333333333334`, 0.8047337278106509}], {-1, 2}], 
         InsetBox["0.9750000000000001`", {0, 0}, {-1, 2}], 
         InsetBox["1.`", {0, 0}, {-1, 2}]}}},
      AspectRatio->1,
      Frame->True,
      FrameLabel->{
        FormBox[
         StyleBox[
         "\"FPR, false positive rate\"", Larger, Bold, StripOnInput -> False],
          TraditionalForm], 
        FormBox[
         StyleBox[
         "\"TPR, true positive rate\"", Larger, Bold, StripOnInput -> False], 
         TraditionalForm]},
      GridLines->Automatic,
      ImageSize->Medium]}]}], "\[RightAssociation]"}]}]], "Echo",
 CellChangeTimes->{
  3.734336926436761*^9},ExpressionUUID->"6ac69c7f-ceeb-42a2-916d-\
896a6e393510"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"value:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"None", "\[Rule]", "0.9600532623169108`"}], ",", 
    RowBox[{"1", "\[Rule]", "0.829560585885486`"}], ",", 
    RowBox[{"2", "\[Rule]", "0.9600532623169108`"}], ",", 
    RowBox[{"3", "\[Rule]", "0.9587217043941412`"}], ",", 
    RowBox[{"4", "\[Rule]", "0.9560585885486018`"}], ",", 
    RowBox[{"5", "\[Rule]", "0.9507323568575233`"}], ",", 
    RowBox[{"6", "\[Rule]", "0.9573901464713716`"}], ",", 
    RowBox[{"7", "\[Rule]", "0.9560585885486018`"}], ",", 
    RowBox[{"8", "\[Rule]", "0.96271637816245`"}], ",", 
    RowBox[{"9", "\[Rule]", "0.9613848202396804`"}], ",", 
    RowBox[{"10", "\[Rule]", "0.9587217043941412`"}], ",", 
    RowBox[{"11", "\[Rule]", "0.9587217043941412`"}], ",", 
    RowBox[{"12", "\[Rule]", "0.9587217043941412`"}]}], 
   "\[RightAssociation]"}]}]], "Echo",
 CellChangeTimes->{
  3.734336927055982*^9},ExpressionUUID->"0e17c232-6d38-4462-8e51-\
1cbd7a8408cf"]
}, Open  ]]
}, Open  ]],

Cell["We extract the classifier:", "Text",
 CellChangeTimes->{{3.7343306824026213`*^9, 
  3.734330686737413*^9}},ExpressionUUID->"15952bb5-6670-409a-8aed-\
38a7c94adff0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf1", "=", 
  RowBox[{
  "res1", "\[DoubleLongRightArrow]", "ClConTakeClassifier"}]}]], "Input",
 CellChangeTimes->{{3.7343208721713552`*^9, 3.7343208723744593`*^9}, 
   3.7343209513098173`*^9, 3.734330673509446*^9, {3.7343368686382027`*^9, 
   3.7343368697480927`*^9}},ExpressionUUID->"f0aae38f-985c-4756-bfb8-\
f3feb428fc78"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {15., {0., 15.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.45], 
                 PointSize[0.13], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], {
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
               True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
               Ticks -> {None, None}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "12", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{",", "\",\"", 
                    RowBox[{"-", "1"}], "1"}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {15., {0., 15.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.45], 
                 PointSize[0.13], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], {
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
               True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
               Ticks -> {None, None}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "12", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{",", "\",\"", 
                    RowBox[{"-", "1"}], "1"}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["2999", "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.734320989772087*^9, {3.7343306895848846`*^9, 3.734330707751045*^9}, 
   3.734336778839554*^9, 
   3.734336871679737*^9},ExpressionUUID->"720711f5-3c8d-46cc-bc19-\
b20b5fd0e5d8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\


3.2 Separation before transformation (study phase)\
\>", "Subsection",
 CellChangeTimes->{{3.733718482588896*^9, 3.733718488722146*^9}, {
   3.7337369939252768`*^9, 3.733737008949727*^9}, {3.734276798674171*^9, 
   3.734276805445809*^9}, {3.734320406278771*^9, 3.734320406488247*^9}, {
   3.734329330366357*^9, 3.734329356455125*^9}, 
   3.734329463721977*^9},ExpressionUUID->"8f8ef512-f9e4-4b20-8119-\
8a4818535de6"],

Cell["\<\
In this section let\[CloseCurlyQuote]s split the data before transformation \
and try more with SVD. We will utilize the SVD in two study ways: in the \
first study we extract the most decisive vectors and filter the training set \
based on them (Section 3.2.1). in the second study we go with predefined \
dimension space, and use validation data for classification pipeline (Section \
3.2.2). \
\>", "Text",
 CellChangeTimes->{{3.734318707742384*^9, 3.734318727935305*^9}, {
  3.734319089086729*^9, 3.7343191126955423`*^9}, {3.734330805047697*^9, 
  3.7343309936713953`*^9}},ExpressionUUID->"db12cb37-5cb8-43d1-a306-\
14d23ca61bea"],

Cell[CellGroupData[{

Cell["3.2.1 Most significant vectors", "Subsubsection",
 CellChangeTimes->{{3.7343310154495277`*^9, 
  3.734331049359787*^9}},ExpressionUUID->"72c79ab9-1fa8-41c5-84df-\
e4b4f3e4b9ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mlData", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{"Rule", ",", 
     RowBox[{"{", 
      RowBox[{"Training", ",", 
       RowBox[{"Tlabels", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.733753395740313*^9},ExpressionUUID->"4316ad0f-f702-4001-8cbc-\
5d86914f2d7e"],

Cell["Separating the data at 0.75:", "Text",
 CellChangeTimes->{{3.734331067713517*^9, 
  3.734331076849495*^9}},ExpressionUUID->"61c4c964-36e1-4a02-a2a5-\
0f0354d2e289"],

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "123", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainingData", ",", "testData"}], "}"}], "=", 
   RowBox[{"TakeDrop", "[", 
    RowBox[{
     RowBox[{"RandomSample", "[", "mlData", "]"}], ",", 
     RowBox[{"Floor", "[", 
      RowBox[{"0.75", "*", 
       RowBox[{"Length", "[", "mlData", "]"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.733718468832881*^9, 3.733718536972951*^9}, {
  3.73373691890443*^9, 3.733736922570324*^9}, {3.734280067227812*^9, 
  3.734280072230669*^9}, {3.734281303851883*^9, 3.734281306786034*^9}, {
  3.7342825271293583`*^9, 
  3.734282534212789*^9}},ExpressionUUID->"2e17acea-ed49-4c12-bcbe-\
ff6b82b2bfc9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"meanRow", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{"trainingData", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RecordsSummary", "[", "meanRow", "]"}]}], "Input",
 CellChangeTimes->{{3.734240846851205*^9, 
  3.734240888266652*^9}},ExpressionUUID->"58fc9856-e170-4b41-a4d0-\
77e3ad38414a"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[GridBox[{
     {
      StyleBox["\<\"1 column 1\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0, 0, 1],
       FrontFaceColor->RGBColor[0, 0, 1],
       BackFaceColor->RGBColor[0, 0, 1],
       GraphicsColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1]]},
     {
      TagBox[GridBox[{
         {"\<\"Min\"\>", 
          RowBox[{"-", "1131.9855508534847`"}]},
         {"\<\"1st Qu\"\>", "8.226312944523464`"},
         {"\<\"Median\"\>", "14.683411806543381`"},
         {"\<\"3rd Qu\"\>", "20.998328769559063`"},
         {"\<\"Mean\"\>", "25.02045497066145`"},
         {"\<\"Max\"\>", "83377.85017852068`"}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], "}"}]], "Output",
 CellChangeTimes->{3.734274419843307*^9, 3.7342801896838408`*^9, 
  3.734280900917688*^9, 3.734281312287528*^9, 3.734282540069977*^9, 
  3.734318816895871*^9, 3.734320462008243*^9, 3.734333569613264*^9, 
  3.734337085722384*^9},ExpressionUUID->"ded16141-cdee-4f05-b504-\
287e16fc9141"]
}, Open  ]],

Cell["apply SVD:", "Text",
 CellChangeTimes->{{3.73433135077591*^9, 
  3.7343313533494787`*^9}},ExpressionUUID->"a2e6b233-95fd-4b6f-b53c-\
66ebb1f2bed0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"svdRes", "=", 
   RowBox[{"SingularValueDecomposition", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "-", "meanRow"}], "&"}], ",", 
       RowBox[{"trainingData", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
     "120"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.733718558849443*^9, 3.73371858024052*^9}, {
   3.7337372137612133`*^9, 3.7337372525265617`*^9}, {3.734239167075797*^9, 
   3.734239167249243*^9}, {3.7342392642228613`*^9, 3.734239264735072*^9}, {
   3.7342407893609953`*^9, 3.734240857708694*^9}, 3.734331100509256*^9, 
   3.734331307713325*^9},ExpressionUUID->"63c5100e-8116-447d-845c-\
357d8a9fe854"],

Cell["Let\[CloseCurlyQuote]s see the most significant ones on a plot:", "Text",
 CellChangeTimes->{{3.7343314718652277`*^9, 
  3.73433148163199*^9}},ExpressionUUID->"3e0279a5-fccc-4473-9d87-\
8cf0228409b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"Diagonal", "[", 
    RowBox[{"svdRes", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
    "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.734239118147094*^9, 3.734239180839075*^9}, {
  3.7342392228888283`*^9, 3.734239223375614*^9}, {3.734239287263339*^9, 
  3.734239294901698*^9}},ExpressionUUID->"33d31e0b-86a6-4f14-a657-\
f59e5b1583f6"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw9yw1UjXcAx/Gn6GWKhbzsjq1aYRhK6nYlP7fSDbm3bvetbqm2ZpWzssa1
OOuJYxyGaQw1R7WiGcaGQ7Z5kDk6x0sbakuODG3pWslLS9zZWb/nOed/nvP5
f/8/34zchExnQRCWvTj//f//Omaqjxa8u957CvouEHq7Ja98+6Q+u8P9l+3r
Sk20F66m+T/1nEh741JY8NoTIyf0eSQOKrBVpxjb51E46PLWna9foX2gX9o9
OFe2Hyxrw69tGkH7w+1eXkXocHoMMrQnq1cOo8ehpl23Sy17PP7sORoQ7U1P
hLnDY3PXUHoStAcdJsiegoVe3YdSh9CBcKR95Fs+mA5C1rKYI2Ve9FQELRsX
ppIdjHOpRvvMl+lpUKd3x9cPokPQVJjqCJIdimmPfKLGylaiaF1c4WcD6TB8
mn7kVoRsFXxjox9f9aSnY0u9/X6R7HBc9CrQj5E9AxXKluwhsiNg09ZL5R70
TNxU5A26PoAGdvVkajW0CDRtza7seYl9FuJ6Wzek0eIsXMoNb4qSuxqHi90t
b7uzq3FqRZbSRAuR2HLTdcUNN/ZI9N78qyuWFqJQHaML3ubKHoVF198rttFC
NPYG5ns/dWGPxtngtZ7f0sJslKHh7Kn+7LNhX71w5z5aiEFKycXZ8+UeA7VC
1Xu+H7sG4VHVw+JoUYO7q51iHzizx+LXrg9899BiLFocFaP95D4HkXPa7jc5
sc/B8RHd+ytpYS4Mt/x1r8p9LhoHPvB7X2Cfh7tZyzUaWpyH4vQL8JB7HF6r
bO23xDGmr8fB1tEeoqSF+TC0hRxrfs4+H4HHclp/ogUtpi+u2NDwjF2Lo7b0
P3bTgg7lzf0+T6KhQ1tnTufdXr7XoXnBDlcbLenwZkRc7lxaiMfKJ2VLAmnE
o/3RZkX3U+7jMXb8O+odtBQP44XaO560kICTFdt0S3u4T0BmVatjAC0mYFWB
0un3f7hPwILgbJWNFvQ45xEUoKKhR8kWvzUN3dzr4fBZHFlNS3qEWu0B42gh
EbVnftCPopGIQ1ltjXVPuE9E3m8XnfNpKRHrw96wtT7m3gDV7vhpe2gYEDLr
GxclLRqw0f9e1WRaMsClbpe65RH3RiguNypX0zDCnBGkcqNFI8ouhT3rfMi9
EZVVZ14304IJ2zZFbGzu4t6E25e1Z3fSogmBz6L1Wloy4ca5Tx4OpQUzxLSE
2tIH3Jtx4MpxBWjRjILn35XaO7k344TrwAlf0YIFCufaVQtpWHAMQUvOd3Bv
QeG+H5MP0ZIFS6vqrEW0kIQPLb7J42kkYU1Ofe/Pf3OfhMRsdaaBlpLgpKnK
UdBCMmrq3D4+fZ/7ZPjWbBqSTovJkMrXr9DTUjIiljdMttu5t2JGZknX9zSs
OHx7qjWDFq3w2VvTfwYtWWF0Df7ySjv3KbimDizeQCMFZ74YvchIiyk4cKKw
MYCWUqBBaf7pe9ynIn//gOElL/wvzvD82A==
      "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 11.124830691785375`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Automatic, Automatic}}, {{{{11.512925464970229`, 
        FormBox[
         TemplateBox[{"\[Times]", "\"\[Times]\"", "1", 
           
           TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
            SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
        0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         TemplateBox[{"\[Times]", "\"\[Times]\"", "5", 
           
           TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
            SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
        0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         TemplateBox[{"\[Times]", "\"\[Times]\"", "1", 
           
           TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> 
            SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
        0.}, {
         AbsoluteThickness[0.1]}}, {15.424948470398375`, 
        FormBox[
         TemplateBox[{"\[Times]", "\"\[Times]\"", "5", 
           
           TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> 
            SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
        0.}, {
         AbsoluteThickness[0.1]}}, {16.11809565095832, 
        FormBox[
         TemplateBox[{"\[Times]", "\"\[Times]\"", "1", 
           
           TemplateBox[{"10", "7"}, "Superscript", SyntaxForm -> 
            SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], {0.01, 
        0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {14.508657738524219`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {14.914122846632385`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {15.201804919084164`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {15.60727002719233, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {15.761420707019587`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {15.89495209964411, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {16.012735135300492`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {16.811242831518264`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {17.216707939626428`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {17.50439001207821, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {17.72753356339242, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {17.822843743196746`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {17.909855120186375`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {17.98989782785991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}}, {{11.512925464970229`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.01, 
        0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.01, 
        0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.01, 
        0.}, {
         AbsoluteThickness[0.1]}}, {15.424948470398375`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.01, 
        0.}, {
         AbsoluteThickness[0.1]}}, {16.11809565095832, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.01, 
        0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {14.508657738524219`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {14.914122846632385`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {15.201804919084164`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {15.60727002719233, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {15.761420707019587`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {15.89495209964411, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {16.012735135300492`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {16.811242831518264`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {17.216707939626428`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {17.50439001207821, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {17.72753356339242, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {17.822843743196746`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {17.909855120186375`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}, {17.98989782785991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
        0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
  GridLines->FrontEndValueCache[{Automatic, 
     Charting`ScaledTickValues[{Log, Exp}]}, {
    Automatic, {{11.512925464970229`, 
       Directive[
        AbsoluteThickness[0.1]]}, {13.122363377404328`, 
       Directive[
        AbsoluteThickness[0.1]]}, {13.815510557964274`, 
       Directive[
        AbsoluteThickness[0.1]]}, {15.424948470398375`, 
       Directive[
        AbsoluteThickness[0.1]]}, {16.11809565095832, 
       Directive[
        AbsoluteThickness[0.1]]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 120.}, {11.203488174136789`, 16.080252079924556`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{3.734282006175625*^9, 3.73428256385651*^9, 
  3.7343204920885887`*^9, 3.734331370738496*^9, 3.73433359094242*^9, 
  3.734337102127812*^9},ExpressionUUID->"ddc4c9d1-b33c-46f8-ae3c-\
6a34799a2742"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RecordsSummary", "[", 
  RowBox[{"svdRes", "\[LeftDoubleBracket]", 
   RowBox[{"3", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7342410527434*^9, 3.734241059295012*^9}, {
  3.734281970381605*^9, 
  3.7342819747914963`*^9}},ExpressionUUID->"239d000f-61df-46b4-98f0-\
b128f5bafc80"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[GridBox[{
     {
      StyleBox["\<\"1 column 1\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0, 0, 1],
       FrontFaceColor->RGBColor[0, 0, 1],
       BackFaceColor->RGBColor[0, 0, 1],
       GraphicsColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1]]},
     {
      TagBox[GridBox[{
         {"\<\"Min\"\>", 
          RowBox[{"-", "0.00035458650015181064`"}]},
         {"\<\"1st Qu\"\>", 
          RowBox[{"-", "0.00003166479294582425`"}]},
         {"\<\"Median\"\>", "4.1153465868950964`*^-7"},
         {"\<\"3rd Qu\"\>", "0.00003163017350632566`"},
         {"\<\"Mean\"\>", "0.0001238077735277908`"},
         {"\<\"Max\"\>", "0.969047799703221`"}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], "}"}]], "Output",
 CellChangeTimes->{3.734274438972941*^9, 3.734280190441683*^9, 
  3.734280901403574*^9, 3.734281312707244*^9, 3.7342820089883213`*^9, 
  3.73428256419665*^9, 3.7343189371558943`*^9, 3.7343205002857428`*^9, 
  3.734331382295124*^9, 3.734333594826592*^9, 
  3.734337102262875*^9},ExpressionUUID->"cb3bed6c-2584-4bd2-96d8-\
5eab0dd2671a"]
}, Open  ]],

Cell["We can get the positions of most representative vectors: ", "Text",
 CellChangeTimes->{{3.7343189859054937`*^9, 
  3.7343190108354692`*^9}},ExpressionUUID->"bc300e42-a1ba-4326-93fb-\
d033642b59ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"svdRes", "\[LeftDoubleBracket]", 
     RowBox[{"3", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"PointSize", "[", "0.01", "]"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.734240955039876*^9, 3.7342409722498817`*^9}, {
   3.734241026700378*^9, 3.734241035002705*^9}, {3.734241204810989*^9, 
   3.734241223211914*^9}, {3.7342820125338507`*^9, 3.7342820164164352`*^9}, 
   3.734331193990582*^9},ExpressionUUID->"280cefba-50a6-418e-8103-\
8a3d1e9a8b40"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw8fHlcjO/3fiUKSQghRJYsUSShciGEEJJSaBdKU9qlpn2qqaZZaqYsgyQk
RUhECCGVPQqhN9mTEIXv/F6fc//84/X0zHMvZ7nOdc69jHLzW+2poqSkpDVe
Sen//f+/f61zf0w0Rvixl5b0B+Q6cGqHrCmhZ3UsPfl3yu7GwLn/e9bCgB3t
8x7HbKFnbTgYVHt7b+LTsw5C1y5L2LH2M32vC4foP+4az9/Qsx7CNburxG1o
o+fRsJ3bbeXFQx30PAbTDgdEd+hoUXvjMPd5/Lfjr7rTswH2LH/3rLCXKj1P
hMZj/WVlzWr0PBlajikbgzvfUXtTcGv6BeP5Z9n8jKB/9uAr65u69HtjrP2e
ZH/8uhI9T8OE/e0jC4Z8ot9Ph8Cl7LhxqTK9N4Fqw6Y9FrfZfGagR3jP2bXz
tem9KToXvimdtaQbPc+Eq1TfdNyZwfRshr2b3AuMlvSn51mYaB2yYoUSez8b
1zc+fFqx0ICe5+Buw9dlbRe/UX/m4E+5vaVEaQi9t0DEunD7xtnX6L0lQt8l
2WcLvtPzXFyp9DZSW/6DnoGSqpbGkmkq//ueC/Tzujazegib3zyI97pk5ySS
Prjz8ODwXj2XkOf0/XwULh9ywkCJxs+dj/l/bmo/6npF7xdg139nQxIeP6Lv
F6CXtVG3Wa3N9N4KfTW67g1KJP1wrVB9QzN0cA2T/0I8PfgnIsz9K71fiEs3
Vmt+D+tH7xdhyK60t9V9yT64i3BDeVSDSQd7vxgR43l1vH5kX9zF6Fzv2Puu
fW96b42r44//HfGCzd8aUX1E0SP8mH0sQfPBhddd+MPo/RJUTRQv6O73l94v
xdDbs+Iln/vS+6V46rT8TuEwHWp/Gb6PMVN+NIHmy10GUUzGvulKTB82eDWr
dJjGtp70vQ1OWk7z9O92h94vh/RLj3mBEtb+ckhavg1JONGL2l+B9kthsoxr
tdT+Cqz8OkBlwLCx9H4lhnUsGtdhQPLkrkRSoV3cpwDqT8kW5VXD7+07SPYN
W9yYNtBj2eNGas8WB7QmL+N/IXlV2EI/bd7iTdeY/lah0nC4ybB57+n7VUi4
5rnBTqZO/a1CSfxH+dO/d//3vmIVHh/U3J8VyfSzGp7Jpi1Xr36g71ejc+ok
q6lNbL6rwbvGP7l+JI2/YjWkRj8e51oyf1kDN6n2tmsuNB+swZP8HkrahWS/
3DWYnTLlPPTJHivWQN0mdunBatK3kh3EZt92OmXQeGGHj4XSRRqbCU+4dmjv
5t7XbDb5S4Udso93mQaGMrxZixFdeZ09T5M/YC1231+6MkTrAclvLXhXTM57
NZN9VqzF6obI6AFtzD7ssXKxQVBc1WP63h7rF2cFHZ/A7NketttHLmtuJn1W
2KPCyCXw2YFDJP91eDjv28WmCj0a/zq0VJusnLmP2fM6lIxbcbPgNut/HTrP
7Xx9fzmzHwcIl0wMVfLWp+8dMKXP03niC69p/A6w+rXr1GQbaq/CAZvtDO9N
n9dF/TuCM++0esUR0gccceTYsHL9YNIn1xFHlxTsqF52meTniMrpUbOH33pB
36/H6E9VZr9eEz5iPR4csu4/J24CjX89Ho4avHjCVLKvivWIkujWDWlj+OcE
4wftU/xye9D3TuAvKsq4Zj+IvneCwa3Sq1m1p+h7J4TnPv+xPaqCvnfGoL1D
v205Ooa+d8Y20S6TXnuofa4zPFZnON18c52+d4ZFZrmTNIzFlw3otsK3PieT
/Bkb4KS1tfy76Q36fgP27B240EGV2c8GPJZwbun6vKX+N8JYz95ie3Qf6n8j
Tq8MWtX/EsUP7kYED1z+WLqJ7LNiI4qkW3gGB//Q95ugludYfGLGQPp+E9wK
3e+4ZjD734RVJ99suyZvp/434b7W3Uk6HaNo/C7omph9aW/Zzf+913PBhwLN
1oXrSd9wQVbHsJK239SfiwtalQ6PczFoofm5QG/UsmmW2vR7uQv86hePenSJ
8L7CBW/NlG1SUmk8TS4oi57cy+bzPRq/K6w1BRb12vRezxXSt87NZWOvkjxd
cfl41CDX8nH/e+/iik2/Uh4qPyN757riDmfsuU0JZD9yV4QNWH28jsvwwhX6
N3IXSg78+l97Ta5QdrTQtGz5R/27YbvZ7HzPfJK3nhviRkUahF8lvIcbxg46
33/oZZK/ixuqLNpzBiuxeOiGsMRbhmWBNB65G4wWG5V/aqL4W+GGg5nD1cPn
EL42uWHa8yt7R5UwvuMOFStL8y5d8k89d0zrdvFiC7+J5u+OsbX/DK6Wj6b+
3fEhbbKP/mMWD92x/Olel41WpB+5O57VOz22UBtB83eH/4JD2YeMCR+b3GHT
42VY4zaSp5IHXvycskDiRfLT88DZZ1rSJ14DaP4euFzcpcpbzPTvgTUiteMn
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
X6oA/j4/wTs2DP2TNAE0rxxrq/AC7Xc6oV/sgmnudD5tJtHnp933A57g85gC
KP/x3zuFZyhfLIIP99rbtxUifTgCCB649cmtFO0NTwAvnFZf/auI9lAggKhr
+qcT6XxEkQD2aP0OnSvDzxIBeCyZtH9IGOKtTADbCp5myl9AvMwm8jsX2ra+
Q/7lEH00KOfMsclF+y+AOqO+7f0OM//3/RUBTH/ybMuWDFrPLoBrx7wd87fh
+gsEUBUkmzdQhvmgG2R/taeejbqE+y8k/29MHUi+j/5YEfn933f7y+xwf8UC
6GFfvZbmhf5CiQCeP1Yq7Qmk9p/I96dRi51SaT2cAPIWKH2/8grzo+UCOH5w
6fy8f7j/SoJfm8RqXUfxPvNDAZg48ODAOeRPlQDGuFcQ9x31t1oAB3VhZLQH
jf8F0GeXlf1LC/XzuQC6a9Z9cjyK8UkN4dfbDPtdxjT+J+vbu6LEmU/noQkg
XPPm0UXX8Xy3ntDXuPmHomLc/z43CKBo/c4Dj7uwn2SjAGLK4wKaqT/aJIC4
O6tNOt6ifDULoLdH4XSpPdrrFqKvKu0wl/bLahPAx+Ib5/t1kb/tRP8fb2mZ
9oHG/wKwSX7u3pWEeN5J5Kv93KtGZ9SnLoLnlmNmlNmh/H0TQMpu35b/3uL/
fwjA7N7pSUx15F+3AMpy9xuGDkN69grgjp7y7A4a7/cJQEk2/GnGM5y3+lsA
XOHKp960P/QAwbuAuGH3TqA/NCiA7OX7i6xi0R7LCeHLGt8iYQTyX14IV8Wa
MacXoL+pKISnw1Q1ZNdRvpWEEGa7LkpUj/KmLISIMxcPPLuB9khFCJtvf5es
LUT7oioEATPk8Fd9jFfVhLA9/Mw4oxA6X14IudM80kYOR7zQFALXymvUqnx8
n5YQRj/9lP6zAf1zbSGklXsmzAxHf0tHCHqdudtumSJ9dIVgY3ZE5dsAxpN6
QuguTrG28kN50hdCh+GduXLj0X4bCOFZxsyZXZcRfw2F4PJj4/NnJrgeI7Jf
lyFjoRX9HRMhfJ0Zvst8CNpXUyHMsLKTm+CB+zMj9DxnuSAumvYrEcKG5THC
87VITwshhNrw/U7fxXyplRD+HZ14+/xZ5JeNEH7c0mRnPkH5sBWCryhD6dZE
9AfshLCy3ex+OT1PsBdCSPfn3YquKC+zhZCfnLdz5m7MBzsIoXF5av72F4i/
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
rdaaqDfO0/Dp4gmLy2KsvxJpyDK2N1v0G+cHXqDh8zsbm4fLkd8u0rBL5G/n
cxD9kUTiYUPJqLYYbM8lgufs3W4r1yHeLhP8v5U0qtqD9k+mQcfyZfjmDeif
FJJfFExcu9Ix3lPJ9SV3CYkK7rxz0v7s9n0LH+L/rxJ94ht/Mm0q+v8a0U+D
MwZ3L0Y+TCP923o1TCYN9Uc6DUcVkh4XcuezX6chryHHLrWf2x+d6LvD4CJo
xvr8Bg2JuxICR25CfGcSvkmfbBJli99/bhK8DPVI/eD2p7xFw9lBq5nLhGjf
2zRImdutcuXml2UR/kgwedI7iPzAo0FljaLjvibUb3zCV+2NGo2t+D4BDT3L
XDYY7UJ7CWl4035C2Dkc+UdE8ouq3atzEpifKBoqd+6arx6G/qNpqP2dsfs9
N37JED20rsFR9w+Ol7LkemKcfWMV6mExDbGL1JKFRRif2YRPzsZn7mnB9Rs5
hD/Mjm5OHo/6L5foIdCvM7TD/JtHw1z/4y8PxaH/82nocDpcs1ge23+H9L+/
vfVuC+rhAvI+M9nf48dh/BfScGrO9iUqozD/F9FgkVP2RWIYtqeYBq3F9taf
tLC+vUvyndeVG1NKufNfib/iCkwbuf1nSmg48GFL9AYfnP9USgP/wl25oyo4
nlJGw/P1zha2xcgv5TSsfTPj3pNujMf7RI+kKxbtyUJ8V9Aw5nXHfb8UbF8l
0bfHTVdu4L7/VtHgb7pIxj8R83M1wXvwVaelQlyf8oDkr7eKqpVhiO+HRI++
HhxY5YT9r6Hhg6XxFeO9iN9HRE/Yf1ygOwbxWEvDOGe/54+j8XzSxwQPWkW+
a7+ifZ/QINo6mCjbjvFQR8NgQOKhJ/VYDz0l+sX0y/XhQTg+Uk/wsWO/6SBX
Xzyjoe350kO5iYiP5+T9IS32Z55g/mqgobTDcPxJOcRrI9HvyY1vLp9CPmsi
+q4wYkipEtvzggb5yLVKWkV4PvBLoifb8niLahAvzYS/jOU8FnPrUVrI81qk
/Vqj8P5XJF//651ZWsrNdyPtTWyV13ZBfL+h4U9Uw9c3Mjh++JbUBxUjth07
g/hrJfnbpEdzaTva7x0N1Y9mGUsw2P/3NCR0j4p9Xor9baMhd8O4sA+LkX/b
SX6rPF2xex+3Xp7g9WdXrNNs1Bcfafi6/OztEk3ESwcND3f1Nc1QwfjopGF9
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
WjpfXEa7kkMyll6Q1v8z/BkPu/ZmOPC6R0aHb75dVnUT/LlXRuEqFzaGS+ed
xspoad6YCeek/RL3Mf3xtoXB3O/IV3GMDyvTFSnPgOd45g//779evAHeExi/
qzwane8H/tgvo+o2v3pZRsE+B2S0rd/ETbIAxNtBxncO54PHfcLzEmWkevph
frtktOeQjCLFh1Zl1tJ5ZjIqW3ywg4UK/HOY6ac7u1t1NkJ7k2XUzuPMnz/p
wEuKjPaMSf6Tswp6I5X5L3nbpzIF9Foa47s2T/Q65EEfHfm//+tT3kn7sR9l
+SZi363QBrz/mIwmZEWP8jOFfY+z/DxENqKkK+qLdBbfGwef7uKB/JYho0Kt
btE6p4HHTKYPtGddOPMGeuiEjB4GjawNUgX+TzJ91qvrm2NPMR+QJaOBj8Kq
i8dI+6mx9/0bWnijFeL1FPOPd9/ajtJ89mkZHbg39JJ3Ffj1jIzuf3P/WrIG
+eQsi9fLKu/aTEV+OiejqndnZMN/wb/nWT5WVgRvtYU9c5j9/W6opX5F+3Jl
dCG4k9ZYF+ifCzLSjZ39wmsM6m2ZjMbdT9owcB34Qi6jfiVjHrRwxngkJ6OR
l0Z82pCL+OBltNPZ61sH6bxCgdnv6I1iaz3YUyGj3JlbtOqXQh+LLL9ZfN/S
exP4Rcme51z0Ydtz/P6ijEI19W9FrIbeucT8FepW8KcB84N5Mhr7hR9+aj/0
0mUZbV1Yo9Ni7fH/7l+RUfKxBw//SPr2qozMmg2mNErfD15j8WacWBF/Ge+/
zvjO2Z6vUsP86Q3mT+8rdYMCMP6Yz/g1evH3KHXY6ybDn0ZOwPZw1GO3GP8P
t9uX0hLzAbdZPrHfHfVzOPB1R0aHzgxY9tUL/ihg8RdXlXLzY+B/9+/KSO/5
v0C3Mvi3UEbnnxYvfboQeL7H2hdQTiPsEI9FMnJ2vhX6IBH1+X0Z5YvbAwt3
Aa/FMvrzy1bVNQh89IDVD9kLdvkeBX4fyqh4of8+t7Pgs0cMjzprDPx98b7H
TG/MP2l+Zzn0TQnD4yQ395cHpfNqGD9Mnr87eDj0ZSnjj5tek/5GIp6fMnt5
XDRJ+Lnnv98/Y/l8zOb7ExIQz8+ZHl1m+G+rAL55IaOi/u/fdY9DPnnJ8svL
ttc6zgG+Xsnoa7Vv9vblsP9rZr/z++RaM8ej/mf13ZeLi6mNVP/LaIq9rHeY
AH+/lVHULp3a7frAwzumd4+XFg3fAXuUs+fneKk80AY/v2d6P2JHp4GjgL8P
Mur620uMmYf5vApmPzXZmUUnYJ9KGf3VrH842RH66CPTK8W2AzW7pKP+l1EX
n+KC43sQ/9UyaqkaNCP2FOL1E8OjGwWl56N/n1l73pg+H98C+eULq1eWeFic
UcIeX1l9WnMjVTkB8fiNtXeQ+uHIZOwXUcPypf+vGeJ3+KOWxX8rMSfFEPxX
x9p/eO6KzBfAy3cZvSxPcfC6L+3Pz9oXP7qxcx3iuZ7VY8rFGkMfYb3CT6YP
Z9RoqvLo/y8ZZRbYVfQMBH81yGhxx3txUXHA328Wz1q79NY8Rn8aWb5dbZi5
bCXw+4fxa1r6zBHXMX7+l9VHM0N6ZJYhfppk5LTvn5ueDPmmmen9Kz2mtT2C
ePnH8vstb7VPu6GvVeTUMuiHftoK2KuFnHYaTWxcKu1/2VJOapunxnWsRDy1
ktMiTcXDLba431pOoSVll8vzoSfayGmvY+D+qe0xHqsqpzWHHTxe2aD9beU0
8J9G0tdcxFM7OS2L/L1SXIn+qMnpQ4bllAe7offay8lb82eY7n3gqYOcOhlW
jcj2wH7IHeU0IWFCpss9jMd0klP9mtGtx72V6n85xU0vMn/3DPzXRU4/g9/4
55sD313l1G7a7bxD2ljv201OXRfYXLz5EvZQl5OF2hnbudMwf9VdTpe15cfG
vUN7e8gpP8ir4dxpPE9DzuoP98nf1knnFcuJDiVs2SN9j68pp9Z1HmW90+EP
LTl9uZSZmz4I+URbTmX50QZ++pGo/+WUcci1/Ohq9EdXTgnK5nXNBVhvqyen
ml3zzBcegT7qxa4rZv1ecRp6urecniyfsUdtKOJXX05NSx7+Lnwqrf9n9rFe
Ulc9H/zeh/l3Aiev0Eb/+8rpc/+ysJyXqHf6yamVpd/cj2cQv/3ltPrAUfXY
LOjNAXLy6Vax/7Sk/w3lZOlil2BTAv8ZyWlhnwe1FRXS+n85jZ02/7yqBtpj
IiedxOgly+vAbwOZPzUnLkjURP8HMbwNO1pnGYL+mjL/V/U3Oj0Q62vM5NRj
ywSNF07SeQsMPyrdbN5J+2UNkdPDd1oR3eehXjSXU++TN+5WtAb/Wchpfeid
aa8lfThUTpMmjC3vF4/3WcrpxIqEZ8PvAS/DWH8O/qp70xrjFVZymtd9T4dF
Auq14cw+I1bN/euEesVaThWDBO1IPYzn2cjpXv2bCuNRiN8RzH5qlgZXdtxH
/S+nS91+x/WNhn9sGT6mmo7ns6GXR8nJLqbDxl+Z8MdoOXnuiOhq/hPxZien
pG25ehv/4L498+cyrdI7bTBeSHJa6bVB98oH+M9BTtU6j0csvYr/O8opIKNK
/+Nx1FNj5HTW7YfiyyHM149l8eTlVqZbDz5wklO/SbWm04+ifePkVJnkqjv6
Gp4/nvHLl3L9lU/x/wly2m9QEf3PHPE5UU5OR9XEiaro7yQ5uW6ovMYNxvz6
ZDkZOgb+dvuM902RU6Gqv8NsPeBrqpyKsqx+2Tij3nGW05YOqjFPQhGPLnLy
a2eyuX/qyf/uu8ppWGr9kW8bEb9ucpqz/eKmot6oB93lNDH26U1TEfXGNPb8
jOS/3DPoew+GJ98eboNfoL6Yzu4nxM6xjoUemiGnC+3N3i8iPH8mw2t1fQ/v
v8hfnnLSDyp46/tS2v9PTsbOjRc9D0C/zZJTuKGVn0nivv+uZ8tpdMzR80lF
0v5/chJP/Ljl/xr+9Wb/XyfTr9wAPM+V0/nd2uMGjJXm/+WUM/pZtWcy7Osj
p5MXuvrNy8T4qS/Dj/OWN1+TrP677yenp4t3JpzloD/my8kjqt9gWxfkS3/G
jwmV3reGIZ4XsHjXn/TDYxT2D1jI2uM5KGxoLvaLWiQnR7OV6TMnYzxpsZym
O+cos1qg/0uYfwve3zdrifhbKqfUpqHNvUqhn5bJaUpM3rJ2JdL3/3I6ZnLd
v+M88NtyOa2NHbqnkz/wHcjav3KkQWkp7LVCTmZ6X6a3kcYXVsrp26xjLZbG
QW+uktPzuXXmv0dI+//JqSRihWWhhO8gOdWZnfNZUY3x4zUsn33LmdHfCc9f
y/j+nUWvnEHw1zo5ZW5LSupkIO3/J6fhjYUqWhOA9/Wsfcv2htoPQX7dwPx1
tF67biPWC4XIadOkDfZLd8JfG+UkuMcmB2iiv6Hs+rnvjhUfkT82sfxg4lrR
pVD6/l9O3TZMszosnae9WU5bq2d5OrVCvITLab7h2KnGDvDXFjk5iwd7HLoF
/bJVTqrP773d0QA+2Mb4qV33+kndgd8IOQ2YeLZlZCCut7P4HnPia9EUaf8/
OY38tMjQ/jj8t4PxidUL8w4u6O9OOZk6Leu79wDOw9wlpzF30qK/nwaedrP+
DWxRa3dfWv/P8Ft+5kutK/AXzfK3cfNt29vAdwzDo11A/sDemM/dw/jserPF
gFXQf3vlFNvqedupH9H/WDmtWJRnsiJcmv9n8WW9b1shIX/FMX7d6qm+sS/e
F8/48mKBf6eveF4C89fv8OrxkzD+u5/xRXrOpX7vgd8DcuqV4ys2VUHPHJRT
iNGj1VZngL9EOZksjhup+RX575Ccrq5VDrs8CXyZJKeh864pQjng/bCcVvlO
ji9XoP5LlpNe6+Ht9yUhP6bI6dbCeXOOWaJ/qXIavLRtwoqW0v5/rD+ymI0H
poMPj8jJKsFw4oRQ4Psoy0878gO+zEN7jzF/1HduaZyN5x+XU5d06vN0Bvgm
nf2/U0BZbBjwmCEn+w8eWZtSwX+ZcmoT9DSajwMeTzD8NMz91q0zxodPyunm
B+9bm35Bb2TJydYv3lVLFfybLaff69OMTv6EHjjF8PvXMXa4t3S+KtMjvUf9
6SaNB51h/++5qJ1C2j/7LOPfU803e0YDD+fkNNdoW8TJb8jP5+XUs6RRT5DW
e+YwPez8sf6p9D1mLovvX2/TQrvAnxdYPrXvPzSuG/hCJqdT0Z3fxx+B3pbL
yTzs3a2CSryfY/nBrm5S56+Yj+PlZLRH64Qg1W+CnBZPVSlf0176/p/pwfV9
OnAe4AeRtX/zmAkt6lAvKBm/rJod+asY36deZPy3RqG38jj05SU5rdvdl7b+
w3hInpwa/Rce2FIPf15mejDywqFfY/D93RWmp14vWrXWDfXGVdZ//ZvvVozF
+67Jyd3hQk52e8Tjddb+1Tdz+v2W6n85PdaYcztSC/jKZ/x4vOPGGn3w+U3m
v1c+zyobMR56S0773kSZ5MZgPeVtOXX+56j+QdrP/o6cXhmumGXkBb1ZIKfZ
gQu/xq8Ff9xlePnZ+sj6LGl/eTm9e7/6+4sniP97TJ/ceK+x/Kh03gyLt317
6sxm4P33Wf3QeDlPX5p/LWZ4fd87s7cN4v0Ba7/WhB4/umL+8qGcftzdOzH8
GvT0I8ZXazxaa7ogvh7LSeNZZ2eL6dx/1yUsn07gP+zRR3w/kdO2V+s/P3GR
1v/LKeXPffXvnaT9/+TUrHPPZV4I8uszxqe/bthvm4z+PGf581Nl6bdi1L8v
mL22HBdCp2K8/yXT78N+HogPkNb/s/e3Piz/pAb8vpbTIQ+z5BOzML72hulR
s1dT2l3EerQyOWVt7upifg72eCunN00rO4/fhfz2jj3P07s84AjaX87ao6pS
V+GH++/lNHmFeZeNp8GHH1g+8Qz7nH0E4x8VLL/2NT9z3Av5qZL5p7p70cQE
+OejnJSNF10ClNB3Vcz+BTbtOgYBj9VyOnLQMz4kFHrxk5ziOztYtNcDH36W
k1uz4+ihYYifL3L6eCLIYbXEh19ZfBcbLnWSzuP7xvBX3nB04lLktxrGB2s/
V8ufAr+1cprR4q3XkHLgs47xTYyxw01p/4nvcnrtdCaj/238/wfTO7MWX04L
Az7r5fTV1E/t+Sb8/ifjRyu7hjntUW/8klNtUtbB6GXS+b1y2mV/Jn+j9H3F
bzldvLWhaWFL4KGR4b3FQh2HcvDPH9b/RvugxolY3/6X2Stju2FMI+ZTmli+
rSt+KC5EvDazes9ySbfd2dBb/1g+6JW/eM1Qaf9/jnaNvjmKywZ/tuAo4ewz
n8llqJ9actTi/st7pkvx/1Ycfcy68kOtO/anaM2R54+I7mW3gJ82HB0dmbgj
OQTxrMpR3eHio/usMV/SlqPJR86sEHWRT9txlDtwZvfKJvClGkfBoUKbSE46
T4j93ny/h+VWaf8/jgaS3lDvOtzvyFGN3YUxfj+QDzpxNOvyiJBCab/OzhyN
HZaevk8H9VUXjvQWmk3MlOZfurL+7ah29TkM+3fjqEF339MOk6T6n73fokxd
/y34sztHw3JKI4+nYT6pB0crfM4UGbTB/zU4uj04cvLDV4iXnhyd+Tjni+UT
af0/R51/mSV+vIN6QYujOc+yzuhdQHu0OWqOityxcDjwrcOuF3vUdboCf+py
dO9szjixFPyix9HIVzs3azUg//TiaOntnfzcIPy+N0cXdINaVa+EP/U5evBl
Spa/GsZfDDgKWPd22blY6I8+HP316NI+rUI6D4kjQdfT3r4W6237cXQ+pbhG
mYP6qT9HzldntdaV9o8bwJF6asv+730wHmbI7PXcYf6PNtDTRhyt8Z56JeUP
9JIxR3xZmN7FcfCfCUevPbapmuwCvw7kSNO1i3VyHOw5iKMbDi9H/YxHfJhy
lFg+N7jkK8aTzTgyMLvRQj8FenQwR1t8tA2bVqH/QzjK0w4L+VSB/puz/vc+
0O3aQOQrC4561OZfiSLw71CG98i350dcQL6z5MiUG3SnuA79GcZRUNwkV6sZ
6L8VR75rv83XkPA8nKN2e8QD8tLdqP85ert1SLvu9+F/G45WG+2olhH4bgT7
vfVQo/Fu0AcjOZox4EpRzCHp+3+O5vae0mbRael8R44iNkw4oucEfhvNkeGV
zcF73LDfrx1HV2bobC70wv5w9hy1TyxUveqLfEIcld6xm7aiF9rrwNGERNmc
nKvYf8+Ro8YJgRdds6Xv/zmqV3c3URSDv8dy5JpUfnVIA+YvnZj98rv9C7aA
vh/HURtTl9fr9GGv8Ryd/Bz64OZR6fwojp497ddjWXfkw4ksHpKb9A5aIF9P
4igzbkezQyvUc5M5WvBSzU0urR+awuwxKtWoaArwNpWjm3evOMdI66+cmf+s
+mcI1chHLhzdd/lyquI9+MGVI53110vWDYb+dePoRMT2YJ3bqJfcGV5HlK7X
Wg49No2ja2f363pJ5/16cPTEPDFC2wf2m85R4ZIRJ17OgH9msHj6cifZJw3x
OpOjUB/tyIenYT9Pjr6VtL+4tgX+78XRiPGzx31sC708i6NW2RqvvUaA72dz
ZHMw57tZBfhkDkfFW06GDh+H/Re9OSpKj1GvXQf7zWV8dKpUfex9jI/NY3wS
8neSgzH678NRpHG7c04T8DxfjubrmyZtyIX//Ji/dE3vvMtCvM5n/lgfZ/TH
G/7z5+i5hlNjYhX4ZwFHsws8MrLewR8LOZqnjBk/fDb03CKOVplPOWDVCH5d
zOw3NXR89kbUn0s4WnxK7cybN+C/pRw9tO9b0l/aH2gZR/1btSjKvo/fB3Dk
MLBzmX8S8u1yjuRvnM+eLAL/BXL0w8zfPj5X2v+P8eVNFcHjF8aHVrL2W/a1
GPkc+FjFUdT+gSd6dEe9sJr5U7CeNDcG+TWIxdue4/O2xGH8bg2zv8eEG2Gh
wMNa5h+NW27RX5Gf1nEU2G2fdmkw8kcwR9pxje4Pu0rnd3IUHqWnaWsJfG9g
+WRMxZm/BtL3/xx9re/7TN0G/9/IUbZRJ7PetdAboRxZnmkT08cXz9vE0e8K
64FOqVhPGcbs/7smYPU6zKds5sjprbvWndWwbzjDR98N+tPbge+2cGTXcl3v
ymPw/1aO4uLHaYwaBr7dxpH/uj4P7hWgvo/gKLk2xLYmFnjazvLD+QMHHXcB
f5GMf9aFm5yTRf33/x0cxW558y83GHphJ8tHPccWH5Lm33dxFGJwycW+EfGz
m91XM5vkZAz9FMXe32T5oPsNnE8QzeI/+ciCdao47yCGo+hhC65dyUS9tYej
dKeF89Y6QO/uZfj5OXP1xdboXyxHFb/Oba1UBz/t46j1cfM9afGI1zimj/Y2
7+vwCnomnqNjV7M9wvxwncD6P3lmCEnrT/czfjqb537NBPnkAOvPMe3J6YHA
70GOuj558f5lIPRWIvt94dIdFd6w1yGOUof2CO3QAv5NYvkwdtP2FwbS9/+M
r2ammGf7QC8kc7Rt+uKzhinQHymsfeqWJ8afh55NZf5crP3TaBXGT9KYPvBy
cfylBX45wtFmp9fjVp6CXj7KkSwpwWy3AcZDjjF+KCu5a1gE/j/O8sF7Rcvx
EbBfOsvHTn721abg7wwWXwGDzodJ+TqT5edHD6MjeIzvnODIPXK997AO4L+T
HPlo7COf50n/3c9i+Sl5lWJ6Z+iPbJbPslp22pwNvXiKo5jKc6MNpP2pTrN8
/zbb/cI74OkMR8NtP1VM6oHnn2X4M7XOX3YB+DrH0dbaGOM54dL5qyz+g+0s
Z8xBfORwtJKPOdSlSpr/Z/7f1v925Ar8/wJHyrjACR0q4H8Zi6+Rta1TX8F+
co42XVf5kzAWeOM4sr96OF7/pbT/P8PXrc0pqtL3BALTT6tzztpK49MK9v6I
F89kCcCDyJH+7SO687aCb5Wsv97HPNtnYX39RfZ8K67DVmk85hLLJ+SnOqlZ
2v+PI3F3motVGfB0mdmjWi9sqBX237vCkXWnG11GxEBvXeVoj+Om8hRD8Mk1
jg44v+g1aQ36e53l06pM3/ljgPcbLD8cnLG8faa0/x/z91TbAt4ffHGT5Zvd
vONTQ6n+Z3w4hTd+IZ03cJuj6h3vHTYkQQ/dYfx/fXZcrQz+L2B6a61WZpsm
xOddjlxyo1zdNuN5hRwVzPvL9zXG8+4xfWLa+W73ZuSfIo5+vlzjE6VEfrvP
UUnKN/Un1shnxRxNyo28XPQB+vMB4+/+zU23ROjJhxwlWZlp1jxCvf2ItbdA
Nbt5C+qJx4x/E+xcWi5Efilh+aem/HbSLnzP9ITFv+Oxc53ikD9KmX4Y1Ge6
5X3g9ylHOe6L/g19Bb3yjKMOUyJOrTkk7f/P8OzR+1/ZD2n+n12n76//8x31
8ktWT+gnlc1oD/33isXroZYzm1uCL15z1HFPfcEqCQ9vWH8DGi6aJEnn37F6
r9/ete75yM9vObr880mH3dfB7+9Y/n33eZyuJ/RvOXveom6Zaael9f+s/lrc
f29ILOz/geEnplXLZxOhzypYf8t+3F4k8WslR2nBfumDOVx/ZO0Jev87Rhv5
u4rVA2Pq1OvH4341R35OZh1tM4CHTxztLHJvuFCB9nzm6MPzD21vS+fJf2H+
zv/b9cpd+OMr9//xvYqb0v5P3zjS+vY97mQ98FbD8BrWpmyqLcZ3ajlad6FD
L68c+L+OowHls+RjdPD87xyd+lCy51p/+P8Hq399PfutG4d6vp7FS/PIQVu/
wN4/WbwKGnNOKXD/F0enPVLqn9ZifKGBxWOd+qWtMsTbb476hN84qu4Gfm3k
KEMwvTroMPjlD8OTycD3nZdhvOovR0fUbh9d9g/zRU0Mv3Vhr5r0EB/NrL64
c690vTv4+B/TX15/Pc71Qjyo8BTXnGbfQ9pfvQVPU+4Piy4KQX9b8vRwstWj
ZauhZ1rxlDeyZMxT6XzU1jytOzws8qy19P0/Tx9dtHQdg7AfnypPypfaFf2f
QX+25enlyjXrfc7hfe146hp6rPLId/CtGk9+c2x9rDUxPtmep3btfLi6eviz
A09mYtv3VtL6zY48zd7ctu/hVxif6MTTxNaqUQe6QT915ill8tQ9fV/CH114
am+p6NlZD/7oyv7/SGtfzCyp/ufpzYhvM5qfon3qPMXybdfvHoH52+48jTvT
+OvNSmn/f56OHeY7/vJFPGgw+y0amR49Rtr/j6fLxZ87L3CT6n+emh/cWFnZ
D/ykxfq72/i0z1HkN22e/s3WqtvcALzqMPuFx80Z4YZ41OXJ0XurcXc92EOP
J9/TGQ8DtTCe3YunI+uTp67ui/m23jxF1s422GSJ/ujzlPVYlzu2DvFpwNOE
ytNRSQpc9+Fpj8WqwZtq8Py+PF1c/qFVp2eI737M/oM/iRMXYnyxP7PnsdKg
3AfgxwE83S+wKPh+AHrWkKfzsfUaBQL0phFPttpi5BFH1FvGPL3+lObypBD1
rglP9b5PRtmNhn8H8nTt9vdnC2dJ+//z1Gu+e3SEBfKRKU8anzWjDWKg9814
cts0b3lWf8zHD+YpftTmD4blyLdDeDL38n7wawv0oTlPey8KZ0Nq4A8LnnK2
f+2f+gjxOZT5u+Di49W/pO//eWr9N6Z0+Fn0fxhPu/v0WzHtOfjdiqckm54H
xudhfHo4TxmVfibtlqC91swec1JWKYuhv2x4Cvk8uI3aTNhvBE9O8X+Ewirp
+3+e1vaIfXLxOfpvy9O0wztne1+W9v/nacbpjDZZKeDv0Qx/27bojeyFesaO
p9VX/q23q8Tv7XnauObbQ9X3wBPxZJqzNNNvEPjFgaetCfMuT8lCvDjyVDy0
ZOfHNujvGJ5U6JJfcBriayxP78v1vLIeoz9OPKk/L7Sb74j8N47Za3nw0tG2
iIfxPM2z2z+nqRTPm8Dsmzl93J2zaO9EZo9Xz3LcONRfk3j6G1Lfcp4Brifz
ZFnFp5i7on1TeDp6t/fqiSmoP6byVDtxZL32DugdZ4bHBq1WFaNQn7rwJIys
y3rjinrblacttuZNmVNQX7nx1C32b8iXDPjDnaeE7aEdwp2RL6Yxvhj+4ur8
ELzPg6d3l60DhBfIt9N5sjlQvc75GvAwg6fSt9/e63dBe2bydNf7fa2WEvc9
mf1H/Lrk8xz49eJJzWHPUTUefDKLp7J9qcV9mpCvZ/P0YdXK+PeWiNc5LL6N
/2xzc0S+8uap5/aszqdTwcdzeRrbM9Xkn6lU//PU0Lrg6est0Hs+PH0yHNEc
YIf48OVpbqdcp31PoOf8mP+2f3NyspC+/+cpP95gy9VFUv3P7COmnngyFfp/
AU9nehgP3VEJPbuQp1P534137kX+WcTTV1uTxuERGE9czNNmE+f2NpvRniU8
HVjnHjM92Pq/+0t56vhx3xvd76jXl/HUV3idtTgV9g5gfG3t3mauNuy3nKdh
ne6PbamC7ycCeZr+10WY4AP7reCJmn1viRXS/D9PG/a1vO48Evy+iqd76vc7
L4mS5v956jGk8sfuI+DDIMZ/dnnZxVqIlzU8vbq6/vXNVOTbtSyfWYbNDRuM
+FjH+Hhs3mPdqYjnYJ4ML077PU7S8+tZ/lhVZL+oCvpzA08/Fhtt910Me4Sw
fPltxe+gLNhzI0+eWhs3lkj5O5Sn7w+/v7WZDP7cxJPHpA739TZgfC+M2c9i
SoSqdP7EZp4G77Ktij2L9Xnh7Drx3jibYrRnC081a3zveM0HPrfyxAcnmXRe
BL2zjaf1Xnneqx8hHiPY8z2anS/4SPv/8/R0zNWligWIt0iW784Fq/LjEG87
eArNNaidqgD/7GT6wi3KO1H6PnMX699XzyNdi9Gf3TwVLZtitLwN8kUUT/sP
+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
xgb8P0pBYoVV+fK50KvRClqYn1HldAJ4jVHQ4DHrLhdI31vsYXgc8nkq/xn4
38vi+fIiQ1kW+hPL4v1Qm49Zr6T9/1i+1e3R22Qq+h/H/H1pV8iXOFzHs+eV
Dg2+eBn1UYKCHsw+0rXXRPDDfgXd4Hvf2edy+L/fH2C/P1dXqCN9L3OQ4f94
wmh3Ba4TFXRhddlcC2m9+iHW/7Nx6wdvh95MYvkw4Fi7h3/3//f7w0xvjDMf
lsFjvDhZQR5vnolnIjE+kqKgA3/+GrtnwR6pCjoXFL5z3TrwcRqL7xM/B1SL
iNcjzP7q6jdPcojPowrqsiC73qMQ59EdY3ow9mnu304YPzvO7H1/5c79HtAv
6ez5W9rtFzjwRwbTbyZf655nY/wsk/Ht5zjrzAHS/D/LB2s7m/+ZgPg4yeLt
eFUr+x5of5aCvHsfFh72xfxqtoJs5wZFjZf2xz6loBGbllbOaEZ/TrN8M2Jl
UEVPxMsZdh0dbXdCFfF6VkGJI/95516Hf86xePo91C3vsnT+n4JStZaN7aSH
+Y0cBaVdvW9ScxHxmsv0z1pno7EpuL7A9NvArnGGeeBXGXt+Su85f05I9b+C
NM2OGRYmAa8c48vV14ddc0Q+4xX0+OPRtirzMH4iMHupXx1r44XfK5jeNjKP
0TAFP4oK0jMIagw9AbwrGX8ISSq/EqTz/xQ0VqE7881l5ItLCvJLDPT8oY7v
NfIU1CNwaNbA6eCPy8z+em2Lcq0wnnmFtX/A/PwMaf74KtMzhQHF+veR/68p
SK3xblWBN+Y/rjP+3dpDjXaBT24oqIXa19X3SqDf8ln/XY9/OrkV49c3FfTh
raPNETO075aCWpusUv/nhXi8raANAYVPp7iCj+8oqPbPrFaDTYCXAsa/61de
0uCx38FdBWX9VTYkz4T/Cxk/9I96vVnaj/oe6/+K7in3YqFvilj83Nliu+gB
/HNfQW80A+7d3o3fF7P2PHzTpOOA+cUHLP98tZ2YvFra/5/lz0+dG/V/Suv/
WX9N4tK6KxA/jxXUJslp60wb6JcSFj8aeaHVfsjPTxSU/PqKs6MC+qJUQS3X
mIxecAV88pTxabFlXulF6PVnChri2nXGCQfg/bmC7uyMmJAsjVe8YHiYV3dg
3kOMH7xkevXpOI0Yfan+V9DASoo/YQ/7v2b65Nzy+En9wHdvFLQ61eL5DH3g
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
+VebIp3f8JbFj2nl95eTgJd3Io0auXiR6SPwS7lIJwJmWKUdhn/fM3v5HzAY
7IN65AP7/czvi5svIX4rmL/j1D+eUQK/lSLNOmw9LccX/vzI8N9kP/x1OsaP
qkQ6faDWqLM0X1st0kS9EXPDksEnn0R6One9jYsW8u1nkTb4vU6L85f2/xep
qK690eUE1ItfRVo//epeWwNp/p/F37KBLnfz0f4ahq/l+jVhm8H3tUwfpUTJ
crXBF3Ui9bfrOONRIvjzO9OLt2InfpbOt/zB6tW5x3c9sodeq2f8tXCh6+E8
1Cc//2/PXQM3FgH/v1i+sckv/G4MPDWwfLv88Ppr0nmjv0VymdeYv3Ql9Fej
SNVbcs3XrABf/mH4e6R18p70vfhfkQ7EKI0OTcZ1E4u3qZsuXDBDfmpm8UiF
3wqL8f5/TG9fUe12Vvq+UEVJcX5dngS5gf9aKOnOF6suhtJ8Tksl/YyePPDR
Y/B9KyXtzFxadNMX9mmtpD+/v7UbvRj+b6Mk7oTb/sGXpf3/lNSbb3NuujSe
31ZJ/gP6Hzysg+e1U9Kohl/9jaT9RtWUZGCxe07yGFy3V1KK2nXVO0bAawcl
bZ2/Y0WNEfioo5Ku9FofEu8JvdNJSb2udFrbYRrit7OSurTULHY3AJ91UVJG
kesih/eIh65KCr1FsY9WoL3dlHTZUe99rzrUM+pKaqG7U+NnEurD7kqqaZe/
IqoE7+uhpKm+M7Y9tke8aChpd3uTL+figLeeSuo7Lm5IlIu0/p/1f+aHziPO
QM9osfZWzZr8xx341VZSW7Nry8adAB/rMP8EVgqB0vfaukp66Gi92ZwQT3pK
ulZTt3fzQuiZXkqaXf7WYIM0vtabtae33Ck1GPyhr6TG1z2m1I+HvjNg7ct7
ppEZAnz3YfYNGuQdbwz79lVSbU5XanAHPvspqX+DPPj3Ztijv5LMVSru9OsI
+w1Q0swlLUPCYvF9iKGSDI+9vXfzLupvIyW98jhl1t4V/jRW0rSF7eQ/buF9
JkrasalFhzE8xq8GKunC5MznIxwxnz9ISW3azNa5Js1fmippeEXRD8s68J+Z
khZfDQusPwq+GqwkW405zW/z0L4hSvJpUouLl/KVuZK2tDW/syBM2v9PSe/K
Wky7dxH5Z6iSgqbOKXUdhv5bKmly8Mj1BjOA52EMT19dmnaZQT9bKSksQRmf
OB74Gs7wN3lQyzp9fF9mraSVfHGLMfNRn9mw/rpXR/vsBJ+NYP3ta9VXPQ73
RyrJvfWrT/Qc7bNVkufr2qqQJuBplJJWP3oXaDMe6zVGM389q8kzvgg82inJ
z8Y4sNVR4NleSR0Lvm7+8RbxTSy+h566tTAZfOmgpFvtE8/WOEvf/yspKsj6
y4hAxPsYJS2Nr77SVsLHWCUFmkbevmGK/jsp6dmcnpZaaxAf45Tk0Dw/JFwD
/RuvJI93CXZzZ6P9E5RUaJPtO3EY8vFEJZ3xNYw1X4F8OIn57+6LcXXHgOfJ
rP1DzJJHLwd/TFHS89Sl2+RByHdTlRQ8w2yVzWbkR2fmj2/7Su2fQj+7KKm6
drzFm9fAl6uSBj3perNmLfzlpqQfS7eMnBsMPnNXUsAOnfYZ3tDL0xg/rV/v
+XQw8oeHkqLzNpnEDAX+piup6EvcxqqBeP8MJX288mTomeWw10wWv5esPY+v
QH88laSq1DbVTgF/e7Hn96y5N16B+aFZSmrfeYZ2vRRfs5Vk/Ktvp+r2WH89
R0lPG6be83qI80C8laR88jzMbSTaP5e1r+LVVOVKvH8ew5/Ocz3TAuQHHyXl
zX2Z8Ez6fspXSY4OYfVO0vnDfgz/Q2fF2s2FPp3P+HLiVrPj5cCLv5KK370q
nrsH9fsCJaXPu2rZuQr/X6ikPZqh2e4dwE+LlFRwKrDxz1Hkn8VKmu9+9+iz
lmjfEiU1DSgbvuUNfr+U+VtTPSB8AvC9jOHvQJemNmHItwHM/0syxuzZCnsu
V5Kr7eq2qo8Qr4FKqn8322lLOuqBFYyvtLms7x+B15VKSmg1ute+6+DbVUqa
0/PDoJkzwW+rGV7PdK46XYvvYYNY/4rNtgqe2G9xjZI0ygenZ08HH6xl+dM1
tDGfAz7WKcklz9Xi13XEf7CS1BcrG7d/BP7XK2nDgseHcx6jntigJB2l7bMT
f6EPQtj7+PL9cyT9tZHhccqsmkE/sR45lOUjr94O/seBt03Mvz/+pvrdx/0w
1t+D7kGZ17EedTPLb6kvNAwGIL7Dmb2yJyyKmQp+2aKkCd+0V262gL7Z+j+e
rjyupu9rUwpRyJTSZAjJFBkyrRRJRKHBmDHK1GD25UoTFTKWqUwhIoS4555z
b1JJMivKlClkJkPhXb/Pfc775/M5956z99prPetZe++zj5Ku9Vl/aKs8X7hO
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
K8S7QiTLyx1sO/vL+/9Fenx1p98QeT4tnON7QPfeZjby9/9E2tX8ZqLed9Rz
Ecxf8/45LfmH+0WKFN+rnsPfTeDbKJEMn4UcHCAgvqJFWrJpue6uo9APMWz/
e7fbV2Uh/6wXqX/ao8/ZqzBeG0SadvFHm+BM+ft/Im07lPTdYzj0aJxIoUPW
534fjfwaz/HgmNDZMhvt3cjjGbBs/ydvjNcmtmfVme4dvBEvm1m/6HS8mXod
+SJBpLT3cenHlPDvLSItatxVEbQS/rVVpJjkuuuelML+23g8V8XWOy2vT20X
qfL5n8Tl/vL7/yK1iU8bG5SE/+/k/P95pF74VcxXJIrkVfj86X59+EeSSPUX
nOz2vD74YZdIznOlHjtWYzx2i9Tu1tHhsyPQvz0imYTt+XDqNPLnXo7HBiuc
7VYjX+0T6YNl0d8KQr5IFqnxaItNP4qhT1JY7wzUve4mf290P9/f77+HJ+T5
rQMira9RHI6R148Ocjw2v25dXAftPSSSt8mROOUejPdhzk/1D5/cI5+/kMr3
j6iT0yoL+IhIDUcH9hx0GHrsKOfr6ZkRd14no/4XaXNc3rKvM2HPNJH2XFGf
d2wmv/8v0tjtjQfdnCWv/4t0KLpoVKMq6MF0kRT9fe/O/ITvY5zkfDRsg+iu
xP9PiVQU0yf7Ul3kxwzWH8kDLKLTkZ9Pi7RhiZlpjfx+xhnON6UDw169g3+d
Fcm24ZKCfXPQ30zm819Di+cmI3+fE+mt88YpAQeQf86zPS6Jxv8tB74g0v7N
CbP9NoN/s0Q6l2vUZtMbPP+iSC/m32vQ7g/i8RLrrYLyHV0v4XlKzm8dqzen
5KAeF0Ry6h5rbbEV61UqkYqz7MSUGvCPyHo9b5d5rjvqE0mk1N93nVNmoV5U
i3Tw+MyIIcbwNw3z0feazr+ycT2b4zuy5vMuc7xvcpn1cEVjTZ902COH/XfL
3jq5Cvz/ikj7ovwXzjmM9ZZckVYtTntVWRf+lMd8X3wrrvwx/p/P/uAYPun9
beCrrD/q1PIJlveXF4h0Yem+6eqOsO81/r398qo1xcgvhcx3pxveSX+L+brr
Ij1sEW85XI35rSKRJob0vBtXCfvfEKnel6Md/2yDvr7JejRufu/IC2j/LR7f
0oRB8f3x+9sihZwYOlV4id/fEWmlonPXop2oZ+9yPnZ/eTn1G+rre5x/F9eN
HWMrf/9PpJpXzY55DcR6XLFIw1aEPhq8GvMxJSI1MeyzO+wd4uMB83X/6kaL
u8vr/yKZF544Yf0L8VoqUtCSXsPOmOF6Gcd3xGjntpXIT484XiO7r3MJR334
mPl7+XaxblP074lIcS0veemHQA885fpufssNB5Q4L+qZSOm1+2Ut+oX8Wy7S
fOfDgSVbwVfPeXyMbFOWHwd+IdLPiecmFvXDfMlLkfZmrbVSG0PPveL4rt93
24unyD+vRdr5wK+mswP4qkKk2I55rY48QP54w3zSZN7Ox36Ij7ccT3r2resE
d9fid6xXOkTNq/8G/FbJ9c+HvH8db8rv/3P99GhCfOQC8O8HkaKP5gSsXon2
fRSpdF3ktnu7gT+J1DvB9VTvHoifzzyeJb/bBuZjfuoL+++MrHLr96gHv3L+
dy1Ns3yE+fVvrNfCv8zZdQf+8p31lf5FKzP5/LYqvl+vDUvHWyCef3B9VTwt
dl4H6IWfbL+p6tofLRGvv0Qa+vhyjv1hXP8t0oSIyyNy7mM/aDXX51vd3nTI
Q39r2F/u66TmO8r1P1//cab5YHPE01/WE3unLYwIxXj843yx1Wl78lvow1oS
mXUYvffVe6zH1pYowOqqNHQW9KCORC3M/ZduaYB8oytR2eLw3anl8Mc6Ermd
fnGg3AT+pidR73eNB9WUI5/rS3T6S5dx4/LxvLoSWU+tUz5UPi+jnkQOR/Md
Hsvvg9WXKCh65bQO1/B/A4kaXPUw7tQS+aeBRIecEl3re2J+uqFEmdMOVlTW
RTwZSvRjkfXaoo0YfyOJplVfG3LADfHZSKJGLbo3tyuE/mosUcrv2/02XUS+
aSLR9aO9kj1dES/GEt0bfH5jeCj0cFOJfk9xu3J4JPrTTCIy/NN27AE8r7lE
c9VUFSmgfm0h0VelU0H1Q/h3S4kGdwx79Wcq+NhEosa+GU1qyfOhrSQa6bDO
bXIY5r9M+XlHsnr6qVCPmEn0YPWiZK8pwK0lGqJw3hX2EPrIXKIEZTfp72Po
awuJ7P4aXGtnjPZaSqT4NG90uh72I1tJdKqh/WArDfzJWiL/f116XozE/dtI
tGfFogaW/eT6X6LZFwpbzn2J/rSTKNo3zn67E/yrvUQ1PyPb7ZoE/7CRaMds
n+u1mkD/dZBo7La5jopniI+OEt2KW7Xzpfw9+04SjXq/MbKkFvjQVqJ6swMr
j1WkoP6XyO+nrxDRF/NBdhJtjrKcGDAcfNBFooGB1pZ3nsvf/5NoRY1pg176
qNe6SRTRLn2CkGavxd3Z/7bO//ovFfqgh0RPxyS565zG/hJ7iTaOG+tvbwC9
2lOin0tr5UR4QJ/3kqhOw37bBgejfw7sL3Mmnx+3D+3pLZHvb/3u54/g/n3Y
PnVVk7ckQW/2lejJ71O3jx1HPusnUXVhn4HtmoEfHSX6aLula6fvsE9/ia4E
65n/C0S8DZDIYn3liDGPUH8PlOhTWt7eb3/xfvMgiW6Ge7qZdc7S4sE8nlXl
nQ7J79uQRE7CqPm/5fMfnNhfNLvNM38h/oZItCHv6vCs5sg3zhI5f52RMGEp
9IoLx2etAKlA/r70UIk6NDvQuOtm3H8Yx2vHceuC1qM/ruyv88vd7p2EvYbz
89Z4V+yIRjy6cfzfHWhIH3D/ERJNr3XU0E0H/uUu0Zf5ua3abADfjpSoSYPc
yL1jwXej2D5d0v8ssgFfeHB8ZxQeSZG/nzWax9OsIiv3GOJvDMfftCzjqzvx
vounRB+G13n4XzvwtZdEUyufOgxrDf09ViLHtp9q/j2Sz//n/hm//ZKfiHw4
nsevRze3rF6wp7dE8wZcM4n+h/b4SGT5p7hPXzl+fSVqmN+gg1UO5kv9JBIa
t6abZ+Xz/yUq5+xW/RvxNFGiil3fMiqdMN6TJOprvvV7cyXmDydL1CNv1JHh
hVgfm8L8VDRnXtAUtG8q84NBzeI1TXB/f4k8IkYZNXfA/6dx/Iltj8f1AP9N
l+jbXPu5U8ugp2ZINC7n0h6/fbj/TPY3K7NTF39gvGZxvOs4Nz0XCXvNZn5u
2H9JRDvUWwHcHpfqQfffgG/mSBTb6GeT/fJ5eHMlWna79YIP8vtPgRy/WQXF
r1xQPwVJdOTe8Hydt7g+TyL9sAaNusjfT58v0Zm/pjo69TF+CySqGvp+pP5u
5O+FEtl8N8i0MYA9Fkm0rWRllxw3+E8wt89rVE7ANLy/FCLRo1WZOeMVsHeo
RAM+uz0OcMV+nzAer9olM/yvIb4XS1S0KkI6dBbtWyLR1ZQcK/9Q8NFS5rvb
bR56bJTrf4m88r3DQw3BJ8sl6r4pfM7bCOSrFRL1+Vl9Sm8y+GSlRO8X94u1
mAv/WiVxvjdZ3dYe8fmfRCNyVhtMDIV/rub+3QyvY1CC+b41Einr2+/5kAn9
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
V9YT7T8vTRgE+zC+MebEg19BOD9quIaCVZc+x7zC/AfjDOONs/bJ/ummobZd
kivbZmB+h7HtsB1eAw3AXyM0FHDA0a4oFv7HuOihZnPrZci/7hqqddBuzuLe
mJ9ivMjj4hfJC+eNjmR+7VPPICUA+p7xKw+/czP8YN9RGmpROiC7sj34mfH6
qpJx3n+QXzw01ElxrtGDgVi/Yaz2ffGungPsP1pDB1c3CtoxG/7D+OnjpiNT
EjD/OYbz12jRwr1Se36+gnHTKMfEb/Pxf08NhWQe++rdHfqE8bkd07dcuo76
x0tD4Rn1Er1WYfwYz/vlfW/qKPRvrIYuHByrE4j5FAVj9Tmj6PExWB8bx/kg
b/PeVVu17/cqGNfdVN29XiXmZ8bzeF4q1rg3wf4Sxh2HvDk8rwL86q2hho6D
nczeQz8wHnzMYHTgG8SPD/Oz8cqKR2qsLzIe5djt9OUdiA9fDT3IeP/mwXK0
n/GVzfpr38rn9/lp6JqxW5fBMxD/jO83cjiQ8n81nXlYjV0Xxosy5Q3NUlKG
RKGBjNmiFJGUUEilpAlplhwJqSg0GEKGFA0oVGg4z0lFKYVIlLEiJamUDN/6
ru7z5+86nc7z7L3XWvdae9oA/2TDZycScnU3PML7EW9S0Y1vlMX6K1uKJy0i
Ty59hj4ivuLx5MFB4X2oG/gsKmtcwtY0xE/ivXd2PjtniP7dyGcb6sz9HR7C
/xFnLTApmGAK/7uJz/L90q93q6F/iRUmv9ewPY/1/3Y0Hgu2+HTm9p+PwyNW
6u11u/cc/mszseoEtXnvMb9O7NodVO85Fe1jz2dGpaf72iqxfo/4ypEncvMu
4Pcd+Czs9PUVP4tgX8S3X9/zemmI/MKRz8rfm35QeIbxQ5zsKzJobwDiwxaK
1977tH2tkZ8Sy6tLWI0/i/d34jM1iUvv3w5F/xMnmk5sGsaE8/8UD2dWDpT6
Ipz/J/vNXXv5RTL871byLzUlH0Q1UL8nzim7seJPHvSvC5/N4JrLfXMRH4lT
w4YFersIz6PhM5Yy4rfnmP79AzziMVs068Jd8f9d+cx04+4sz2jEN+KYRcP3
/LoqPK+WzyKrd1YcEUF8IM6/8zjRMhP61J3ay+5yz7vd/f6IR5yyfsmbdbqw
Lw8a3w13m35tR/8T+/91cfqeCf/vyWeODWs/HuaE8/8UvxrcLBZBT4psJ334
6PhfPZy3yyN+63rYqsdAeP4N+c8ba7N932N+mlgtbHXFrT3C/XB89v3LlKHh
zohfxCFNS4b9ysbzeZE++a1jNNsY9kU8pDY/ZeMi7H/bxWez7Ta+afGHfiVu
Pr3wg7kW2teb9HbPRKdXsdAfxJG/Fy+KnwD/48NnGXUK28+bYf7o/3xv9PKM
adAnvqTPk7xuuF1A/YV4gNWyvxHhuP/Wj8+aXC8NT6tB/CAOeuU2VnMsnt+f
2rvsd+v42/3nH/CIKyS37I5YhP4NIHt3fjrmpDLq68RfugMy5+1HfAmk/7/S
iBcegPFHXO96/cZN4X6S3Xx2x8NjvmJH/3nePOIXUxVDqi8ifgWRHlxabdlm
Df9BfD/BrSJQGveL7OGzqk9fpipW9e935hGbSewZYtkF/RJM/vGpeqGDLNqf
mK9746y4K+bX95I9OyzTCLNH/CfuXJT80MMP6zd5fKb/aEzXyp3wf8SPdKo/
9Aj3b+8j+1bSvdLNYX6IuNyy8N3IEvRPCJ85jb/8pPI57If4pM23M49/Ql/s
J/+YM+unIepxPOKQ9NlVE56hvh5Kf++jm1fSDv1H/HKJ/YGFp2H/Byhfi5s4
300N62uI4y3/dn6SQv8fJH/n76ZuaoX6E/Fh+RcxUu/Q/of4TFvJPmrqd6wv
JLZOkG3PvI7nD6P4676ksEgD9X/i6fs0q6ZPRvsepudVtQ698g/vRxz/ci2X
K9yvG85n+ycP/K3SDn1E7BQzR+ysMtovgs9MxBb/+j4Z44M4zXGBYtBa1Nci
yb/+LBu2Sw32QSwp+U5dUIv6zhFqnxHLFo17hvl14iCt1Yp56/D5UcoXMws8
m0/j94lFNFODjVoxfxXFZ1u6ouyLP6H9ifOzf09QmYr5+Wg+i/5k5aoOvcQj
/hqhrD3YS3geEtm/Zq7ktGLEB2KHRUOcxMRhP8cpPqZW5rRJYv6VOKPD96n2
auQvJyj/ucy9iz/f3x484lLfISIv6rH+IYb8vbjdjpWyiI/EzzXu94bbwz/E
kr60nBgdtQPtT6yWUjzCOBbzK3GkR9d9lr5rAfsn9qjVPtQzFO0fT/mBr02d
WRTyL2LT/OoNS4dAf58k/9m6XWncWORPxEuWdZS/7sX82CmK5098zNTMkN8R
t73hj6nuxfqB0+QfTnmPy/OG/yb21urcFS7Mz8/wmcs7lb6PmqhPE+dXPJwW
tgXtl0D5Snpo+8DXqN8Q57sFNXE68A9n+cxm9Z+19dHIT4irY9deq+xF/fEc
n73bvqnIeSDah/jtqG2BL+OwP/I86atZMq7/cL81jzjBb/aA9CXo/0TKB//m
qJ0zxPwm8ZIhN63yvkE/XCD9XWKnHS6F/J/Yu1MwPU64X/Ai6cuH79YvWIX2
I06aGXYiPgL120t8FrxB/PbVbsRf4ianiJTYiWj/y/T3n8IVleTgn4mdnRcr
lhYJ75Mme5zNBs+8ivYhPjfrYvzNH5h/vELxQ3fi3P3C9TvEmdfsfa0XwD8k
89mEg7M2bQyd1f85cXfV4LW9wvmhFPq9I+FrlsVjfo147Jyqp2Ljod+v8tlo
h5Fa512gT4k9xpYFizWivniN3m9fR9eAKOQHxDtHib0X6cb/T+Wze+dyxw4+
jfFD7LW6xfXHBPi/ND4bUbHu2yNp1EeIxw3/5PspEufxpvNZuJenstFjjG/i
E1M3NZ3MhD7NoHhq/GiCThn6h9jiym7+81Do0+t85vNO2lpjF75PfCd08CKp
t7CvG6RP68dcXhKW0f858dz/cn/uD4V/ucln87VWWHjGwn6Ja8T2Jsb64vuZ
ZI/cli6TKRh/xPb26W2rzPH7WXz2L0HseOBG6B/il7pXvf57h+e/ReNrfHS3
/Kj+9RQ84rCXJqVir3G+x22yX6fe6tO7MX9PnCBvpBm5C///Dp8pS6qHbjNF
/CRW05pZd3Y66v/ZfKa3cR/zOYL8kzhn3VmLhgWYv8zhs1e+AZuP/0T9jXir
p2Ohlij0cS6fdTzjdd+TRXwiVnr69vXNrVj/fJf8U80x0SH7oG+J0yvEfnut
E97XRfl/YoLNHEXk18ROU9fc3/MU4+M+5e8DHObYvkN+RxweEnVp3FLMb+XR
+74W7XuTiucn/vZQx0ppDfKjfHq/30aGKZX9+7F4xGllOesnjMTnBTQeR8Zl
BMigfk0cdn5+l/Rm1N8LKR/TDLx48T3iA3GY4WTvz27Yv8QnPWlr4JT6AfkV
8eaPb8Qq10G/cpTPPpq1/VUX8g/ioTs31ZR8h/4V0Purvjn2Xhv2S/zZeEOy
xH3YVxHZKycxaKEn7I+4PrR68XMV+McHFM+Wr12orwZ9QlzUclurMV14vjj5
k5z1o+9WQX8TX06q3nLgMvq/hMbDjrz/chLQP8R21kXDRGdj/JXymeirB6dk
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
Igc=
      "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10000.}, {0, 0.969047799703221}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.734274439196787*^9, 3.734280190766459*^9, 3.734280902788682*^9, 
   3.734281313004918*^9, {3.734282010286703*^9, 3.734282017195133*^9}, 
   3.734282564481615*^9, 3.734319013427864*^9, 3.7343205055039797`*^9, 
   3.7343313886467743`*^9, 3.734331514273028*^9, 3.734333597741624*^9, 
   3.7343371024149942`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
I2kaMcP7tK/fo71+j+9br3RrPqGc3GVY87E0js8rm6Vl3vG9R/scv/HKgqNH
CDJKyPCxsmyy50PGvtfX15bm/xN2uDhQauEiz8cjnxx8E9REEvlpYurV3QtS
2+qeCvWtfWjvG6O/Lcl1zT3o7J+gv7+2INc0daF7cPpdbkruG5m7437IkCvr
2tA/umBjSSuvacHA+BJp0R2trKYZQ1MrVnwVta0YnVm34iupbMTo7IYVX15h
Bcbnt6z4cgvKMbmwY8WXX1SJ6eU9K76cN2WYWTmw4st+U4rZ1UMrPkqbWz+2
4qMy5klSY8mXlV+Cxc0Tjsbcb50ydxwtrxjLO0rmzlzfyu4FCksqGIt9bW2+
3ql9fCN+TXsoviEDZXBGP8tCpvIb6zg42Lco9hAb62s4OmR2bIlIE21tdQWK
4yMrvtGRYezubFvxLS8tQXl2asVHB/5z5ZkV3+LCPBlSz6343vb34ez0xIpv
fm6WeOWlFd/ExDg06msrvvHxMdzcqK34mpoaob6+suYbG4XuVmvFNzY6Cr3u
1oqP0owGnRVfQ0P9e3yjoyOAaa5+pxeGZrTiGyG6Yj8crb6ujmT0Jj6rIPUl
5jeVZJjOJH01E3/rW4vEsnG6k/g3bMmBgQFsbGwwd/+TpXV3d+Po6MiKVltb
ywQuS1p1dTXRFDP9tflfLK2qqurDT/IF6F5/ZUMPJNElSKmchuJcbfM/zIYl
xn5XJM0Czs/PrWgjIyNQq9VWtOHhYdze3lo9xtDQ0LuPwSUQszPk+niCMTU1
hQXiU9+F0xHu+8SXl5c/gn+O6elpRsujxK9WVlYYltL3WZqbmxmt7u7uvs9i
kkLhH7KV/9DxT1mpoqKCcU6W70NWam1tZYy4v7//eyt9PzjbRz5qpfLycgwO
DtLc5WNWam9vx/r6Og4PDz9mJbb0j1YLH8LNK6F0Y+mSjO0a7a0NM6/7ko6d
zIEubvua+VhUhHJTHaYQhLP9VcRFyuEpFkPi7Y+67nEmlOmUe4iRe6GgbRIn
GzOQ+3gzJ3t8fX3h4+MDL6kEEfFpOL+F+Wk+9rRUku4KKRG+EMqiMbO0gro3
ibCzd8Pk5gmM1woUZqegZWQV+ssjhElc8MhVhKKqejSReXIdCWCtXQNQ6z8t
6SucrI9AYO+IruktU9NvzxDuw0diaRd7gI2kmpM9cHNxRmRqEVQ3+OITPkdq
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
3+z/H7R58H8AbYbq8A==\
\>"],ExpressionUUID->"fa56d62f-7ce2-4d5e-b267-14b01a8f766e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pos", "=", 
  RowBox[{"Flatten", "@", 
   RowBox[{"Position", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"svdRes", "\[LeftDoubleBracket]", 
       RowBox[{"3", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
     ",", 
     RowBox[{"x_", "/;", 
      RowBox[{"x", ">", "0.1"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.734241089107848*^9, 3.7342411002379093`*^9}, {
   3.734241260238735*^9, 3.73424126534691*^9}, {3.734241311577292*^9, 
   3.734241317725976*^9}, {3.7342820282050447`*^9, 3.734282033074855*^9}, 
   3.734331203598934*^9},ExpressionUUID->"2e757556-b2d5-4807-a5f6-\
22851e2746bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1018", ",", "5433"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7342744393955107`*^9, 3.734280191089151*^9, 3.7342809031508293`*^9, 
   3.7342813131600018`*^9, {3.73428202327314*^9, 3.734282033575564*^9}, 
   3.734282564684017*^9, 3.7343190184887047`*^9, 3.734320508497501*^9, 
   3.7343313932579813`*^9, 3.734331518174349*^9, 3.734333601847126*^9, 
   3.7343371024616203`*^9},ExpressionUUID->"ade016df-1a35-43da-89e5-\
32d390f35d86"]
}, Open  ]],

Cell["Transform the data with those vectors:", "Text",
 CellChangeTimes->{{3.7343191450384893`*^9, 
  3.734319151828741*^9}},ExpressionUUID->"fe40ee90-2a94-4211-8010-\
9e3424df4d6b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingData2", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"trainingData", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "pos"}], "\[RightDoubleBracket]"}], ")"}], 
     "\[Rule]", 
     RowBox[{"trainingData", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"testData2", "=", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"testData", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "pos"}], "\[RightDoubleBracket]"}], ")"}], 
      "\[Rule]", 
      RowBox[{"testData", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClConUnit", "[", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<trainingData\>\"", "\[Rule]", "trainingData2"}], ",", 
       RowBox[{"\"\<testData\>\"", "\[Rule]", "testData2"}]}], "|>"}], "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", "ClConAddToContext", 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ClConAssignVariableNames", "[", "]"}], "\[DoubleLongRightArrow]",
     "\[IndentingNewLine]", 
    RowBox[{"ClConEchoVariableNames", "[", "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ClConMakeClassifier", "[", "\"\<RandomForest\>\"", "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ClConEchoFunctionContext", "[", 
     RowBox[{
      RowBox[{"Magnify", "[", 
       RowBox[{
        RowBox[{"ClassifierInformation", "[", 
         RowBox[{"#", "[", "\"\<classifier\>\"", "]"}], "]"}], ",", "0.8"}], 
       "]"}], "&"}], "]"}], "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ClConClassifierMeasurements", "[", "]"}], 
    "\[DoubleLongRightArrow]", "ClConEchoValue", "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ClConROCPlot", "[", "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ClConClassifierMeasurementsByThreshold", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Accuracy\>\"", ",", "\"\<Precision\>\"", ",", "\"\<Recall\>\""}], 
       "}"}], ",", 
      RowBox[{
       RowBox[{"-", "1"}], "\[Rule]", "0.275"}]}], "]"}], 
    "\[DoubleLongRightArrow]", "ClConEchoValue", "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ClConROCListLinePlot", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<TPR\>\"", ",", "\"\<FPR\>\"", ",", "\"\<PPV\>\"", ",", 
       "\"\<ACC\>\""}], "}"}], "]"}], "\[DoubleLongRightArrow]", 
    "\[IndentingNewLine]", 
    RowBox[{"ClConAccuracyByVariableShuffling", "[", "]"}], 
    "\[DoubleLongRightArrow]", "\[IndentingNewLine]", "ClConEchoValue"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.73424130164509*^9, 3.7342414265958014`*^9}, {
  3.734319378634014*^9, 3.734319381040403*^9}, {3.734333497223269*^9, 
  3.734333507111611*^9}},ExpressionUUID->"b1d8a0c5-6f4c-4bac-b643-\
d463e5851509"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"variable names:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"{", 
   RowBox[{"\<\"1\"\>", ",", "\<\"2\"\>", ",", "\<\"3\"\>"}], "}"}]}]], "Echo",
 CellChangeTimes->{
  3.734337102516986*^9},ExpressionUUID->"462fa8ea-9ebd-42a2-8b80-\
d70329582e24"],

Cell[BoxData[
 StyleBox[
  InterpretationBox[
   TagBox[
    StyleBox[
     FrameBox[GridBox[{
        {
         ItemBox[
          FrameBox[
           StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
            StripOnInput->False,
            FontSize->Larger],
           FrameMargins->{{10, 0}, {-5, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Alignment->{Left, Bottom},
          Background->RGBColor[0.93119, 0.93119, 0.93119],
          Frame->{{False, False}, {True, False}},
          FrameStyle->Opacity[0.1],
          ItemSize->{Automatic, 1},
          StripOnInput->False]},
        {
         ItemBox[
          FrameBox[
           TagBox[GridBox[{
              {
               StyleBox["\<\"Method\"\>",
                StripOnInput->False,
                LineOpacity->0.8,
                FrontFaceOpacity->0.8,
                BackFaceOpacity->0.8,
                Opacity->0.8,
                FontWeight->"SemiBold",
                FontOpacity->0.8], "\<\"Random forest\"\>"},
              {
               StyleBox["\<\"Number of classes\"\>",
                StripOnInput->False,
                LineOpacity->0.8,
                FrontFaceOpacity->0.8,
                BackFaceOpacity->0.8,
                Opacity->0.8,
                FontWeight->"SemiBold",
                FontOpacity->0.8], "2"},
              {
               StyleBox["\<\"Number of features\"\>",
                StripOnInput->False,
                LineOpacity->0.8,
                FrontFaceOpacity->0.8,
                BackFaceOpacity->0.8,
                Opacity->0.8,
                FontWeight->"SemiBold",
                FontOpacity->0.8], "1"},
              {
               StyleBox["\<\"Number of training examples\"\>",
                StripOnInput->False,
                LineOpacity->0.8,
                FrontFaceOpacity->0.8,
                BackFaceOpacity->0.8,
                Opacity->0.8,
                FontWeight->"SemiBold",
                FontOpacity->0.8], "2812"},
              {
               StyleBox["\<\"Number of trees\"\>",
                StripOnInput->False,
                LineOpacity->0.8,
                FrontFaceOpacity->0.8,
                BackFaceOpacity->0.8,
                Opacity->0.8,
                FontWeight->"SemiBold",
                FontOpacity->0.8], "50"}
             },
             AutoDelete->False,
             
             BaseStyle->{
              FontWeight -> "Light", FontFamily -> ".SF NS Text", NumberMarks -> 
               False},
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[2.0999999999999996`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Alignment->Left,
          BaseStyle->{Deployed -> False},
          StripOnInput->False]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxDividers->{
        "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
         "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], 
           Offset[1.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Background->RGBColor[0.9802, 0.9802, 0.9802],
      FrameMargins->{{0, 0}, {0, 0}},
      FrameStyle->GrayLevel[0.85],
      RoundingRadius->5,
      StripOnInput->False],
     StripOnInput->False,
     LineBreakWithin->False],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Association[
   "Method" -> "Random forest", "Number of classes" -> 2, 
    "Number of features" -> 1, "Number of training examples" -> 2812, 
    "Number of trees" -> 50]],
  StripOnInput->False,
  Magnification->0.8 Inherited]], "Echo",
 CellChangeTimes->{
  3.734337102788765*^9},ExpressionUUID->"c445e874-db7d-4ff4-84fe-\
5022e9d87bc5"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"value:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"Accuracy\"\>", "\[Rule]", "0.9616204690831557`"}], ",", 
    RowBox[{"\<\"Precision\"\>", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "\[Rule]", "0.8333333333333334`"}], ",", 
       RowBox[{"1", "\[Rule]", "0.9772727272727273`"}]}], 
      "\[RightAssociation]"}]}], ",", 
    RowBox[{"\<\"Recall\"\>", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "\[Rule]", "0.8173076923076923`"}], ",", 
       RowBox[{"1", "\[Rule]", "0.9796163069544364`"}]}], 
      "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}]], "Echo",
 CellChangeTimes->{
  3.734337102863549*^9},ExpressionUUID->"9f4712ae-9765-46d5-adba-\
897759a96e67"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"ROC plot(s):\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "\[Rule]", 
     GraphicsBox[{
       {RGBColor[
         NCache[
          Rational[5, 9], 0.5555555555555556], 
         NCache[
          Rational[5, 9], 0.5555555555555556], 1], 
        LineBox[NCache[{{1, 1}, {Rational[12, 139], Rational[101, 104]}, {
           Rational[31, 417], Rational[101, 104]}, {
           Rational[17, 278], Rational[25, 26]}, {
           Rational[25, 417], Rational[25, 26]}, {
           Rational[13, 278], Rational[99, 104]}, {
           Rational[13, 278], Rational[99, 104]}, {
           Rational[35, 834], Rational[99, 104]}, {
           Rational[11, 278], Rational[49, 52]}, {
           Rational[16, 417], Rational[49, 52]}, {
           Rational[31, 834], Rational[49, 52]}, {
           Rational[5, 139], Rational[12, 13]}, {
           Rational[14, 417], Rational[95, 104]}, {
           Rational[9, 278], Rational[93, 104]}, {
           Rational[25, 834], Rational[23, 26]}, {
           Rational[11, 417], Rational[45, 52]}, {
           Rational[7, 278], Rational[45, 52]}, {
           Rational[10, 417], Rational[89, 104]}, {
           Rational[10, 417], Rational[11, 13]}, {
           Rational[3, 139], Rational[43, 52]}, {
           Rational[17, 834], Rational[85, 104]}, {
           Rational[8, 417], Rational[41, 52]}, {
           Rational[5, 278], Rational[10, 13]}, {
           Rational[5, 278], Rational[3, 4]}, {
           Rational[7, 417], Rational[37, 52]}, {
           Rational[13, 834], Rational[9, 13]}, {
           Rational[2, 139], Rational[71, 104]}, {
           Rational[5, 417], Rational[69, 104]}, {
           Rational[3, 278], Rational[67, 104]}, {
           Rational[4, 417], Rational[5, 8]}, {
           Rational[7, 834], Rational[15, 26]}, {
           Rational[5, 834], Rational[25, 52]}, {
           Rational[2, 417], Rational[6, 13]}, {
           Rational[1, 278], Rational[17, 52]}, {
           Rational[1, 834], Rational[11, 52]}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}}, {{1, 1}, {0.08633093525179857, 
           0.9711538461538461}, {0.07434052757793765, 0.9711538461538461}, {
           0.06115107913669065, 0.9615384615384616}, {0.05995203836930456, 
           0.9615384615384616}, {0.046762589928057555`, 0.9519230769230769}, {
           0.046762589928057555`, 0.9519230769230769}, {0.04196642685851319, 
           0.9519230769230769}, {0.039568345323741004`, 0.9423076923076923}, {
           0.03836930455635491, 0.9423076923076923}, {0.03717026378896882, 
           0.9423076923076923}, {0.03597122302158273, 0.9230769230769231}, {
           0.03357314148681055, 0.9134615384615384}, {0.03237410071942446, 
           0.8942307692307693}, {0.02997601918465228, 0.8846153846153846}, {
           0.026378896882494004`, 0.8653846153846154}, {0.025179856115107913`,
            0.8653846153846154}, {0.023980815347721823`, 
           0.8557692307692307}, {0.023980815347721823`, 0.8461538461538461}, {
           0.02158273381294964, 0.8269230769230769}, {0.02038369304556355, 
           0.8173076923076923}, {0.019184652278177457`, 0.7884615384615384}, {
           0.017985611510791366`, 0.7692307692307693}, {0.017985611510791366`,
            0.75}, {0.016786570743405275`, 0.7115384615384616}, {
           0.015587529976019185`, 0.6923076923076923}, {0.014388489208633094`,
            0.6826923076923077}, {0.011990407673860911`, 
           0.6634615384615384}, {0.01079136690647482, 0.6442307692307693}, {
           0.009592326139088728, 0.625}, {0.008393285371702638, 
           0.5769230769230769}, {0.005995203836930456, 0.4807692307692308}, {
           0.004796163069544364, 0.46153846153846156`}, {
           0.0035971223021582736`, 0.3269230769230769}, {0.001199040767386091,
            0.21153846153846154`}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0,
            0}}]]}, 
       {RGBColor[
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333], 1], PointSize[0.02], 
        LineBox[NCache[{{1, 1}, {Rational[12, 139], Rational[101, 104]}, {
           Rational[31, 417], Rational[101, 104]}, {
           Rational[17, 278], Rational[25, 26]}, {
           Rational[25, 417], Rational[25, 26]}, {
           Rational[13, 278], Rational[99, 104]}, {
           Rational[13, 278], Rational[99, 104]}, {
           Rational[35, 834], Rational[99, 104]}, {
           Rational[11, 278], Rational[49, 52]}, {
           Rational[16, 417], Rational[49, 52]}, {
           Rational[31, 834], Rational[49, 52]}, {
           Rational[5, 139], Rational[12, 13]}, {
           Rational[14, 417], Rational[95, 104]}, {
           Rational[9, 278], Rational[93, 104]}, {
           Rational[25, 834], Rational[23, 26]}, {
           Rational[11, 417], Rational[45, 52]}, {
           Rational[7, 278], Rational[45, 52]}, {
           Rational[10, 417], Rational[89, 104]}, {
           Rational[10, 417], Rational[11, 13]}, {
           Rational[3, 139], Rational[43, 52]}, {
           Rational[17, 834], Rational[85, 104]}, {
           Rational[8, 417], Rational[41, 52]}, {
           Rational[5, 278], Rational[10, 13]}, {
           Rational[5, 278], Rational[3, 4]}, {
           Rational[7, 417], Rational[37, 52]}, {
           Rational[13, 834], Rational[9, 13]}, {
           Rational[2, 139], Rational[71, 104]}, {
           Rational[5, 417], Rational[69, 104]}, {
           Rational[3, 278], Rational[67, 104]}, {
           Rational[4, 417], Rational[5, 8]}, {
           Rational[7, 834], Rational[15, 26]}, {
           Rational[5, 834], Rational[25, 52]}, {
           Rational[2, 417], Rational[6, 13]}, {
           Rational[1, 278], Rational[17, 52]}, {
           Rational[1, 834], Rational[11, 52]}, {0, 0}, {0, 0}, {0, 0}, {0, 
           0}, {0, 0}, {0, 0}}, {{1, 1}, {0.08633093525179857, 
           0.9711538461538461}, {0.07434052757793765, 0.9711538461538461}, {
           0.06115107913669065, 0.9615384615384616}, {0.05995203836930456, 
           0.9615384615384616}, {0.046762589928057555`, 0.9519230769230769}, {
           0.046762589928057555`, 0.9519230769230769}, {0.04196642685851319, 
           0.9519230769230769}, {0.039568345323741004`, 0.9423076923076923}, {
           0.03836930455635491, 0.9423076923076923}, {0.03717026378896882, 
           0.9423076923076923}, {0.03597122302158273, 0.9230769230769231}, {
           0.03357314148681055, 0.9134615384615384}, {0.03237410071942446, 
           0.8942307692307693}, {0.02997601918465228, 0.8846153846153846}, {
           0.026378896882494004`, 0.8653846153846154}, {0.025179856115107913`,
            0.8653846153846154}, {0.023980815347721823`, 
           0.8557692307692307}, {0.023980815347721823`, 0.8461538461538461}, {
           0.02158273381294964, 0.8269230769230769}, {0.02038369304556355, 
           0.8173076923076923}, {0.019184652278177457`, 0.7884615384615384}, {
           0.017985611510791366`, 0.7692307692307693}, {0.017985611510791366`,
            0.75}, {0.016786570743405275`, 0.7115384615384616}, {
           0.015587529976019185`, 0.6923076923076923}, {0.014388489208633094`,
            0.6826923076923077}, {0.011990407673860911`, 
           0.6634615384615384}, {0.01079136690647482, 0.6442307692307693}, {
           0.009592326139088728, 0.625}, {0.008393285371702638, 
           0.5769230769230769}, {0.005995203836930456, 0.4807692307692308}, {
           0.004796163069544364, 0.46153846153846156`}, {
           0.0035971223021582736`, 0.3269230769230769}, {0.001199040767386091,
            0.21153846153846154`}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0, 0}, {0,
            0}}]], {
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.`"],
          Annotation[#, 0., "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[12, 139], Rational[101, 104]}, {
             0.08633093525179857, 0.9711538461538461}]],
           "0.025`"],
          Annotation[#, 0.025, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[31, 417], Rational[101, 104]}, {
             0.07434052757793765, 0.9711538461538461}]],
           "0.05`"],
          Annotation[#, 0.05, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[17, 278], Rational[25, 26]}, {
             0.06115107913669065, 0.9615384615384616}]],
           "0.07500000000000001`"],
          Annotation[#, 0.07500000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[25, 417], Rational[25, 26]}, {
             0.05995203836930456, 0.9615384615384616}]],
           "0.1`"],
          Annotation[#, 0.1, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[13, 278], Rational[99, 104]}, {
             0.046762589928057555`, 0.9519230769230769}]],
           "0.125`"],
          Annotation[#, 0.125, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[13, 278], Rational[99, 104]}, {
             0.046762589928057555`, 0.9519230769230769}]],
           "0.15000000000000002`"],
          Annotation[#, 0.15000000000000002`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[35, 834], Rational[99, 104]}, {
             0.04196642685851319, 0.9519230769230769}]],
           "0.17500000000000002`"],
          Annotation[#, 0.17500000000000002`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[11, 278], Rational[49, 52]}, {
             0.039568345323741004`, 0.9423076923076923}]],
           "0.2`"],
          Annotation[#, 0.2, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[16, 417], Rational[49, 52]}, {
             0.03836930455635491, 0.9423076923076923}]],
           "0.225`"],
          Annotation[#, 0.225, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[31, 834], Rational[49, 52]}, {
             0.03717026378896882, 0.9423076923076923}]],
           "0.25`"],
          Annotation[#, 0.25, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[5, 139], Rational[12, 13]}, {0.03597122302158273,
              0.9230769230769231}]],
           "0.275`"],
          Annotation[#, 0.275, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[14, 417], Rational[95, 104]}, {
             0.03357314148681055, 0.9134615384615384}]],
           "0.30000000000000004`"],
          Annotation[#, 0.30000000000000004`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[9, 278], Rational[93, 104]}, {
             0.03237410071942446, 0.8942307692307693}]],
           "0.325`"],
          Annotation[#, 0.325, "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           PointBox[
            NCache[{Rational[25, 834], Rational[23, 26]}, {
             0.02997601918465228, 0.8846153846153846}]],
           "0.35000000000000003`"],
          Annotation[#, 0.35000000000000003`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[11, 417], Rational[45, 52]}, {
             0.026378896882494004`, 0.8653846153846154}]],
           "0.375`"],
          Annotation[#, 0.375, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[7, 278], Rational[45, 52]}, {
             0.025179856115107913`, 0.8653846153846154}]],
           "0.4`"],
          Annotation[#, 0.4, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[10, 417], Rational[89, 104]}, {
             0.023980815347721823`, 0.8557692307692307}]],
           "0.42500000000000004`"],
          Annotation[#, 0.42500000000000004`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[10, 417], Rational[11, 13]}, {
             0.023980815347721823`, 0.8461538461538461}]],
           "0.45`"],
          Annotation[#, 0.45, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 139], Rational[43, 52]}, {0.02158273381294964,
              0.8269230769230769}]],
           "0.47500000000000003`"],
          Annotation[#, 0.47500000000000003`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[17, 834], Rational[85, 104]}, {
             0.02038369304556355, 0.8173076923076923}]],
           "0.5`"],
          Annotation[#, 0.5, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[8, 417], Rational[41, 52]}, {
             0.019184652278177457`, 0.7884615384615384}]],
           "0.525`"],
          Annotation[#, 0.525, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[5, 278], Rational[10, 13]}, {
             0.017985611510791366`, 0.7692307692307693}]],
           "0.55`"],
          Annotation[#, 0.55, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[5, 278], Rational[3, 4]}, {0.017985611510791366`,
              0.75}]],
           "0.5750000000000001`"],
          Annotation[#, 0.5750000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[7, 417], Rational[37, 52]}, {
             0.016786570743405275`, 0.7115384615384616}]],
           "0.6000000000000001`"],
          Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[13, 834], Rational[9, 13]}, {
             0.015587529976019185`, 0.6923076923076923}]],
           "0.625`"],
          Annotation[#, 0.625, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[2, 139], Rational[71, 104]}, {
             0.014388489208633094`, 0.6826923076923077}]],
           "0.65`"],
          Annotation[#, 0.65, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[5, 417], Rational[69, 104]}, {
             0.011990407673860911`, 0.6634615384615384}]],
           "0.675`"],
          Annotation[#, 0.675, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 278], Rational[67, 104]}, {
             0.01079136690647482, 0.6442307692307693}]],
           "0.7000000000000001`"],
          Annotation[#, 0.7000000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[4, 417], Rational[5, 8]}, {0.009592326139088728, 
             0.625}]],
           "0.7250000000000001`"],
          Annotation[#, 0.7250000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[7, 834], Rational[15, 26]}, {
             0.008393285371702638, 0.5769230769230769}]],
           "0.75`"],
          Annotation[#, 0.75, "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           PointBox[
            NCache[{Rational[5, 834], Rational[25, 52]}, {
             0.005995203836930456, 0.4807692307692308}]],
           "0.775`"],
          Annotation[#, 0.775, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[2, 417], Rational[6, 13]}, {0.004796163069544364,
              0.46153846153846156`}]],
           "0.8`"],
          Annotation[#, 0.8, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 278], Rational[17, 52]}, {
             0.0035971223021582736`, 0.3269230769230769}]],
           "0.8250000000000001`"],
          Annotation[#, 0.8250000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 834], Rational[11, 52]}, {
             0.001199040767386091, 0.21153846153846154`}]],
           "0.8500000000000001`"],
          Annotation[#, 0.8500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.875`"],
          Annotation[#, 0.875, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9`"],
          Annotation[#, 0.9, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.925`"],
          Annotation[#, 0.925, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9500000000000001`"],
          Annotation[#, 0.9500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "0.9750000000000001`"],
          Annotation[#, 0.9750000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "1.`"],
          Annotation[#, 1., "Tooltip"]& ]}, 
        {GrayLevel[0], InsetBox["0.`", {1, 1}, {-1, 2}], 
         InsetBox["0.025`", 
          NCache[{Rational[12, 139], Rational[101, 104]}, {
           0.08633093525179857, 0.9711538461538461}], {-1, 2}], 
         InsetBox["0.05`", 
          NCache[{Rational[31, 417], Rational[101, 104]}, {
           0.07434052757793765, 0.9711538461538461}], {-1, 2}], 
         InsetBox["0.07500000000000001`", 
          NCache[{Rational[17, 278], Rational[25, 26]}, {0.06115107913669065, 
           0.9615384615384616}], {-1, 2}], 
         InsetBox["0.1`", 
          NCache[{Rational[25, 417], Rational[25, 26]}, {0.05995203836930456, 
           0.9615384615384616}], {-1, 2}], 
         InsetBox["0.125`", 
          NCache[{Rational[13, 278], Rational[99, 104]}, {
           0.046762589928057555`, 0.9519230769230769}], {-1, 2}], 
         InsetBox["0.15000000000000002`", 
          NCache[{Rational[13, 278], Rational[99, 104]}, {
           0.046762589928057555`, 0.9519230769230769}], {-1, 2}], 
         InsetBox["0.17500000000000002`", 
          NCache[{Rational[35, 834], Rational[99, 104]}, {0.04196642685851319,
            0.9519230769230769}], {-1, 2}], 
         InsetBox["0.2`", 
          NCache[{Rational[11, 278], Rational[49, 52]}, {
           0.039568345323741004`, 0.9423076923076923}], {-1, 2}], 
         InsetBox["0.225`", 
          NCache[{Rational[16, 417], Rational[49, 52]}, {0.03836930455635491, 
           0.9423076923076923}], {-1, 2}], 
         InsetBox["0.25`", 
          NCache[{Rational[31, 834], Rational[49, 52]}, {0.03717026378896882, 
           0.9423076923076923}], {-1, 2}], 
         InsetBox["0.275`", 
          NCache[{Rational[5, 139], Rational[12, 13]}, {0.03597122302158273, 
           0.9230769230769231}], {-1, 2}], 
         InsetBox["0.30000000000000004`", 
          NCache[{Rational[14, 417], Rational[95, 104]}, {0.03357314148681055,
            0.9134615384615384}], {-1, 2}], 
         InsetBox["0.325`", 
          NCache[{Rational[9, 278], Rational[93, 104]}, {0.03237410071942446, 
           0.8942307692307693}], {-1, 2}], 
         InsetBox["0.35000000000000003`", 
          NCache[{Rational[25, 834], Rational[23, 26]}, {0.02997601918465228, 
           0.8846153846153846}], {-1, 2}], 
         InsetBox["0.375`", 
          NCache[{Rational[11, 417], Rational[45, 52]}, {
           0.026378896882494004`, 0.8653846153846154}], {-1, 2}], 
         InsetBox["0.4`", 
          NCache[{Rational[7, 278], Rational[45, 52]}, {0.025179856115107913`,
            0.8653846153846154}], {-1, 2}], 
         InsetBox["0.42500000000000004`", 
          NCache[{Rational[10, 417], Rational[89, 104]}, {
           0.023980815347721823`, 0.8557692307692307}], {-1, 2}], 
         InsetBox["0.45`", 
          NCache[{Rational[10, 417], Rational[11, 13]}, {
           0.023980815347721823`, 0.8461538461538461}], {-1, 2}], 
         InsetBox["0.47500000000000003`", 
          NCache[{Rational[3, 139], Rational[43, 52]}, {0.02158273381294964, 
           0.8269230769230769}], {-1, 2}], 
         InsetBox["0.5`", 
          NCache[{Rational[17, 834], Rational[85, 104]}, {0.02038369304556355,
            0.8173076923076923}], {-1, 2}], 
         InsetBox["0.525`", 
          NCache[{Rational[8, 417], Rational[41, 52]}, {0.019184652278177457`,
            0.7884615384615384}], {-1, 2}], 
         InsetBox["0.55`", 
          NCache[{Rational[5, 278], Rational[10, 13]}, {0.017985611510791366`,
            0.7692307692307693}], {-1, 2}], 
         InsetBox["0.5750000000000001`", 
          NCache[{Rational[5, 278], Rational[3, 4]}, {0.017985611510791366`, 
           0.75}], {-1, 2}], 
         InsetBox["0.6000000000000001`", 
          NCache[{Rational[7, 417], Rational[37, 52]}, {0.016786570743405275`,
            0.7115384615384616}], {-1, 2}], 
         InsetBox["0.625`", 
          NCache[{Rational[13, 834], Rational[9, 13]}, {0.015587529976019185`,
            0.6923076923076923}], {-1, 2}], 
         InsetBox["0.65`", 
          NCache[{Rational[2, 139], Rational[71, 104]}, {
           0.014388489208633094`, 0.6826923076923077}], {-1, 2}], 
         InsetBox["0.675`", 
          NCache[{Rational[5, 417], Rational[69, 104]}, {
           0.011990407673860911`, 0.6634615384615384}], {-1, 2}], 
         InsetBox["0.7000000000000001`", 
          NCache[{Rational[3, 278], Rational[67, 104]}, {0.01079136690647482, 
           0.6442307692307693}], {-1, 2}], 
         InsetBox["0.7250000000000001`", 
          NCache[{Rational[4, 417], Rational[5, 8]}, {0.009592326139088728, 
           0.625}], {-1, 2}], 
         InsetBox["0.75`", 
          NCache[{Rational[7, 834], Rational[15, 26]}, {0.008393285371702638, 
           0.5769230769230769}], {-1, 2}], 
         InsetBox["0.775`", 
          NCache[{Rational[5, 834], Rational[25, 52]}, {0.005995203836930456, 
           0.4807692307692308}], {-1, 2}], 
         InsetBox["0.8`", 
          NCache[{Rational[2, 417], Rational[6, 13]}, {0.004796163069544364, 
           0.46153846153846156`}], {-1, 2}], 
         InsetBox["0.8250000000000001`", 
          NCache[{Rational[1, 278], Rational[17, 52]}, {
           0.0035971223021582736`, 0.3269230769230769}], {-1, 2}], 
         InsetBox["0.8500000000000001`", 
          NCache[{Rational[1, 834], Rational[11, 52]}, {0.001199040767386091, 
           0.21153846153846154`}], {-1, 2}], 
         InsetBox["0.875`", {0, 0}, {-1, 2}], 
         InsetBox["0.9`", {0, 0}, {-1, 2}], 
         InsetBox["0.925`", {0, 0}, {-1, 2}], 
         InsetBox["0.9500000000000001`", {0, 0}, {-1, 2}], 
         InsetBox["0.9750000000000001`", {0, 0}, {-1, 2}], 
         InsetBox["1.`", {0, 0}, {-1, 2}]}}},
      AspectRatio->1,
      Frame->True,
      FrameLabel->{
        FormBox[
         StyleBox[
         "\"FPR, false positive rate\"", Larger, Bold, StripOnInput -> False],
          TraditionalForm], 
        FormBox[
         StyleBox[
         "\"TPR, true positive rate\"", Larger, Bold, StripOnInput -> False], 
         TraditionalForm]},
      GridLines->Automatic,
      ImageSize->Medium]}], ",", 
    RowBox[{"1", "\[Rule]", 
     GraphicsBox[{
       {RGBColor[
         NCache[
          Rational[5, 9], 0.5555555555555556], 
         NCache[
          Rational[5, 9], 0.5555555555555556], 1], 
        LineBox[NCache[{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {
           Rational[41, 52], Rational[833, 834]}, {
           Rational[35, 52], Rational[277, 278]}, {
           Rational[7, 13], Rational[415, 417]}, {
           Rational[27, 52], Rational[829, 834]}, {
           Rational[11, 26], Rational[827, 834]}, {
           Rational[3, 8], Rational[413, 417]}, {
           Rational[37, 104], Rational[275, 278]}, {
           Rational[35, 104], Rational[412, 417]}, {
           Rational[33, 104], Rational[137, 139]}, {
           Rational[4, 13], Rational[821, 834]}, {
           Rational[15, 52], Rational[410, 417]}, {
           Rational[1, 4], Rational[273, 278]}, {
           Rational[3, 13], Rational[273, 278]}, {
           Rational[11, 52], Rational[409, 417]}, {
           Rational[19, 104], Rational[817, 834]}, {
           Rational[9, 52], Rational[136, 139]}, {
           Rational[2, 13], Rational[407, 417]}, {
           Rational[15, 104], Rational[407, 417]}, {
           Rational[7, 52], Rational[271, 278]}, {
           Rational[7, 52], Rational[406, 417]}, {
           Rational[3, 26], Rational[809, 834]}, {
           Rational[11, 104], Rational[269, 278]}, {
           Rational[9, 104], Rational[403, 417]}, {
           Rational[1, 13], Rational[134, 139]}, {
           Rational[3, 52], Rational[803, 834]}, {
           Rational[3, 52], Rational[401, 417]}, {
           Rational[3, 52], Rational[267, 278]}, {
           Rational[5, 104], Rational[799, 834]}, {
           Rational[5, 104], Rational[265, 278]}, {
           Rational[5, 104], Rational[265, 278]}, {
           Rational[1, 26], Rational[392, 417]}, {
           Rational[1, 26], Rational[261, 278]}, {
           Rational[3, 104], Rational[386, 417]}, {
           Rational[3, 104], Rational[127, 139]}, {0, 0}}, {{1, 1}, {1, 1}, {
           1, 1}, {1, 1}, {1, 1}, {1, 1}, {0.7884615384615384, 
           0.9988009592326139}, {0.6730769230769231, 0.9964028776978417}, {
           0.5384615384615384, 0.9952038369304557}, {0.5192307692307693, 
           0.9940047961630696}, {0.4230769230769231, 0.9916067146282974}, {
           0.375, 0.9904076738609112}, {0.3557692307692308, 
           0.9892086330935251}, {0.33653846153846156`, 0.988009592326139}, {
           0.3173076923076923, 0.9856115107913669}, {0.3076923076923077, 
           0.9844124700239808}, {0.28846153846153844`, 0.9832134292565947}, {
           0.25, 0.9820143884892086}, {0.23076923076923078`, 
           0.9820143884892086}, {0.21153846153846154`, 0.9808153477218226}, {
           0.18269230769230768`, 0.9796163069544365}, {0.17307692307692307`, 
           0.9784172661870504}, {0.15384615384615385`, 0.9760191846522782}, {
           0.14423076923076922`, 0.9760191846522782}, {0.1346153846153846, 
           0.9748201438848921}, {0.1346153846153846, 0.973621103117506}, {
           0.11538461538461539`, 0.9700239808153477}, {0.10576923076923077`, 
           0.9676258992805755}, {0.08653846153846154, 0.9664268585131894}, {
           0.07692307692307693, 0.9640287769784173}, {0.057692307692307696`, 
           0.9628297362110312}, {0.057692307692307696`, 0.9616306954436451}, {
           0.057692307692307696`, 0.960431654676259}, {0.04807692307692308, 
           0.9580335731414868}, {0.04807692307692308, 0.9532374100719424}, {
           0.04807692307692308, 0.9532374100719424}, {0.038461538461538464`, 
           0.9400479616306955}, {0.038461538461538464`, 0.9388489208633094}, {
           0.028846153846153848`, 0.9256594724220624}, {0.028846153846153848`,
            0.9136690647482014}, {0, 0}}]]}, 
       {RGBColor[
         NCache[
          Rational[1, 3], 0.3333333333333333], 
         NCache[
          Rational[1, 3], 0.3333333333333333], 1], PointSize[0.02], 
        LineBox[NCache[{{1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {1, 1}, {
           Rational[41, 52], Rational[833, 834]}, {
           Rational[35, 52], Rational[277, 278]}, {
           Rational[7, 13], Rational[415, 417]}, {
           Rational[27, 52], Rational[829, 834]}, {
           Rational[11, 26], Rational[827, 834]}, {
           Rational[3, 8], Rational[413, 417]}, {
           Rational[37, 104], Rational[275, 278]}, {
           Rational[35, 104], Rational[412, 417]}, {
           Rational[33, 104], Rational[137, 139]}, {
           Rational[4, 13], Rational[821, 834]}, {
           Rational[15, 52], Rational[410, 417]}, {
           Rational[1, 4], Rational[273, 278]}, {
           Rational[3, 13], Rational[273, 278]}, {
           Rational[11, 52], Rational[409, 417]}, {
           Rational[19, 104], Rational[817, 834]}, {
           Rational[9, 52], Rational[136, 139]}, {
           Rational[2, 13], Rational[407, 417]}, {
           Rational[15, 104], Rational[407, 417]}, {
           Rational[7, 52], Rational[271, 278]}, {
           Rational[7, 52], Rational[406, 417]}, {
           Rational[3, 26], Rational[809, 834]}, {
           Rational[11, 104], Rational[269, 278]}, {
           Rational[9, 104], Rational[403, 417]}, {
           Rational[1, 13], Rational[134, 139]}, {
           Rational[3, 52], Rational[803, 834]}, {
           Rational[3, 52], Rational[401, 417]}, {
           Rational[3, 52], Rational[267, 278]}, {
           Rational[5, 104], Rational[799, 834]}, {
           Rational[5, 104], Rational[265, 278]}, {
           Rational[5, 104], Rational[265, 278]}, {
           Rational[1, 26], Rational[392, 417]}, {
           Rational[1, 26], Rational[261, 278]}, {
           Rational[3, 104], Rational[386, 417]}, {
           Rational[3, 104], Rational[127, 139]}, {0, 0}}, {{1, 1}, {1, 1}, {
           1, 1}, {1, 1}, {1, 1}, {1, 1}, {0.7884615384615384, 
           0.9988009592326139}, {0.6730769230769231, 0.9964028776978417}, {
           0.5384615384615384, 0.9952038369304557}, {0.5192307692307693, 
           0.9940047961630696}, {0.4230769230769231, 0.9916067146282974}, {
           0.375, 0.9904076738609112}, {0.3557692307692308, 
           0.9892086330935251}, {0.33653846153846156`, 0.988009592326139}, {
           0.3173076923076923, 0.9856115107913669}, {0.3076923076923077, 
           0.9844124700239808}, {0.28846153846153844`, 0.9832134292565947}, {
           0.25, 0.9820143884892086}, {0.23076923076923078`, 
           0.9820143884892086}, {0.21153846153846154`, 0.9808153477218226}, {
           0.18269230769230768`, 0.9796163069544365}, {0.17307692307692307`, 
           0.9784172661870504}, {0.15384615384615385`, 0.9760191846522782}, {
           0.14423076923076922`, 0.9760191846522782}, {0.1346153846153846, 
           0.9748201438848921}, {0.1346153846153846, 0.973621103117506}, {
           0.11538461538461539`, 0.9700239808153477}, {0.10576923076923077`, 
           0.9676258992805755}, {0.08653846153846154, 0.9664268585131894}, {
           0.07692307692307693, 0.9640287769784173}, {0.057692307692307696`, 
           0.9628297362110312}, {0.057692307692307696`, 0.9616306954436451}, {
           0.057692307692307696`, 0.960431654676259}, {0.04807692307692308, 
           0.9580335731414868}, {0.04807692307692308, 0.9532374100719424}, {
           0.04807692307692308, 0.9532374100719424}, {0.038461538461538464`, 
           0.9400479616306955}, {0.038461538461538464`, 0.9388489208633094}, {
           0.028846153846153848`, 0.9256594724220624}, {0.028846153846153848`,
            0.9136690647482014}, {0, 0}}]], {
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.`"],
          Annotation[#, 0., "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.025`"],
          Annotation[#, 0.025, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.05`"],
          Annotation[#, 0.05, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.07500000000000001`"],
          Annotation[#, 0.07500000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.1`"],
          Annotation[#, 0.1, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{1, 1}],
           "0.125`"],
          Annotation[#, 0.125, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[41, 52], Rational[833, 834]}, {
             0.7884615384615384, 0.9988009592326139}]],
           "0.15000000000000002`"],
          Annotation[#, 0.15000000000000002`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[35, 52], Rational[277, 278]}, {
             0.6730769230769231, 0.9964028776978417}]],
           "0.17500000000000002`"],
          Annotation[#, 0.17500000000000002`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[7, 13], Rational[415, 417]}, {0.5384615384615384,
              0.9952038369304557}]],
           "0.2`"],
          Annotation[#, 0.2, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[27, 52], Rational[829, 834]}, {
             0.5192307692307693, 0.9940047961630696}]],
           "0.225`"],
          Annotation[#, 0.225, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[11, 26], Rational[827, 834]}, {
             0.4230769230769231, 0.9916067146282974}]],
           "0.25`"],
          Annotation[#, 0.25, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 8], Rational[413, 417]}, {0.375, 
             0.9904076738609112}]],
           "0.275`"],
          Annotation[#, 0.275, "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           PointBox[
            NCache[{Rational[37, 104], Rational[275, 278]}, {
             0.3557692307692308, 0.9892086330935251}]],
           "0.30000000000000004`"],
          Annotation[#, 0.30000000000000004`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[35, 104], Rational[412, 417]}, {
             0.33653846153846156`, 0.988009592326139}]],
           "0.325`"],
          Annotation[#, 0.325, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[33, 104], Rational[137, 139]}, {
             0.3173076923076923, 0.9856115107913669}]],
           "0.35000000000000003`"],
          Annotation[#, 0.35000000000000003`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[4, 13], Rational[821, 834]}, {0.3076923076923077,
              0.9844124700239808}]],
           "0.375`"],
          Annotation[#, 0.375, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[15, 52], Rational[410, 417]}, {
             0.28846153846153844`, 0.9832134292565947}]],
           "0.4`"],
          Annotation[#, 0.4, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 4], Rational[273, 278]}, {0.25, 
             0.9820143884892086}]],
           "0.42500000000000004`"],
          Annotation[#, 0.42500000000000004`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 13], Rational[273, 278]}, {
             0.23076923076923078`, 0.9820143884892086}]],
           "0.45`"],
          Annotation[#, 0.45, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[11, 52], Rational[409, 417]}, {
             0.21153846153846154`, 0.9808153477218226}]],
           "0.47500000000000003`"],
          Annotation[#, 0.47500000000000003`, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[19, 104], Rational[817, 834]}, {
             0.18269230769230768`, 0.9796163069544365}]],
           "0.5`"],
          Annotation[#, 0.5, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[9, 52], Rational[136, 139]}, {
             0.17307692307692307`, 0.9784172661870504}]],
           "0.525`"],
          Annotation[#, 0.525, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[2, 13], Rational[407, 417]}, {
             0.15384615384615385`, 0.9760191846522782}]],
           "0.55`"],
          Annotation[#, 0.55, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[15, 104], Rational[407, 417]}, {
             0.14423076923076922`, 0.9760191846522782}]],
           "0.5750000000000001`"],
          Annotation[#, 0.5750000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[7, 52], Rational[271, 278]}, {0.1346153846153846,
              0.9748201438848921}]],
           "0.6000000000000001`"],
          Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[7, 52], Rational[406, 417]}, {0.1346153846153846,
              0.973621103117506}]],
           "0.625`"],
          Annotation[#, 0.625, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 26], Rational[809, 834]}, {
             0.11538461538461539`, 0.9700239808153477}]],
           "0.65`"],
          Annotation[#, 0.65, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[11, 104], Rational[269, 278]}, {
             0.10576923076923077`, 0.9676258992805755}]],
           "0.675`"],
          Annotation[#, 0.675, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[9, 104], Rational[403, 417]}, {
             0.08653846153846154, 0.9664268585131894}]],
           "0.7000000000000001`"],
          Annotation[#, 0.7000000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 13], Rational[134, 139]}, {
             0.07692307692307693, 0.9640287769784173}]],
           "0.7250000000000001`"],
          Annotation[#, 0.7250000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 52], Rational[803, 834]}, {
             0.057692307692307696`, 0.9628297362110312}]],
           "0.75`"],
          Annotation[#, 0.75, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 52], Rational[401, 417]}, {
             0.057692307692307696`, 0.9616306954436451}]],
           "0.775`"],
          Annotation[#, 0.775, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 52], Rational[267, 278]}, {
             0.057692307692307696`, 0.960431654676259}]],
           "0.8`"],
          Annotation[#, 0.8, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[5, 104], Rational[799, 834]}, {
             0.04807692307692308, 0.9580335731414868}]],
           "0.8250000000000001`"],
          Annotation[#, 0.8250000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[5, 104], Rational[265, 278]}, {
             0.04807692307692308, 0.9532374100719424}]],
           "0.8500000000000001`"],
          Annotation[#, 0.8500000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[5, 104], Rational[265, 278]}, {
             0.04807692307692308, 0.9532374100719424}]],
           "0.875`"],
          Annotation[#, 0.875, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 26], Rational[392, 417]}, {
             0.038461538461538464`, 0.9400479616306955}]],
           "0.9`"],
          Annotation[#, 0.9, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[1, 26], Rational[261, 278]}, {
             0.038461538461538464`, 0.9388489208633094}]],
           "0.925`"],
          Annotation[#, 0.925, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 104], Rational[386, 417]}, {
             0.028846153846153848`, 0.9256594724220624}]],
           "0.9500000000000001`"],
          Annotation[#, 0.9500000000000001, "Tooltip"]& ], 
         TagBox[
          
          TooltipBox[
           PointBox[
            NCache[{Rational[3, 104], Rational[127, 139]}, {
             0.028846153846153848`, 0.9136690647482014}]],
           "0.9750000000000001`"],
          Annotation[#, 0.9750000000000001, "Tooltip"]& ], 
         TagBox[
          TooltipBox[PointBox[{0, 0}],
           "1.`"],
          Annotation[#, 1., "Tooltip"]& ]}, 
        {GrayLevel[0], InsetBox["0.`", {1, 1}, {-1, 2}], 
         InsetBox["0.025`", {1, 1}, {-1, 2}], 
         InsetBox["0.05`", {1, 1}, {-1, 2}], 
         InsetBox["0.07500000000000001`", {1, 1}, {-1, 2}], 
         InsetBox["0.1`", {1, 1}, {-1, 2}], 
         InsetBox["0.125`", {1, 1}, {-1, 2}], 
         InsetBox["0.15000000000000002`", 
          NCache[{Rational[41, 52], Rational[833, 834]}, {0.7884615384615384, 
           0.9988009592326139}], {-1, 2}], 
         InsetBox["0.17500000000000002`", 
          NCache[{Rational[35, 52], Rational[277, 278]}, {0.6730769230769231, 
           0.9964028776978417}], {-1, 2}], 
         InsetBox["0.2`", 
          NCache[{Rational[7, 13], Rational[415, 417]}, {0.5384615384615384, 
           0.9952038369304557}], {-1, 2}], 
         InsetBox["0.225`", 
          NCache[{Rational[27, 52], Rational[829, 834]}, {0.5192307692307693, 
           0.9940047961630696}], {-1, 2}], 
         InsetBox["0.25`", 
          NCache[{Rational[11, 26], Rational[827, 834]}, {0.4230769230769231, 
           0.9916067146282974}], {-1, 2}], 
         InsetBox["0.275`", 
          NCache[{Rational[3, 8], Rational[413, 417]}, {0.375, 
           0.9904076738609112}], {-1, 2}], 
         InsetBox["0.30000000000000004`", 
          NCache[{Rational[37, 104], Rational[275, 278]}, {0.3557692307692308,
            0.9892086330935251}], {-1, 2}], 
         InsetBox["0.325`", 
          NCache[{Rational[35, 104], Rational[412, 417]}, {
           0.33653846153846156`, 0.988009592326139}], {-1, 2}], 
         InsetBox["0.35000000000000003`", 
          NCache[{Rational[33, 104], Rational[137, 139]}, {0.3173076923076923,
            0.9856115107913669}], {-1, 2}], 
         InsetBox["0.375`", 
          NCache[{Rational[4, 13], Rational[821, 834]}, {0.3076923076923077, 
           0.9844124700239808}], {-1, 2}], 
         InsetBox["0.4`", 
          NCache[{Rational[15, 52], Rational[410, 417]}, {
           0.28846153846153844`, 0.9832134292565947}], {-1, 2}], 
         InsetBox["0.42500000000000004`", 
          NCache[{Rational[1, 4], Rational[273, 278]}, {0.25, 
           0.9820143884892086}], {-1, 2}], 
         InsetBox["0.45`", 
          NCache[{Rational[3, 13], Rational[273, 278]}, {0.23076923076923078`,
            0.9820143884892086}], {-1, 2}], 
         InsetBox["0.47500000000000003`", 
          NCache[{Rational[11, 52], Rational[409, 417]}, {
           0.21153846153846154`, 0.9808153477218226}], {-1, 2}], 
         InsetBox["0.5`", 
          NCache[{Rational[19, 104], Rational[817, 834]}, {
           0.18269230769230768`, 0.9796163069544365}], {-1, 2}], 
         InsetBox["0.525`", 
          NCache[{Rational[9, 52], Rational[136, 139]}, {0.17307692307692307`,
            0.9784172661870504}], {-1, 2}], 
         InsetBox["0.55`", 
          NCache[{Rational[2, 13], Rational[407, 417]}, {0.15384615384615385`,
            0.9760191846522782}], {-1, 2}], 
         InsetBox["0.5750000000000001`", 
          NCache[{Rational[15, 104], Rational[407, 417]}, {
           0.14423076923076922`, 0.9760191846522782}], {-1, 2}], 
         InsetBox["0.6000000000000001`", 
          NCache[{Rational[7, 52], Rational[271, 278]}, {0.1346153846153846, 
           0.9748201438848921}], {-1, 2}], 
         InsetBox["0.625`", 
          NCache[{Rational[7, 52], Rational[406, 417]}, {0.1346153846153846, 
           0.973621103117506}], {-1, 2}], 
         InsetBox["0.65`", 
          NCache[{Rational[3, 26], Rational[809, 834]}, {0.11538461538461539`,
            0.9700239808153477}], {-1, 2}], 
         InsetBox["0.675`", 
          NCache[{Rational[11, 104], Rational[269, 278]}, {
           0.10576923076923077`, 0.9676258992805755}], {-1, 2}], 
         InsetBox["0.7000000000000001`", 
          NCache[{Rational[9, 104], Rational[403, 417]}, {0.08653846153846154,
            0.9664268585131894}], {-1, 2}], 
         InsetBox["0.7250000000000001`", 
          NCache[{Rational[1, 13], Rational[134, 139]}, {0.07692307692307693, 
           0.9640287769784173}], {-1, 2}], 
         InsetBox["0.75`", 
          NCache[{Rational[3, 52], Rational[803, 834]}, {
           0.057692307692307696`, 0.9628297362110312}], {-1, 2}], 
         InsetBox["0.775`", 
          NCache[{Rational[3, 52], Rational[401, 417]}, {
           0.057692307692307696`, 0.9616306954436451}], {-1, 2}], 
         InsetBox["0.8`", 
          NCache[{Rational[3, 52], Rational[267, 278]}, {
           0.057692307692307696`, 0.960431654676259}], {-1, 2}], 
         InsetBox["0.8250000000000001`", 
          NCache[{Rational[5, 104], Rational[799, 834]}, {0.04807692307692308,
            0.9580335731414868}], {-1, 2}], 
         InsetBox["0.8500000000000001`", 
          NCache[{Rational[5, 104], Rational[265, 278]}, {0.04807692307692308,
            0.9532374100719424}], {-1, 2}], 
         InsetBox["0.875`", 
          NCache[{Rational[5, 104], Rational[265, 278]}, {0.04807692307692308,
            0.9532374100719424}], {-1, 2}], 
         InsetBox["0.9`", 
          NCache[{Rational[1, 26], Rational[392, 417]}, {
           0.038461538461538464`, 0.9400479616306955}], {-1, 2}], 
         InsetBox["0.925`", 
          NCache[{Rational[1, 26], Rational[261, 278]}, {
           0.038461538461538464`, 0.9388489208633094}], {-1, 2}], 
         InsetBox["0.9500000000000001`", 
          NCache[{Rational[3, 104], Rational[386, 417]}, {
           0.028846153846153848`, 0.9256594724220624}], {-1, 2}], 
         InsetBox["0.9750000000000001`", 
          NCache[{Rational[3, 104], Rational[127, 139]}, {
           0.028846153846153848`, 0.9136690647482014}], {-1, 2}], 
         InsetBox["1.`", {0, 0}, {-1, 2}]}}},
      AspectRatio->1,
      Frame->True,
      FrameLabel->{
        FormBox[
         StyleBox[
         "\"FPR, false positive rate\"", Larger, Bold, StripOnInput -> False],
          TraditionalForm], 
        FormBox[
         StyleBox[
         "\"TPR, true positive rate\"", Larger, Bold, StripOnInput -> False], 
         TraditionalForm]},
      GridLines->Automatic,
      ImageSize->Medium]}]}], "\[RightAssociation]"}]}]], "Echo",
 CellChangeTimes->{
  3.7343371031599207`*^9},ExpressionUUID->"98b6cf6e-dedd-49df-801e-\
c2ac2f757f88"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"value:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"Accuracy\"\>", "\[Rule]", "0.9594882729211087`"}], ",", 
    RowBox[{"\<\"Precision\"\>", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "\[Rule]", "0.7619047619047619`"}], ",", 
       RowBox[{"1", "\[Rule]", "0.9901477832512315`"}]}], 
      "\[RightAssociation]"}]}], ",", 
    RowBox[{"\<\"Recall\"\>", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "\[Rule]", "0.9230769230769231`"}], ",", 
       RowBox[{"1", "\[Rule]", "0.9640287769784172`"}]}], 
      "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}]], "Echo",
 CellChangeTimes->{
  3.734337103251272*^9},ExpressionUUID->"be322c3f-0f58-49a0-8113-\
498255146c6c"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"ROC line plot(s):\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "\[Rule]", 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.01388888888888889], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxVkk9Kw1AQhx9eQS/gSlzXXRdzgwoeIaAu3fUO9QYKde9SXLkTrEJRQbFI
ilpqTWKaf/UIJm++jDi8kPzem/nm94ZsBkd7+2vOue36ad7/40dOT3xI92K9
Xiv0uemdThOXsluMesWo4vzKtHKuJdjq16si/8b04UETd6a1fix9v1HJ44MP
08p7Mq35z3IWDobhoIT/It5et6R+ItPmeFjQ71W8vV4BL5QNf6Ec3tS08t7E
2wtyeO/cP4c3w38Gb46/jPw5fpbwP/GTUr+gLqXfF/NL2I/gJfAiOW7Kwxhe
DD+Gl8CP4H0bp+2jfhfwUvrN4C2Z5we8TG79uCbwcu5/D6+do3PK+9PKK00r
rzKtvJXp9r9rv34BKl0Ngw==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.01388888888888889], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQjQo+2M+aCQb26opd+09IboPyV9o//LhN7Df7ZnsT
YxDYbP99HfMuQ//1UPmd9ttu2M/g2LTOHmLOAftXi6+quHxcDlV/GM5PTwOB
Y/bPvI7NnV+zFKr/pH3yPLsoX6cl9mfPgIG90okqC5Wli6HmXYDavxiq/qL9
AunPXy5mLYKaf9leLj97Y73BQqj+K/Z3ZyzvD5u8AGrfNaj75kHNu2Gvf3nF
WUHm2VDzbtqvVQN5eCbUvNv22lUz3XL7ZkDNuwPnQ8y7Bw2faVDzHtgvLWGq
Kbs/Bar+AdT9k6HmP4S6dxJU/yM4H2LfY6j7J0LNe2Jv0Xr8dtSbfqh5T+xN
dHaEbCvvhZr3FOqeDqh5z6DuaYOa9xxqfzPUvBdQ8xuh5r2A6q+AmvcSqr4Y
at4rqH25UPNeQ+WDoea9sYelGIh5CD7EvLdwPsS8d3A+xLz3cD4s3cFYAIJh
DUs=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.01388888888888889], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQDQPTbc5mOCTtsZ81EwzsL1Ux3p6z7hGUv9K+5JKd
B9uVx/YmxiCw2X7VkZAkLcOnUPmd9qFg8NQeYtoB+/yqy7PvfXkGVX8Yzk9P
A4Fj9rd0/2T5LHkO1X/S/v4tg7OxH57bnz0DBvY/GuWB6AXUvAv2It9abBP9
X0DVX7SXaEsEohdQ8y/bb68o6lbf/gKq/wqUfgG175r9zEmaQPQSat4N+7zb
23Jvb3sJNe+mvfL80mbNTy+h5t2251t0vPyhwiuoOXfs9Rfubfkm9Apq3j37
JPUyIHoFNe+B/epVIABT/8B+k53JtfZjr6DmP7TXWL9wT9snmP5H9tejstdu
vfYKat9j+5eLuvV2vYCZ98ReGgxeQ817Yh9wSNp3bvxrqHlP7Z+Vb93B+fk1
1Lxn9nHOlbxPTd9AzXtu/+R4v7x93RuoeS/sP642nCi34g08XMRjSy66ir+F
mvfSft6Nzrk3Ot9CzXtlX3uNd9mJ9LdQ817bv/IFxeA7ewCLzg94
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.01388888888888889], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJw10V1IU2EYB/DVVUVDxYuuZBO0oQiWBgWKf70QArsKBB1+jIXOWeTm8EZx
oIgw60ZFQ0VBLwbeOOYHuLmVr4t0y62OE1MU8dupO8fhhQpJeeY5zx8Ohz/v
8/zeizdV3/C25r5CocgQv/if0p8frCvUezA4cBco5zbW/SZe7uNIe2UVThd5
vMiNZwp/e5bCj1SCfO5Ci61+vlsjQNLm8YCVhhxWQZ73waIa/twsdkNtPD+Q
UOKbzhmlfT9+jdraZ8cFBJfvAnXkU07BJHm/ceEKfPe5aZ5D/83EvxUn+WF0
ao8sZW7aX8V26GvQ4KT71tBrPU/nXeSt43WsSte4QN4G/nxTtl4FyNuE0fLU
zQLkbYFp9cUcI28bW2vZvUOMvB28DM3u1jCa38FYSp5mzkH+Llh6ovqnnfb3
sN/k5NR9dN8+BF3Y6Gkm7wDapCt+2UzeATLYf/8XM3mH8F0wu95M3hGSK+/V
W+rIO8YNZ3rTUU1eBI9jXq0hn7wI+lY/Pn93Se97gpGsmYdNPC97p2hzqMq4
FnrvM+iOvQ0VabzsReF9Zs8SPkRlLwpDZlGPR+ySxyNYaLvuErvkCTCarNXl
Ype8czhm1IsasUteDE+UpuzL91HcAitDQsY=
             "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1.}, {0, 1.}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 1.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"TPR\"", "\"FPR\"", "\"PPV\"", "\"ACC\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
    RowBox[{"1", "\[Rule]", 
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.01388888888888889], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQjQo+2M+aCQb2qPyVcL6JMQhsRpPfCedD6ANo6g/b
zzn0OFf323v79DQQOGZ/xX21Z8ej91D9J+0LuPq3b73x3v7sGTCw5zlbpPr4
3HuoORfsXYKsGO12w9RftL8vIpefvfE91PzL9tXXGe/OWA7Tf8VefNZTr2Nz
YfZds/eXX6um2AUz74b964cTpvg1wMy7ad++pISppgxm3m175fSIgpU5MPPu
wPkQ8+7Z79e0uXctCWbeA/voN/I+LJEw9Q/sv69j3mXoDzP/ob2+yempPdYw
/Y/gfIh9j+1PfwNpgJn3xD5956TC5+ow857Yg3yfzwUz76l9URvr9FPf3kHN
e2bP5/mS5cebd1Dzntu7ndvwIOjmO6h5L+wfgbx7/h3UvBf2dcEVe9YefQc1
76W9lFiM1u3dMPNe2QfNVmYzWwEz77X9waWb9r5ugJn3Bs6HmPfGvhQYevdF
YOa9tRc8Gv+Ehxtm3jv7I4qacxnmv4Wa997+9m6+F8ds3qKlGwYGAMzrIHM=

             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.01388888888888889], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxdks9KAlEUxi++gr2AK3GtOxfnDQx6hIF02a538BEKpk2bWrSIIIgQNEWR
EipNRowYS0tr+vMIzdz768R4uMPlm3O+3zd/bs7b2drOGGMK8ZXs6fqR/T1b
ktbHqkvFpM7W+heq3d5cm2/LabYcr5XUqkl15SCo+0F9gb9PfyaDG1sySdp+
COdWynZgyvwd9wP4Q9mMOpWoM8Y/gv9A3lhsuzJS34YFDuFNxMvvxuse3lRz
He8R3gDeE89zzVwo1u71mA/FynwX/oy8Nv5n8q7Ie+H9W/Dmqh1vTn4D3oL8
S3iv5J3DeyPv7z8t8Z/A+9eOt1LteO98/yN4H6odL1LteBF5h/A+VTveF3wf
3rfq9Lkx5hcIFxRd
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.01388888888888889], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxdzUsoRGEUB/CJWUx5lBJZWEwphg0RNvwXHoWkKA1lMOWdRxhlI40NxUQW
YoMFJYUYiZXcTF6DYVzPuF5jMHMvNmIhc/nOFP++r9PpO+f3qfWN+RU+CoUi
ynPlSqnXOt6WWlwYGf4J/vZT3j4hXs7Cv/dlb/+rrf6b5/BsLTOeqd2oqpRj
gXYtPbGvy832N9GUuzue/OmGdecn0E7nFCn9RObtg9PqHqP1Ipu3obTDUDBp
Epl/CPuRU1U6JrJ9Owb5/oakeZH9xyPF1Zdt48g7gTKiOmhmh7xTXF3KIe8c
ePH1HIl5F4gMF0YsIRLzLjHUrPEciXkCMkNLWm0ZNC/gfcZ3JS5PYv41Fh2J
H8F62r+BpXP7db1OYv/d4qDcX5VvIO8OG4XKgEgDeXfoygsvTusm7x4HscY5
foA8B+raNOk9E+Q9wDhdXZU9S54Tks5cmMqR50Tz8V5IDEfeI3Q281YoR94T
2sN6fQKt5D2zPfJc3v63ujBufjXV8uS5UWNXq0p48kQIo8qvLIE8CcKVHAnf
5G885Q==
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.01388888888888889], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQO5Ec8+bS9+Yz9rJhjY/1p11qENzl9pnz4tqT8E
yDcxBoHN9qriS+8pweV32q/WnKr3seiNPcS0A/ZZp4zq9xfB1B+2NxTcU/FW
8619ehoIHLPXPB4syNP4Fqr/pP1r4YNR0Z/e2p89Awb2kZO/ez369RZq3gX7
xRlGoe0O76DqL9rfcWP5bpf8Dmr+ZXum3wVfj2S/g+q/Yr/ziOQ1r5J3UPuu
2f8xy18pCuRDzLthPzOirvZBMcy8m/bfGaOV02pg5t22j/uoqJ84DWbeHft1
Z2foLlwOM++efWRbpY/aBph5D+zNz+14mHoQpv6B/R+bvwYGB2HmP7QPkf/b
8OsATP8j+wBbBYv6kzD7Htubroyq8jwJM++JfXloYmnkAZh5T+xnZs3uz9wO
M++pvYUrx8nKdTDzntk3nZEP+7cNZt5z+5XbK9fzrYOZ98J+654J8pO3wcx7
YZ995dqMxWth5r20Xxjqa7hlCcy8V/bccz+/ODIbZt5r+yufTJtXVMDMe2P/
YkFnWHEFzLw39hazOp79VYCZ99Z+ZV7iIX4JmHnv7OdlndSec+At1Lz39peP
JhzTzITF7wd7lvtZGc1Re+wBYj07gg==
             "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
        DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
         PlotRange -> {{0, 1.}, {0, 1.}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 1.}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"TPR\"", "\"FPR\"", "\"PPV\"", "\"ACC\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}], 
   "\[RightAssociation]"}]}]], "Echo",
 CellChangeTimes->{
  3.734337106335457*^9},ExpressionUUID->"670e48c5-c43c-4974-ba63-\
4d8361a7d4d9"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"value:\"\>",
   "EchoLabel"], " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"None", "\[Rule]", "0.9616204690831557`"}], ",", 
    RowBox[{"1", "\[Rule]", "0.5053304904051172`"}], ",", 
    RowBox[{"2", "\[Rule]", "0.4914712153518124`"}]}], 
   "\[RightAssociation]"}]}]], "Echo",
 CellChangeTimes->{
  3.734337106551972*^9},ExpressionUUID->"57c28fa0-b558-4b6a-a189-\
7ad84f7da695"]
}, Open  ]]
}, Open  ]],

Cell["Extract classify function for later use:", "Text",
 CellChangeTimes->{{3.734333679440742*^9, 
  3.734333694575637*^9}},ExpressionUUID->"23d0def9-497d-4f13-b9eb-\
ba90e57b2759"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf2", "=", 
  RowBox[{"First", "@", 
   RowBox[{"Values", "[", 
    RowBox[{"res", "\[DoubleLongRightArrow]", "ClConTakeClassifier"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.734333642954015*^9, 
  3.7343336452547817`*^9}},ExpressionUUID->"9805495c-3233-4679-9902-\
e3e65eeca3e1"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {15., {0., 15.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.45], 
                 PointSize[0.13], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], {
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
               True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
               Ticks -> {None, None}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{",", "\",\"", 
                    RowBox[{"-", "1"}], "1"}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {15., {0., 15.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.45], 
                 PointSize[0.13], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], {
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
               True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
               Ticks -> {None, None}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{",", "\",\"", 
                    RowBox[{"-", "1"}], "1"}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["2812", "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.734320829632806*^9, {3.734333655028762*^9, 3.7343336665545073`*^9}, 
   3.734337106757214*^9},ExpressionUUID->"15c4e536-2977-439d-8da9-\
21abad1ea102"]
}, Open  ]],

Cell[" ", "Text",
 Editable->False,
 Selectable->False,
 CellFrame->{{0, 0}, {0, 0.5}},
 ShowCellBracket->False,
 CellMargins->{{0, 0}, {1, 1}},
 CellElementSpacings->{"CellMinHeight"->1},
 CellFrameMargins->0,
 CellFrameColor->RGBColor[0, 0, 1],
 CellSize->{
  Inherited, 3},ExpressionUUID->"f2bfe543-f7da-431c-9c97-4dfb2a3b8e57"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.2.2 SVD with 7 dimensions", "Subsubsection",
 CellChangeTimes->{{3.734333709305853*^9, 
  3.73433372028762*^9}},ExpressionUUID->"3f839df3-a205-42ba-9b58-\
b1596553ba68"],

Cell["Let\[CloseCurlyQuote]s also try SVD with 7 dimensions:", "Text",
 CellChangeTimes->{{3.734319672399289*^9, 
  3.7343196875707817`*^9}},ExpressionUUID->"74b85640-940d-404a-bc9b-\
e5ecf58bdfd4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"svdRes2", "=", 
   RowBox[{"SingularValueDecomposition", "[", 
    RowBox[{
     RowBox[{"trainingData", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", "7"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.733718558849443*^9, 3.73371858024052*^9}, {
   3.7337372137612133`*^9, 3.7337372525265617`*^9}, 3.7342394094053164`*^9, {
   3.734240610596919*^9, 3.734240610978795*^9}, {3.734240652629642*^9, 
   3.734240653470974*^9}, 
   3.734320560958089*^9},ExpressionUUID->"6b9f66da-3d6e-4d0a-a075-\
7d7fbf6f4bc3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["U", "training"], ".", 
   SubscriptBox["S", "training"], ".", 
   SubsuperscriptBox["V", "training", "T"]}], " ", "=", " ", 
  SubscriptBox["M", "training"]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.734274490403389*^9, 3.7342745436479673`*^9}, {
   3.734274635697488*^9, 3.734274644632484*^9}, 
   3.734319131682995*^9},ExpressionUUID->"e96ff0e9-a994-4c8e-909e-\
e11d9a9dbfc6"],

Cell["Transform the training data accordingly:", "Text",
 CellChangeTimes->{{3.7337370681697063`*^9, 3.733737106611556*^9}, {
  3.734319712980113*^9, 
  3.7343197148700733`*^9}},ExpressionUUID->"f1248c2f-80cb-4b50-b56d-\
d1579d5c1278"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingData3", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
      "svdRes2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ".", 
      RowBox[{
      "svdRes2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "\[Rule]", 
     RowBox[{"trainingData", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RecordsSummary", "[", 
  RowBox[{"trainingData3", ",", 
   RowBox[{"Thread", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7337185524091463`*^9, {3.733718583491534*^9, 3.7337186442320347`*^9}, 
   3.734320609158383*^9, {3.734333787005662*^9, 3.734333791411681*^9}, {
   3.735391727833126*^9, 3.735391732304593*^9}, 
   3.735392759962418*^9},ExpressionUUID->"62651593-7b32-456c-8e62-\
a8724b0b01df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    TagBox[GridBox[{
       {
        StyleBox["\<\"1 column 1\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "298464.8798279784`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "84088.18938914101`"}]},
           {"\<\"Median\"\>", "80025.22357127462`"},
           {"\<\"Mean\"\>", "86291.326476229`"},
           {"\<\"3rd Qu\"\>", "258231.28751542617`"},
           {"\<\"Max\"\>", "469032.6303503021`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"2 column 2\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "288245.67755744274`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "55974.54683254688`"}]},
           {"\<\"Mean\"\>", 
            RowBox[{"-", "813.0647378710175`"}]},
           {"\<\"Median\"\>", "138.51150131378228`"},
           {"\<\"3rd Qu\"\>", "58351.286085177606`"},
           {"\<\"Max\"\>", "275835.55647975573`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"3 column 3\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "238981.48145114467`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "48335.82212146186`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "536.7489518378392`"}]},
           {"\<\"Mean\"\>", "165.23056409663056`"},
           {"\<\"3rd Qu\"\>", "49267.70718313781`"},
           {"\<\"Max\"\>", "266370.5389376106`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"4 column 4\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "242300.96051692154`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "44312.57066493484`"}]},
           {"\<\"Mean\"\>", "1313.4011159283448`"},
           {"\<\"Median\"\>", "1879.0696167346323`"},
           {"\<\"3rd Qu\"\>", "46498.64090428832`"},
           {"\<\"Max\"\>", "247579.31761994492`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"5 column 5\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "55310.772838594174`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "9052.987827529545`"}]},
           {"\<\"Median\"\>", "491.73443824360106`"},
           {"\<\"Mean\"\>", "817.6870065776881`"},
           {"\<\"3rd Qu\"\>", "10629.022896492053`"},
           {"\<\"Max\"\>", "63476.4402604102`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"6 column 6\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "4251.334746570027`"}]},
           {"\<\"1st Qu\"\>", "216.51367932756875`"},
           {"\<\"Median\"\>", "1286.9256001670085`"},
           {"\<\"Mean\"\>", "1289.7768247155016`"},
           {"\<\"3rd Qu\"\>", "2350.717711929632`"},
           {"\<\"Max\"\>", "7472.416528765462`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"7 column 7\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "7382.604042500249`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "1348.822765970083`"}]},
           {"\<\"Mean\"\>", "4.496848363166494`"},
           {"\<\"Median\"\>", "28.775074554745824`"},
           {"\<\"3rd Qu\"\>", "1312.734868643222`"},
           {"\<\"Max\"\>", "7103.798804749877`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}], "}"}], "\[Rule]", 
  RowBox[{"{", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 column 1\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "1"}]},
          {"\<\"Mean\"\>", "0.8093883357041252`"},
          {"\<\"1st Qu\"\>", "1"},
          {"\<\"3rd Qu\"\>", "1"},
          {"\<\"Max\"\>", "1"},
          {"\<\"Median\"\>", "1"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], "}"}]}]], "Output",
 CellChangeTimes->{
  3.73427445873269*^9, 3.734280209502047*^9, 3.7342809200328608`*^9, 
   3.7342813309252462`*^9, 3.734282583016828*^9, {3.734319719888673*^9, 
   3.7343197232465773`*^9}, {3.734320616774557*^9, 3.734320619608561*^9}, 
   3.734333812796982*^9, 3.734337121875174*^9, 3.734337174559565*^9, 
   3.7353917378038063`*^9},ExpressionUUID->"218ff0b8-eb27-47ec-8c62-\
4c7106f8fab1"]
}, Open  ]],

Cell["Checking the dimensions:", "Text",
 CellChangeTimes->{{3.734319740572364*^9, 
  3.734319745499462*^9}},ExpressionUUID->"1e8f1c41-655c-4565-bdcc-\
bb80f33b5707"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"svdRes2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
   "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", 
  RowBox[{"testData", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.733718719417676*^9, 3.733718748434816*^9}, {
   3.733718782520192*^9, 3.7337187864786167`*^9}, 
   3.734320626303875*^9},ExpressionUUID->"b2894b5b-2517-486f-8927-\
3023b702d442"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "10000"}], "}"}]], "Output",
 CellChangeTimes->{3.7342744588693657`*^9, 3.7342802097043047`*^9, 
  3.7342809203031816`*^9, 3.734281331124538*^9, 3.734282583243435*^9, 
  3.73431975784186*^9, 3.7343206309687023`*^9, 3.734333823122244*^9, 
  3.734337121947318*^9, 
  3.734337174599629*^9},ExpressionUUID->"a54af9a9-1275-4eac-b6bd-\
9a0e10a8e12d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"938", ",", "10000"}], "}"}]], "Output",
 CellChangeTimes->{3.7342744588693657`*^9, 3.7342802097043047`*^9, 
  3.7342809203031816`*^9, 3.734281331124538*^9, 3.734282583243435*^9, 
  3.73431975784186*^9, 3.7343206309687023`*^9, 3.734333823122244*^9, 
  3.734337121947318*^9, 
  3.73433717460633*^9},ExpressionUUID->"5af52806-c2cc-47f2-989f-3d8a9d2624d1"]
}, Open  ]],

Cell["\<\
Apply the data transformation (dimension reduction by SVD) to the test data \
part. Note that the SVD matrices used in the transformation were obtained \
from the training data only.\
\>", "Text",
 CellChangeTimes->{{3.733736883745222*^9, 3.733736912872486*^9}, {
   3.733737118378943*^9, 3.733737178827263*^9}, 
   3.7343198044059963`*^9},ExpressionUUID->"c989a9d4-472c-4dfe-bbb2-\
ad7ad05b51a3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testData3", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"testData", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ".", 
      RowBox[{
      "svdRes2", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
     ")"}], ".", 
    RowBox[{"Inverse", "[", 
     RowBox[{
     "svdRes2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData3", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"testData3", "\[Rule]", 
     RowBox[{"testData", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RecordsSummary", "[", 
  RowBox[{"testData3", ",", 
   RowBox[{"Thread", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.733718649734441*^9, 3.733718736572982*^9}, {
  3.7337188219755983`*^9, 3.733718874083675*^9}, {3.734320642885612*^9, 
  3.734320644542124*^9}, {3.734333836078952*^9, 
  3.7343338553649817`*^9}},ExpressionUUID->"d25f4c62-8bc8-483f-a78d-\
79b82476bfb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    TagBox[GridBox[{
       {
        StyleBox["\<\"1 column 1\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.024001844124864394`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.007030414103068487`"}]},
           {"\<\"Mean\"\>", "0.00899725089221423`"},
           {"\<\"Median\"\>", "0.010326086425787482`"},
           {"\<\"3rd Qu\"\>", "0.024572246884970343`"},
           {"\<\"Max\"\>", "0.042341566361470524`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"2 column 2\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.05411476587555333`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.013051305634162687`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "0.0006184865756406806`"}]},
           {"\<\"Mean\"\>", 
            RowBox[{"-", "0.0001617255543113534`"}]},
           {"\<\"3rd Qu\"\>", "0.012127114206045665`"},
           {"\<\"Max\"\>", "0.06456790367425295`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"3 column 3\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.06394812552060676`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.012503268652335807`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "0.0001423607341916512`"}]},
           {"\<\"Mean\"\>", "0.00025213106197032503`"},
           {"\<\"3rd Qu\"\>", "0.013550108945994298`"},
           {"\<\"Max\"\>", "0.0634837492352171`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"4 column 4\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.07020396550071525`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.013299117928514318`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "0.0007398357930264739`"}]},
           {"\<\"Mean\"\>", 
            RowBox[{"-", "0.0003337245318106858`"}]},
           {"\<\"3rd Qu\"\>", "0.012686860756834801`"},
           {"\<\"Max\"\>", "0.06450321958330309`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"5 column 5\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.06694412696302321`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.01080331001871847`"}]},
           {"\<\"Mean\"\>", "0.0013874597503435427`"},
           {"\<\"Median\"\>", "0.0016062183596467407`"},
           {"\<\"3rd Qu\"\>", "0.013732082796794045`"},
           {"\<\"Max\"\>", "0.07472022699633889`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"6 column 6\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.01693542661698315`"}]},
           {"\<\"1st Qu\"\>", "0.0010655308661008031`"},
           {"\<\"Mean\"\>", "0.006288698414964789`"},
           {"\<\"Median\"\>", "0.006402608321395125`"},
           {"\<\"3rd Qu\"\>", "0.011736707532188936`"},
           {"\<\"Max\"\>", "0.028604661782806`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"7 column 7\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "0.029456225856836313`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "0.0052642434058704154`"}]},
           {"\<\"Mean\"\>", "0.00002763446743894022`"},
           {"\<\"Median\"\>", "0.00016977014899804776`"},
           {"\<\"3rd Qu\"\>", "0.005473891089717792`"},
           {"\<\"Max\"\>", "0.027127645859689232`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}], "}"}], "\[Rule]", 
  RowBox[{"{", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 column 1\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "1"}]},
          {"\<\"Mean\"\>", "0.7782515991471215`"},
          {"\<\"1st Qu\"\>", "1"},
          {"\<\"3rd Qu\"\>", "1"},
          {"\<\"Max\"\>", "1"},
          {"\<\"Median\"\>", "1"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], "}"}]}]], "Output",
 CellChangeTimes->{3.7342744590393267`*^9, 3.734280209938685*^9, 
  3.734280494580769*^9, 3.734280920581485*^9, 3.734281331360343*^9, 
  3.734282583481284*^9, 3.734319855528644*^9, 3.734320650927387*^9, 
  3.734333859789681*^9, 3.7343371220716057`*^9, 3.734337174717094*^9, 
  3.735391775781987*^9, 
  3.735392107721092*^9},ExpressionUUID->"301119b1-db55-45c2-989d-\
2a4b848df045"]
}, Open  ]],

Cell["Running the classification workflow:", "Text",
 CellChangeTimes->{{3.733753337913196*^9, 
  3.73375336467585*^9}},ExpressionUUID->"c00f91de-6223-4efd-8d38-\
cfb204353234"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimensions", "[", "trainingData3", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "testData3", "]"}]}], "Input",
 CellChangeTimes->{{3.734280990524412*^9, 3.7342810141259108`*^9}, {
  3.734333866813361*^9, 
  3.734333869965588*^9}},ExpressionUUID->"d51b92fe-878e-4725-86c3-\
57ffae9d2e0f"],

Cell[BoxData[
 RowBox[{"{", "2812", "}"}]], "Output",
 CellChangeTimes->{{3.7342809981959667`*^9, 3.734281014500826*^9}, 
   3.7342813315771008`*^9, 3.734282583676108*^9, 3.7343198646799*^9, 
   3.734320657645626*^9, 3.734333872075981*^9, 3.734337122127939*^9, 
   3.734337174763857*^9, {3.7353917689970016`*^9, 
   3.735391785302759*^9}},ExpressionUUID->"5e787e81-afd2-4e14-8dc4-\
cae073c17ca7"],

Cell[BoxData[
 RowBox[{"{", "938", "}"}]], "Output",
 CellChangeTimes->{{3.7342809981959667`*^9, 3.734281014500826*^9}, 
   3.7342813315771008`*^9, 3.734282583676108*^9, 3.7343198646799*^9, 
   3.734320657645626*^9, 3.734333872075981*^9, 3.734337122127939*^9, 
   3.734337174763857*^9, {3.7353917689970016`*^9, 
   3.735391785316258*^9}},ExpressionUUID->"69e2367a-ade2-4493-a42b-\
43a05b329111"]
}, Open  ]],

Cell["This time let\[CloseCurlyQuote]s only use the classify function:", \
"Text",
 CellChangeTimes->{{3.734334063863503*^9, 
  3.734334082214342*^9}},ExpressionUUID->"21d7be1d-be61-4f8e-a261-\
15056eaabdac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf3", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingData3", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<RandomForest\>\""}], ",", 
    RowBox[{"ValidationSet", "\[Rule]", "testData3"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7342810347585497`*^9, 3.7342810667359333`*^9}, {
  3.734333888190031*^9, 
  3.7343338933817463`*^9}},ExpressionUUID->"73c36628-07ce-45c4-b899-\
12d8fb5b8337"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {15., {0., 15.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.45], 
                 PointSize[0.13], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], {
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
               True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
               Ticks -> {None, None}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{",", "\",\"", 
                    RowBox[{"-", "1"}], "1"}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {15., {0., 15.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.45], 
                 PointSize[0.13], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], {
                  GrayLevel[0.7], 
                  
                  PointBox[{{-0.9815166384819979, 
                   0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
               BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
               True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
               Ticks -> {None, None}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "7", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{",", "\",\"", 
                    RowBox[{"-", "1"}], "1"}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["2812", "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.734281063855103*^9, 3.734281069503582*^9}, 
   3.734281333802017*^9, 3.734282586135791*^9, 3.734319882114613*^9, 
   3.734320664750062*^9, 3.7343339056080513`*^9, 3.734337122603401*^9, 
   3.734337175222726*^9, 3.7353917916658487`*^9, 
   3.735391971926363*^9},ExpressionUUID->"1a2eadb7-bf15-41d2-ad82-\
02b6cf6af828"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\


3.3 Full cycle\
\>", "Subsection",
 CellChangeTimes->{{3.7342767330708113`*^9, 3.734276744739731*^9}, {
   3.734320141285231*^9, 3.7343201418618803`*^9}, {3.734329360159725*^9, 
   3.734329360774837*^9}, 3.7343294662414207`*^9, 3.734329865523183*^9, 
   3.734334092138468*^9, 
   3.7343342381195602`*^9},ExpressionUUID->"c705c265-d444-47ba-b1e7-\
95b1cbaa5102"],

Cell["\<\
Here finally we will use the unseen test set. But first, we treat mlData as \
training data and apply SVD with 8 dimensions (Section 3.3.1). Second, we \
build a classifier with both with a validation set and without (Section \
3.3.2). Next we transform unseen test data in the reduced space (Section \
3.3.3). Finally 3.3.4 will present the prediction results of selected \
classifiers.  \
\>", "Text",
 CellChangeTimes->{{3.7343211558731823`*^9, 3.734321168389606*^9}, {
  3.7343212380080767`*^9, 3.734321254462612*^9}, {3.734321900976767*^9, 
  3.7343219155144997`*^9}, {3.734334244358679*^9, 3.734334255650317*^9}, {
  3.734334948238282*^9, 3.734335037054184*^9}, {3.734335111112237*^9, 
  3.734335137571176*^9}, {3.7343417750782022`*^9, 3.734341775794252*^9}, {
  3.7343438749176483`*^9, 
  3.7343439286880913`*^9}},ExpressionUUID->"4f0f08a5-e7d9-498f-86f3-\
abf3c17c324f"],

Cell[CellGroupData[{

Cell["3.3.1 Dimension reduction on the training data  ", "Subsubsection",
 CellChangeTimes->{{3.73427675382546*^9, 3.73427676696362*^9}, {
  3.734334706473583*^9, 3.734334709527137*^9}, {3.73434178250949*^9, 
  3.7343417852101383`*^9}},ExpressionUUID->"cf1ca1e1-d969-4b43-887f-\
269a5eed123a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mlData", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{"Rule", ",", 
     RowBox[{"{", 
      RowBox[{"Training", ",", 
       RowBox[{"Tlabels", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "/@", 
  RowBox[{"mlData", "\[LeftDoubleBracket]", 
   RowBox[{"1", ";;", "6"}], "\[RightDoubleBracket]"}]}]}], "Input",
 CellChangeTimes->{3.733753395740313*^9, 3.7342769456962643`*^9, 
  3.734317857306952*^9, 
  3.734321212393321*^9},ExpressionUUID->"09fab090-a0dd-470b-856b-\
4b3100a9b8a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"620.643`", ",", 
       RowBox[{"-", "225.484`"}], ",", 
       RowBox[{"-", "131213.801`"}], ",", "83536.65`", ",", 
       RowBox[{"\[LeftSkeleton]", "9993", "\[RightSkeleton]"}], ",", 
       "133.456`", ",", 
       RowBox[{"-", "344.193`"}], ",", "626.785`"}], "}"}], "\[Rule]", "1"}],
    Short], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"789.336`", ",", "158.857`", ",", 
       RowBox[{"-", "8422.367`"}], ",", 
       RowBox[{"\[LeftSkeleton]", "9994", "\[RightSkeleton]"}], ",", 
       RowBox[{"-", "418.297`"}], ",", 
       RowBox[{"-", "292.736`"}], ",", 
       RowBox[{"-", "390.922`"}]}], "}"}], "\[Rule]", "1"}],
    Short], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "323.514`"}], ",", 
       RowBox[{"-", "520.415`"}], ",", 
       RowBox[{"-", "43709.199`"}], ",", "150098.21`", ",", 
       RowBox[{"\[LeftSkeleton]", "9993", "\[RightSkeleton]"}], ",", 
       RowBox[{"-", "684.42`"}], ",", 
       RowBox[{"-", "1878.696`"}], ",", 
       RowBox[{"-", "31.079`"}]}], "}"}], "\[Rule]", "1"}],
    Short], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"280.384`", ",", "4.955`", ",", 
       RowBox[{"-", "13609.268`"}], ",", 
       RowBox[{"-", "141965.688`"}], ",", 
       RowBox[{"\[LeftSkeleton]", "9993", "\[RightSkeleton]"}], ",", 
       RowBox[{"-", "496.787`"}], ",", 
       RowBox[{"-", "205.806`"}], ",", 
       RowBox[{"-", "240.249`"}]}], "}"}], "\[Rule]", "1"}],
    Short], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"15.483`", ",", 
       RowBox[{"-", "98.902`"}], ",", "37405.965`", ",", "138522.182`", ",", 
       RowBox[{"\[LeftSkeleton]", "9993", "\[RightSkeleton]"}], ",", 
       RowBox[{"-", "650.591`"}], ",", 
       RowBox[{"-", "45.142`"}], ",", "678.672`"}], "}"}], "\[Rule]", "1"}],
    Short], ",", 
   TagBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"575.561`", ",", 
       RowBox[{"-", "345.999`"}], ",", "28541.294`", ",", "20939.801`", ",", 
       RowBox[{"\[LeftSkeleton]", "9993", "\[RightSkeleton]"}], ",", 
       RowBox[{"-", "232.023`"}], ",", 
       RowBox[{"-", "436.482`"}], ",", 
       RowBox[{"-", "158.154`"}]}], "}"}], "\[Rule]", "1"}],
    Short]}], "}"}]], "Output",
 CellChangeTimes->{3.7343212181742*^9, 3.734321372220378*^9, 
  3.7343342641356773`*^9, 3.7343344659880657`*^9, 3.734337198393462*^9, 
  3.7353879660208817`*^9},ExpressionUUID->"887bda9b-e71d-42a8-a132-\
b270087c46e7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingDataFull", "=", "mlData"}], ";"}]], "Input",
 CellChangeTimes->{{3.734276948468445*^9, 3.734276954367216*^9}, {
  3.734321660837624*^9, 
  3.734321677330985*^9}},ExpressionUUID->"fd49ec78-8b17-4026-846d-\
a8c971861660"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"svdRes3", "=", 
    RowBox[{"SingularValueDecomposition", "[", 
     RowBox[{
      RowBox[{"trainingDataFull", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", "8"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7342768180439463`*^9, 3.734276839162751*^9}, {
   3.734276877672768*^9, 3.734276887077928*^9}, {3.734277099045618*^9, 
   3.734277101158382*^9}, 3.7342771432715073`*^9, 3.73432128413018*^9, {
   3.734321672268062*^9, 
   3.734321679694825*^9}},ExpressionUUID->"b9e84fda-1d4d-4fdc-9e87-\
c3af64fb31a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"29.159696`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.734276898323277*^9, 3.734277148960843*^9, 
  3.734281416492179*^9, 3.734282395052691*^9, 3.734282789617594*^9, 
  3.734321409954246*^9, 3.7343216837193937`*^9, 3.734321726543942*^9, 
  3.734334611116185*^9, 3.734337227302965*^9, 
  3.7353880053689623`*^9},ExpressionUUID->"ee4df7a1-342f-495e-86ce-\
90bf94d1b121"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingData4", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
      "svdRes3", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ".", 
      RowBox[{"svdRes3", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "\[Rule]", 
     RowBox[{"trainingDataFull", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.734277774765752*^9, 3.734277790786563*^9}, {
   3.7343217416690817`*^9, 3.7343217646525383`*^9}, 3.734334658353492*^9, {
   3.735387990891891*^9, 
   3.735388010811524*^9}},ExpressionUUID->"97568f97-bf44-4310-8ccd-\
ba50fca57d7e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RecordsSummary", "[", 
  RowBox[{"trainingData4", ",", 
   RowBox[{"Thread", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7342778011679077`*^9, 3.734277806654305*^9}, 
   3.734321773311668*^9, 
   3.734334660951089*^9},ExpressionUUID->"133c3faf-77fb-463a-91ea-\
7827479cd0c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    TagBox[GridBox[{
       {
        StyleBox["\<\"1 column 1\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "469797.0359611907`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "258819.26201780888`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "90932.77540939313`"}]},
           {"\<\"Mean\"\>", 
            RowBox[{"-", "88698.46659814991`"}]},
           {"\<\"3rd Qu\"\>", "81541.94391051347`"},
           {"\<\"Max\"\>", "298622.4182819669`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"2 column 2\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "288435.96944386896`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "56843.95535991383`"}]},
           {"\<\"Mean\"\>", 
            RowBox[{"-", "813.184242150312`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "511.10930336452816`"}]},
           {"\<\"3rd Qu\"\>", "57019.64540490376`"},
           {"\<\"Max\"\>", "284334.17885687185`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"3 column 3\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "239586.12959950737`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "48699.917176839714`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "601.3126189531349`"}]},
           {"\<\"Mean\"\>", 
            RowBox[{"-", "97.10350218732263`"}]},
           {"\<\"3rd Qu\"\>", "49750.380060541764`"},
           {"\<\"Max\"\>", "260184.70747506252`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"4 column 4\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "248948.38934915527`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "45725.87304856792`"}]},
           {"\<\"Mean\"\>", "853.3631563402123`"},
           {"\<\"Median\"\>", "1243.1261814291774`"},
           {"\<\"3rd Qu\"\>", "45773.56179204605`"},
           {"\<\"Max\"\>", "248592.70490289506`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"5 column 5\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "55321.83636495723`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "8994.854060393203`"}]},
           {"\<\"Median\"\>", "643.0796515813934`"},
           {"\<\"Mean\"\>", "834.5158756164228`"},
           {"\<\"3rd Qu\"\>", "10574.174858306666`"},
           {"\<\"Max\"\>", "63474.987698810284`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"6 column 6\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "3446.5212285145635`"}]},
           {"\<\"1st Qu\"\>", "263.8557036337064`"},
           {"\<\"Median\"\>", "1246.3054212340573`"},
           {"\<\"Mean\"\>", "1255.7529243194874`"},
           {"\<\"3rd Qu\"\>", "2213.6405249428885`"},
           {"\<\"Max\"\>", "6441.017742702182`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"7 column 7\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "6605.098492421512`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "1238.146641278712`"}]},
           {"\<\"Mean\"\>", 
            RowBox[{"-", "36.526549590694735`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "24.50679417340718`"}]},
           {"\<\"3rd Qu\"\>", "1191.6542842503145`"},
           {"\<\"Max\"\>", "5807.255880116145`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"], ",", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"8 column 8\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {
        TagBox[GridBox[{
           {"\<\"Min\"\>", 
            RowBox[{"-", "6564.815744237562`"}]},
           {"\<\"1st Qu\"\>", 
            RowBox[{"-", "1261.2284002506415`"}]},
           {"\<\"Median\"\>", 
            RowBox[{"-", "46.7553192016927`"}]},
           {"\<\"Mean\"\>", 
            RowBox[{"-", "33.274776886208215`"}]},
           {"\<\"3rd Qu\"\>", "1192.425099204625`"},
           {"\<\"Max\"\>", "6186.184065404789`"}
          },
          AutoDelete->False,
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}], "}"}], "\[Rule]", 
  RowBox[{"{", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 column 1\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "1"}]},
          {"\<\"Mean\"\>", "0.8016`"},
          {"\<\"1st Qu\"\>", "1"},
          {"\<\"3rd Qu\"\>", "1"},
          {"\<\"Max\"\>", "1"},
          {"\<\"Median\"\>", "1"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], "}"}]}]], "Output",
 CellChangeTimes->{3.734277807046283*^9, 3.7342781479901342`*^9, 
  3.734281417275375*^9, 3.734282395864697*^9, 3.734282790253915*^9, 
  3.734334687101355*^9, 3.7343372274691133`*^9, 
  3.73538802328168*^9},ExpressionUUID->"1a766955-f55b-49f1-85e3-806ed507f774"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.3.2 Classifier building", "Subsubsection",
 CellChangeTimes->{{3.7342791257793493`*^9, 3.734279131336123*^9}, {
  3.734334716156013*^9, 
  3.734334717335351*^9}},ExpressionUUID->"d34889f6-b3b2-4b18-99ef-\
8695a929f89e"],

Cell["\<\
We can create a classifier with a validation set (cf4), and also one without \
(cf5); and also one with using the pipeline (cf6).\
\>", "Text",
 CellChangeTimes->{{3.734322061377324*^9, 3.734322087783208*^9}, {
  3.734334723980764*^9, 3.734334726191703*^9}, {3.734335059687872*^9, 
  3.734335077564754*^9}},ExpressionUUID->"2d7d41d7-8c6a-42f1-bac0-\
da56f75e4991"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainingData5", ",", "validationData5"}], "}"}], "=", 
   RowBox[{"TakeDrop", "[", 
    RowBox[{"trainingData4", ",", 
     RowBox[{"Floor", "[", 
      RowBox[{"0.9", "*", 
       RowBox[{"Length", "[", "trainingDataFull", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "/@", 
  RowBox[{"{", 
   RowBox[{"trainingData5", ",", "validationData5"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.7342806283468447`*^9, 3.734280658690386*^9}, {
  3.734281440450837*^9, 3.734281471344626*^9}, {3.734321935998877*^9, 
  3.734321971999097*^9}, {3.734334742651494*^9, 
  3.734334760241275*^9}},ExpressionUUID->"ed19c96d-6916-41f9-ad53-\
d1d34b4d7145"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3375", ",", "375"}], "}"}]], "Output",
 CellChangeTimes->{
  3.734280659590294*^9, 3.734281418093357*^9, {3.734281453728404*^9, 
   3.734281471871358*^9}, 3.734282396179977*^9, 3.734282790523773*^9, {
   3.7343219779704247`*^9, 3.7343219817769127`*^9}, 3.7343347708324947`*^9, 
   3.7343372800603933`*^9, 
   3.735388031081628*^9},ExpressionUUID->"c5ec75f7-0f5c-47e9-87b0-\
1510bc92eaf0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf4", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingData5", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<RandomForest\>\""}], ",", 
    RowBox[{"ValidationSet", "\[Rule]", "validationData5"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.734281495056683*^9, 3.734281522394951*^9}, {
   3.734321831342429*^9, 3.734321833675825*^9}, {3.734321991909994*^9, 
   3.734321996866837*^9}, 3.7343347295445757`*^9, {3.734334762296892*^9, 
   3.734334767689748*^9}},ExpressionUUID->"72367161-680f-43ea-bca9-\
08b64cd8074f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{",", "\",\"", 
                    RowBox[{"-", "1"}], "1"}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{",", "\",\"", 
                    RowBox[{"-", "1"}], "1"}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["3375", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.734281526064331*^9, 3.7342823986255093`*^9, 
  3.7342827932612963`*^9, 3.7343220023659487`*^9, 3.7343347914128857`*^9, 
  3.734337284316448*^9, 
  3.735388039507338*^9},ExpressionUUID->"d89f94a2-b2db-43b1-a164-\
1b0e03bf3e5a"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s train one without validation set:", "Text",
 CellChangeTimes->{{3.734334803704423*^9, 
  3.734334816465054*^9}},ExpressionUUID->"d021da09-3aa3-43a8-94f8-\
db259801474e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf5", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingData4", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<RandomForest\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.734281495056683*^9, 3.734281522394951*^9}, {
   3.734281632687711*^9, 3.7342816390926867`*^9}, {3.734322012505427*^9, 
   3.7343220153432713`*^9}, 3.7343347317787724`*^9, 3.73433482482974*^9, 
   3.734337259778507*^9},ExpressionUUID->"166281c3-75e7-44b7-a532-\
83424ca398b3"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{",", "\",\"", 
                    RowBox[{"-", "1"}], "1"}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{",", "\",\"", 
                    RowBox[{"-", "1"}], "1"}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["3750", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.734281642013483*^9, 3.7342824060707808`*^9, 
  3.734282796138936*^9, 3.734322021524722*^9, 3.7343348366203547`*^9, 
  3.734337292066237*^9, 
  3.735388044513465*^9},ExpressionUUID->"fda158b9-0df8-452f-9fea-\
01a75f6e77ef"]
}, Open  ]],

Cell["Also one using the pipeline:", "Text",
 CellChangeTimes->{{3.7343348568274393`*^9, 
  3.734334863785762*^9}},ExpressionUUID->"aadd7c45-ea69-4f04-81ef-\
01b77056d090"],

Cell[BoxData[
 RowBox[{
  RowBox[{"res5", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ClConUnit", "[", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<trainingData\>\"", "\[Rule]", "trainingData5"}], ",", 
       RowBox[{"\"\<testData\>\"", "\[Rule]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\"\<validationData\>\"", "->", "validationData5"}]}], "|>"}], 
     "]"}], "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    "ClConAddToContext", "\[DoubleLongRightArrow]", "\[IndentingNewLine]", 
    RowBox[{"ClConMakeClassifier", "[", "\"\<RandomForest\>\"", "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7342775253607388`*^9, 3.734277576184202*^9}, {
  3.734277834400329*^9, 3.734277836593134*^9}, {3.73427821025581*^9, 
  3.734278282030439*^9}, {3.73427832449299*^9, 3.73427838120646*^9}, {
  3.734280736395472*^9, 3.734280747328471*^9}, {3.7342815966177807`*^9, 
  3.734281610799203*^9}, {3.734322109810172*^9, 3.734322113611768*^9}, {
  3.7343348681495*^9, 
  3.734334878661996*^9}},ExpressionUUID->"58874685-b0c7-49ac-ad16-\
05954bd9673e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf6", "=", 
  RowBox[{
  "res5", "\[DoubleLongRightArrow]", "ClConTakeClassifier"}]}]], "Input",
 CellChangeTimes->{{3.734278571564576*^9, 3.734278581451812*^9}, 
   3.734281588369692*^9, {3.7343221322143707`*^9, 3.734322135937152*^9}, {
   3.73433489313262*^9, 
   3.7343349009813223`*^9}},ExpressionUUID->"7f90b9dd-19dc-4431-a68b-\
ae7d8b9d19b2"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ClassifierFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{",", "\",\"", 
                    RowBox[{"-", "1"}], "1"}, "RowWithSeparators"], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 PointSize[0.13], 
                 GrayLevel[0.45], 
                 
                 PointBox[{{0.9821769431797024, -0.440194219686987}, {
                  1.1339776261519132`, 0.8056918676854272}, {
                  0.5279892326667741, 0.6574306661126254}, {
                  0.022147046479890797`, 1.4937877187998898`}}], 
                 GrayLevel[0.7], 
                 
                 PointBox[{{-0.9815166384819979, 
                  0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
               Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                  AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
                Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
               GrayLevel[0.94]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "8", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{",", "\",\"", 
                    RowBox[{"-", "1"}], "1"}, "RowWithSeparators"], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"RandomForest\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Number of training examples: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["3375", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ClassifierFunction[\[Ellipsis]]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7342785776434*^9, 3.73427858245463*^9}, 
   3.734281420880005*^9, {3.7342816034171667`*^9, 3.734281619842152*^9}, 
   3.7342824096133127`*^9, 3.734282799405271*^9, 3.734322138139422*^9, 
   3.734334903476337*^9, 3.734337309114326*^9, 
   3.7353880598974447`*^9},ExpressionUUID->"f7c0af8e-b233-46ff-aca1-\
e63d973ce3b6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

3.3.3 Transforming the unseen test data in reduced space\
\>", "Subsubsection",
 CellChangeTimes->{{3.7342791436098957`*^9, 3.734279158618024*^9}, 
   3.734322165192369*^9, {3.734335089431601*^9, 3.7343351016207027`*^9}, {
   3.734341795661446*^9, 3.7343417992262087`*^9}, {3.7353934073393307`*^9, 
   3.735393408849298*^9}},ExpressionUUID->"a1f0950a-c411-4e46-a698-\
f4eb7d0e3433"],

Cell["\<\
Finally we can transform the unseen test data, reduce it and call the \
classifier.\
\>", "Text",
 CellChangeTimes->{{3.734322171103259*^9, 3.734322196352807*^9}, 
   3.734334213343216*^9, {3.734335186142234*^9, 
   3.734335186357869*^9}},ExpressionUUID->"df31c888-2447-4382-94f9-\
17feb635a3a0"],

Cell["Checking the dimensions and the matrices first: ", "Text",
 CellChangeTimes->{{3.734335171519333*^9, 
  3.734335184101733*^9}},ExpressionUUID->"ad5bddd8-5a79-4564-bd7a-\
e174cec7a600"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "testingCSVData", "]"}]], "Input",
 CellChangeTimes->{{3.734278629973733*^9, 
  3.7342786316837254`*^9}},ExpressionUUID->"defe6648-5390-4958-a43d-\
fc02a18063d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1250", ",", "10000"}], "}"}]], "Output",
 CellChangeTimes->{3.7342786321501703`*^9, 3.734281421177636*^9, 
  3.734281534338166*^9, 3.734282409871676*^9, 3.734282799703066*^9, 
  3.734322160326482*^9, 3.734335148759594*^9, 
  3.734337326528171*^9},ExpressionUUID->"767e7dd7-2e61-4dfa-b1a3-\
0c012a84582f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["U", "training"], ".", 
   SubscriptBox["S", "training"], ".", 
   SubsuperscriptBox["V", "training", "T"]}], " ", "=", " ", 
  SubscriptBox["M", "traning"]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.734274490403389*^9, 3.7342745436479673`*^9}, {
  3.734274635697488*^9, 
  3.734274644632484*^9}},ExpressionUUID->"9534919d-be02-4caf-a053-\
314181545d58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"svdRes3", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.734278867364119*^9, 3.7342788815277653`*^9}, 
   3.734322212618622*^9},ExpressionUUID->"7b0bf11b-b8d3-48aa-970d-\
a5b392bf0f6d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10000", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{3.73427888215457*^9, 3.734281421445972*^9, 
  3.73428153474305*^9, 3.734282410181487*^9, 3.734282800015037*^9, 
  3.7343222148810997`*^9, 
  3.734337326589851*^9},ExpressionUUID->"cef6d842-0d75-4475-b65c-\
42737c54d5fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Diagonal", "[", 
  RowBox[{"svdRes3", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.73427892435568*^9, 3.734278933379403*^9}, 
   3.734322219851815*^9},ExpressionUUID->"6a699daf-3259-43fa-b3ea-\
95cf88945042"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.2311906289219927`*^7", ",", "5.096889051616868`*^6", ",", 
   "4.524672809990942`*^6", ",", "4.1523314283112576`*^6", ",", 
   "892965.119581705`", ",", "115966.80604785128`", ",", 
   "111096.96110224369`", ",", "110774.37580864762`"}], "}"}]], "Output",
 CellChangeTimes->{{3.734278924840596*^9, 3.734278933843224*^9}, 
   3.734281421731575*^9, 3.734281534988574*^9, 3.734282410430098*^9, 
   3.734282800336225*^9, 3.734322223038639*^9, 
   3.7343373266253757`*^9},ExpressionUUID->"117fd8cf-5779-44c6-af20-\
dd17b240a8f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Norm", "/@", 
  RowBox[{"Transpose", "[", 
   RowBox[{"svdRes3", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.734278890067099*^9, 3.734278902171174*^9}, 
   3.734322226202157*^9},ExpressionUUID->"caa8fed7-3d4b-43b9-b1d3-\
9eddb90d8de7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9999999999999999`", ",", "0.9999999999999991`", ",", 
   "1.0000000000000009`", ",", "0.9999999999999999`", ",", 
   "0.9999999999999998`", ",", "0.9999999999999996`", ",", 
   "1.0000000000000002`", ",", "1.`"}], "}"}]], "Output",
 CellChangeTimes->{3.734278902713963*^9, 3.734281421966939*^9, 
  3.73428153523433*^9, 3.734282410666271*^9, 3.734282800687809*^9, 
  3.734322228536322*^9, 
  3.734337326677249*^9},ExpressionUUID->"41d4611e-276e-4e55-b52f-\
ce83ebf4b68e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{
    RowBox[{"SparseArray", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{
      "svdRes3", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
      "]"}], "]"}], ".", 
    RowBox[{"SparseArray", "[", 
     RowBox[{
     "svdRes3", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Chop", "[", "t", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.734278694844838*^9, 3.734278819110506*^9}, {
  3.734322233927165*^9, 
  3.734322235200161*^9}},ExpressionUUID->"d37fbab7-928e-404c-8217-\
551d0a0232cd"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.0000000000000022`", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "1.0000000000000009`", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1.0000000000000084`", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0.9999999999999958`", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0.9999999999999993`", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1.0000000000000036`", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1.0000000000000067`", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1.0000000000000042`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {8, 8}, 0, {
     1, {{0, 1, 2, 3, 4, 5, 6, 7, 8}, {{1}, {2}, {3}, {4}, {5}, {6}, {7}, {
       8}}}, {1.0000000000000022`, 1.0000000000000009`, 1.0000000000000084`, 
      0.9999999999999958, 0.9999999999999993, 1.0000000000000036`, 
      1.0000000000000067`, 1.0000000000000042`}}]]]]], "Output",
 CellChangeTimes->{{3.734278723396525*^9, 3.734278732666643*^9}, {
   3.7342787757417707`*^9, 3.734278819728924*^9}, 3.734281422226797*^9, 
   3.7342815355099163`*^9, 3.7342824108941603`*^9, 3.734282800951559*^9, 
   3.734322241303834*^9, 
   3.734337326725926*^9},ExpressionUUID->"aca07fda-78da-41bf-a22d-\
1ddc6590422a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "testingCSVData", "]"}]], "Input",
 CellChangeTimes->{{3.734278991981502*^9, 
  3.7342789964477386`*^9}},ExpressionUUID->"6ead63b7-7c90-4465-a653-\
491813b7c1ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1250", ",", "10000"}], "}"}]], "Output",
 CellChangeTimes->{3.734278997031163*^9, 3.734281422495246*^9, 
  3.73428153579513*^9, 3.734282411178336*^9, 3.734282801265442*^9, 
  3.734322246765266*^9, 
  3.734337326776127*^9},ExpressionUUID->"c14ad1e1-9536-4f35-95ce-\
9aa93f2aaf68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testData5", "=", 
   RowBox[{"testingCSVData", ".", 
    RowBox[{
    "svdRes3", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "[", "testData5", "]"}]}], "Input",
 CellChangeTimes->{{3.734278641762088*^9, 3.734278651971057*^9}, {
   3.734279007169046*^9, 3.734279027029862*^9}, 3.734322338425408*^9, {
   3.734335267298403*^9, 3.734335268599474*^9}, {3.73539189146455*^9, 
   3.735391892644369*^9}},ExpressionUUID->"3a5a8a14-4de6-4d39-9cdb-\
280b06fe0c4d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1250", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{3.734279028114855*^9, 3.734281422921453*^9, 
  3.734281536038662*^9, 3.7342823240707283`*^9, 3.734282411429981*^9, 
  3.734282801569309*^9, 3.734322341516094*^9, 3.734335283556542*^9, 
  3.7343373268800707`*^9, 
  3.7353880891290483`*^9},ExpressionUUID->"edb175eb-17b6-4ccd-b936-\
f90411a6d84e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RecordsSummary", "[", "testData5", "]"}]], "Input",
 CellChangeTimes->{{3.735388664392828*^9, 3.735388671910391*^9}, {
  3.735391619090335*^9, 
  3.7353916213911743`*^9}},ExpressionUUID->"5bbff68a-774d-4fed-b218-\
bbd3d405f414"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 column 1\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "456582.55670687027`"}]},
          {"\<\"1st Qu\"\>", 
           RowBox[{"-", "264728.10551359295`"}]},
          {"\<\"Median\"\>", 
           RowBox[{"-", "94690.17354679912`"}]},
          {"\<\"Mean\"\>", 
           RowBox[{"-", "92109.05499828796`"}]},
          {"\<\"3rd Qu\"\>", "87497.40061253362`"},
          {"\<\"Max\"\>", "273813.97863423824`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"2 column 2\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "331949.1391953515`"}]},
          {"\<\"1st Qu\"\>", 
           RowBox[{"-", "55277.1333104118`"}]},
          {"\<\"Median\"\>", 
           RowBox[{"-", "2572.9880583761537`"}]},
          {"\<\"Mean\"\>", 
           RowBox[{"-", "1251.7688277097461`"}]},
          {"\<\"3rd Qu\"\>", "56217.3894441784`"},
          {"\<\"Max\"\>", "268400.1495392604`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"3 column 3\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "245419.1814357001`"}]},
          {"\<\"1st Qu\"\>", 
           RowBox[{"-", "52984.89618283868`"}]},
          {"\<\"Median\"\>", 
           RowBox[{"-", "5156.780424457549`"}]},
          {"\<\"Mean\"\>", 
           RowBox[{"-", "4096.2502972306`"}]},
          {"\<\"3rd Qu\"\>", "47778.59699905521`"},
          {"\<\"Max\"\>", "267045.38613795803`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"4 column 4\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "220967.23674657958`"}]},
          {"\<\"1st Qu\"\>", 
           RowBox[{"-", "45230.89563602799`"}]},
          {"\<\"Median\"\>", 
           RowBox[{"-", "1497.7965687862948`"}]},
          {"\<\"Mean\"\>", 
           RowBox[{"-", "147.14140211037312`"}]},
          {"\<\"3rd Qu\"\>", "47327.60387528349`"},
          {"\<\"Max\"\>", "218209.18412247076`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"5 column 5\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "52090.5130783932`"}]},
          {"\<\"1st Qu\"\>", 
           RowBox[{"-", "9402.925203458797`"}]},
          {"\<\"Mean\"\>", "430.15491196412984`"},
          {"\<\"Median\"\>", "878.3684709804991`"},
          {"\<\"3rd Qu\"\>", "10108.040087002957`"},
          {"\<\"Max\"\>", "43931.82068336238`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"6 column 6\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "2249.952140969497`"}]},
          {"\<\"1st Qu\"\>", "179.6167387259118`"},
          {"\<\"Mean\"\>", "768.8569956128748`"},
          {"\<\"Median\"\>", "803.6106887343974`"},
          {"\<\"3rd Qu\"\>", "1353.8522829492372`"},
          {"\<\"Max\"\>", "3590.841505675741`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"7 column 7\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "2721.420662698091`"}]},
          {"\<\"1st Qu\"\>", 
           RowBox[{"-", "639.3745479919837`"}]},
          {"\<\"Mean\"\>", 
           RowBox[{"-", "57.56620745396522`"}]},
          {"\<\"Median\"\>", 
           RowBox[{"-", "10.21559900837522`"}]},
          {"\<\"3rd Qu\"\>", "500.9855296951165`"},
          {"\<\"Max\"\>", "2968.3444018955615`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"8 column 8\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "2861.633280874772`"}]},
          {"\<\"1st Qu\"\>", 
           RowBox[{"-", "661.5296383353087`"}]},
          {"\<\"Median\"\>", 
           RowBox[{"-", "104.33619423395535`"}]},
          {"\<\"Mean\"\>", 
           RowBox[{"-", "83.88948018401885`"}]},
          {"\<\"3rd Qu\"\>", "482.9291136033842`"},
          {"\<\"Max\"\>", "2648.5296490609535`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.735388673309307*^9},ExpressionUUID->"a6abea76-cb04-4780-8c60-\
1dd529c33946"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"RecordsSummary", "[", 
  RowBox[{"trainingData5", ",", 
   RowBox[{"Thread", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7353914983744497`*^9, 3.735391502131868*^9}, {
  3.735391629353326*^9, 3.7353916365218*^9}, {3.7353927842924023`*^9, 
  3.7353927869665318`*^9}},ExpressionUUID->"d0e84bee-5d38-410e-b0ec-\
f202007f23c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.3.4 Classification results", "Subsubsection",
 CellChangeTimes->{{3.7342791645576563`*^9, 3.734279169069449*^9}, {
  3.734335293838307*^9, 
  3.734335295774764*^9}},ExpressionUUID->"4aa467c1-6913-4b22-9dc3-\
0fa8152082ee"],

Cell["\<\
Here are the final classification results beginning from the classifiers we \
built in full cycle (cf4, cf5 and cf6). After that we can also check the \
previous classifiers trained by seen training data (cf1, cf2 and cf3).\
\>", "Text",
 CellChangeTimes->{{3.7343353750499687`*^9, 
  3.734335490289764*^9}},ExpressionUUID->"105183c7-b3c7-430e-a76d-\
bfa03fe9eec7"],

Cell["\<\
This one below is the one we built using the pipeline and validation set:\
\>", "Text",
 CellChangeTimes->{{3.7343356611006927`*^9, 
  3.734335679659409*^9}},ExpressionUUID->"51fe07a9-b4b6-4773-a92b-\
b0b433fa4ab9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"clResult6", "=", 
   RowBox[{"cf6", "[", "testData5", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "[", "clResult6", "]"}], "\[IndentingNewLine]", 
 RowBox[{"RecordsSummary", "[", "clResult6", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Tally", "[", "clResult6", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<test_labels2_new.csv\>\"", ",", " ", "clResult6"}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.73427858469521*^9, 3.73427858676154*^9}, {
   3.7342790434844513`*^9, 3.734279065576498*^9}, 3.7343222946371717`*^9, {
   3.734322376018594*^9, 3.734322404340241*^9}, 3.734335353700183*^9, {
   3.7343354941926126`*^9, 3.734335521413233*^9}, {3.734335591757238*^9, 
   3.734335606469232*^9}, {3.734336074186339*^9, 3.734336077435021*^9}, 
   3.734337348851881*^9, {3.734340031225383*^9, 3.734340065073407*^9}, {
   3.7343401139161*^9, 3.734340116192239*^9}, 3.734340253792549*^9, {
   3.734341534573599*^9, 3.73434153732901*^9}, {3.734343973970517*^9, 
   3.7343439740743427`*^9}, {3.7353931211996117`*^9, 
   3.7353931530630283`*^9}},ExpressionUUID->"d995342e-5e30-4c15-841e-\
3bcd37519ac7"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
    RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
     "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
    "1", ",", "1", ",", "1", ",", "1", ",", 
    RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
    RowBox[{"\[LeftSkeleton]", "1198", "\[RightSkeleton]"}], ",", "1", ",", 
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
     ",", "1", ",", "1", ",", "1", ",", 
    RowBox[{"-", "1"}], ",", "1", ",", 
    RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1", ",", 
    RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
     "1"}], "}"}],
  Short]], "Output",
 CellChangeTimes->{{3.7342790461413383`*^9, 3.7342790661682253`*^9}, 
   3.734281423227289*^9, 3.7342815438329563`*^9, 3.734282411645858*^9, 
   3.7342828019348917`*^9, {3.734322378985753*^9, 3.7343224059511538`*^9}, 
   3.734335358457676*^9, 3.734335497522468*^9, 3.73433555194316*^9, 
   3.7343356205659523`*^9, 3.7343360787570457`*^9, {3.734337336724124*^9, 
   3.734337373778427*^9}, 3.734340069679785*^9, 3.73434012468491*^9, 
   3.7343404618432693`*^9, 3.735388113494256*^9, 3.73539168591076*^9, {
   3.735393114262497*^9, 
   3.735393136456897*^9}},ExpressionUUID->"1c142c2a-223e-4419-96b9-\
d02ded52cf1c"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[GridBox[{
     {
      StyleBox["\<\"1 column 1\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0, 0, 1],
       FrontFaceColor->RGBColor[0, 0, 1],
       BackFaceColor->RGBColor[0, 0, 1],
       GraphicsColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1]]},
     {
      TagBox[GridBox[{
         {"\<\"Min\"\>", 
          RowBox[{"-", "1"}]},
         {"\<\"Mean\"\>", "0.8208`"},
         {"\<\"1st Qu\"\>", "1"},
         {"\<\"3rd Qu\"\>", "1"},
         {"\<\"Max\"\>", "1"},
         {"\<\"Median\"\>", "1"}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], "}"}]], "Output",
 CellChangeTimes->{{3.7342790461413383`*^9, 3.7342790661682253`*^9}, 
   3.734281423227289*^9, 3.7342815438329563`*^9, 3.734282411645858*^9, 
   3.7342828019348917`*^9, {3.734322378985753*^9, 3.7343224059511538`*^9}, 
   3.734335358457676*^9, 3.734335497522468*^9, 3.73433555194316*^9, 
   3.7343356205659523`*^9, 3.7343360787570457`*^9, {3.734337336724124*^9, 
   3.734337373778427*^9}, 3.734340069679785*^9, 3.73434012468491*^9, 
   3.7343404618432693`*^9, 3.735388113494256*^9, 3.73539168591076*^9, {
   3.735393114262497*^9, 
   3.7353931364789124`*^9}},ExpressionUUID->"f68a6b29-bf4e-4cef-a2e8-\
774491831f26"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1138"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "112"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7342790461413383`*^9, 3.7342790661682253`*^9}, 
   3.734281423227289*^9, 3.7342815438329563`*^9, 3.734282411645858*^9, 
   3.7342828019348917`*^9, {3.734322378985753*^9, 3.7343224059511538`*^9}, 
   3.734335358457676*^9, 3.734335497522468*^9, 3.73433555194316*^9, 
   3.7343356205659523`*^9, 3.7343360787570457`*^9, {3.734337336724124*^9, 
   3.734337373778427*^9}, 3.734340069679785*^9, 3.73434012468491*^9, 
   3.7343404618432693`*^9, 3.735388113494256*^9, 3.73539168591076*^9, {
   3.735393114262497*^9, 
   3.7353931364934196`*^9}},ExpressionUUID->"6e570ffa-eeb5-4d5c-a721-\
f33ee1ecf0a6"],

Cell[BoxData["\<\"test_labels2_new.csv\"\>"], "Output",
 CellChangeTimes->{{3.7342790461413383`*^9, 3.7342790661682253`*^9}, 
   3.734281423227289*^9, 3.7342815438329563`*^9, 3.734282411645858*^9, 
   3.7342828019348917`*^9, {3.734322378985753*^9, 3.7343224059511538`*^9}, 
   3.734335358457676*^9, 3.734335497522468*^9, 3.73433555194316*^9, 
   3.7343356205659523`*^9, 3.7343360787570457`*^9, {3.734337336724124*^9, 
   3.734337373778427*^9}, 3.734340069679785*^9, 3.73434012468491*^9, 
   3.7343404618432693`*^9, 3.735388113494256*^9, 3.73539168591076*^9, {
   3.735393114262497*^9, 
   3.7353931365069304`*^9}},ExpressionUUID->"bac599a8-70b3-488e-9036-\
07b2ebfd4d76"]
}, Open  ]],

Cell["\<\
This one below is the one we built using the Mathematica\[CloseCurlyQuote]s \
classify function and WITHOUT a validation set:\
\>", "Text",
 CellChangeTimes->{{3.734335705902802*^9, 
  3.734335738444659*^9}},ExpressionUUID->"0d65f17d-03d4-42e4-a73e-\
c4e1ab57abcf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"clResult5", "=", 
   RowBox[{"cf5", "[", "testData5", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "[", "clResult5", "]"}], "\[IndentingNewLine]", 
 RowBox[{"RecordsSummary", "[", "clResult5", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Tally", "[", "clResult5", "]"}]}], "Input",
 CellChangeTimes->{{3.7343355141891613`*^9, 3.734335524514677*^9}, {
  3.734335596685205*^9, 3.734335597092413*^9}, {3.734335837974889*^9, 
  3.734335839781191*^9}, {3.734336058097477*^9, 
  3.7343360608348017`*^9}},ExpressionUUID->"e81aa55b-21df-4a3f-b383-\
e1988744790a"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
    RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
     "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
    RowBox[{"\[LeftSkeleton]", "1213", "\[RightSkeleton]"}], ",", "1", ",", 
    "1", ",", "1", ",", "1", ",", 
    RowBox[{"-", "1"}], ",", "1", ",", 
    RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1", ",", 
    RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
     "1"}], "}"}],
  Short]], "Output",
 CellChangeTimes->{{3.734335528862574*^9, 3.73433555509764*^9}, 
   3.7343356206568317`*^9, 3.7343358436844482`*^9, 3.734336062141811*^9, 
   3.734337373936294*^9, 3.7353881340989933`*^9, 
   3.735391679544188*^9},ExpressionUUID->"8ea7c048-8e57-4faa-80f0-\
5993ca3fdb6a"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[GridBox[{
     {
      StyleBox["\<\"1 column 1\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0, 0, 1],
       FrontFaceColor->RGBColor[0, 0, 1],
       BackFaceColor->RGBColor[0, 0, 1],
       GraphicsColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1]]},
     {
      TagBox[GridBox[{
         {"\<\"Min\"\>", 
          RowBox[{"-", "1"}]},
         {"\<\"Mean\"\>", "0.8176`"},
         {"\<\"1st Qu\"\>", "1"},
         {"\<\"3rd Qu\"\>", "1"},
         {"\<\"Max\"\>", "1"},
         {"\<\"Median\"\>", "1"}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], "}"}]], "Output",
 CellChangeTimes->{{3.734335528862574*^9, 3.73433555509764*^9}, 
   3.7343356206568317`*^9, 3.7343358436844482`*^9, 3.734336062141811*^9, 
   3.734337373936294*^9, 3.7353881340989933`*^9, 
   3.735391679558064*^9},ExpressionUUID->"8dacef7a-736c-4e43-b3cc-\
058d3afa5a55"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1136"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "114"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.734335528862574*^9, 3.73433555509764*^9}, 
   3.7343356206568317`*^9, 3.7343358436844482`*^9, 3.734336062141811*^9, 
   3.734337373936294*^9, 3.7353881340989933`*^9, 
   3.73539167956669*^9},ExpressionUUID->"90a90dca-4553-458a-a66d-\
c52a7530b66b"]
}, Open  ]],

Cell["\<\
The below is the one we built using the Mathematica\[CloseCurlyQuote]s \
classify function and with a validation set:\
\>", "Text",
 CellChangeTimes->{{3.7343357870456753`*^9, 
  3.7343358127863197`*^9}},ExpressionUUID->"5e18e493-df86-457e-8291-\
96a26076a08a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"clResult4", "=", 
   RowBox[{"cf4", "[", "testData5", "]"}]}], ";"}], "\n", 
 RowBox[{"Short", "[", "clResult4", "]"}], "\n", 
 RowBox[{"RecordsSummary", "[", "clResult4", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Tally", "[", "clResult4", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<test_labels_new.csv\>\"", ",", " ", "clResult4"}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.734335817236429*^9, 3.7343358359094553`*^9}, {
   3.734336037265427*^9, 3.734336044936308*^9}, {3.734340265530747*^9, 
   3.7343402730092783`*^9}, 3.7343403108234158`*^9, {3.734341522236156*^9, 
   3.734341527544963*^9}, {3.7343439825448008`*^9, 3.734343982657111*^9}, 
   3.7343440308303127`*^9, {3.735393168327771*^9, 
   3.7353931900031633`*^9}},ExpressionUUID->"86d12094-614e-4333-a289-\
52114ed838eb"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
    RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
     "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
    "1", ",", "1", ",", "1", ",", "1", ",", 
    RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
    RowBox[{"\[LeftSkeleton]", "1198", "\[RightSkeleton]"}], ",", "1", ",", 
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
     ",", "1", ",", "1", ",", "1", ",", 
    RowBox[{"-", "1"}], ",", "1", ",", 
    RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1", ",", 
    RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
     "1"}], "}"}],
  Short]], "Output",
 CellChangeTimes->{
  3.734335849975275*^9, 3.734336047172662*^9, 3.7343373740262527`*^9, 
   3.734340277351605*^9, 3.7353916739415703`*^9, {3.7353931632172213`*^9, 
   3.735393178799716*^9}},ExpressionUUID->"b248cee2-5159-4ae5-997b-\
016cfbe97044"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[GridBox[{
     {
      StyleBox["\<\"1 column 1\"\>",
       StripOnInput->False,
       LineColor->RGBColor[0, 0, 1],
       FrontFaceColor->RGBColor[0, 0, 1],
       BackFaceColor->RGBColor[0, 0, 1],
       GraphicsColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1]]},
     {
      TagBox[GridBox[{
         {"\<\"Min\"\>", 
          RowBox[{"-", "1"}]},
         {"\<\"Mean\"\>", "0.8144`"},
         {"\<\"1st Qu\"\>", "1"},
         {"\<\"3rd Qu\"\>", "1"},
         {"\<\"Max\"\>", "1"},
         {"\<\"Median\"\>", "1"}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], "}"}]], "Output",
 CellChangeTimes->{
  3.734335849975275*^9, 3.734336047172662*^9, 3.7343373740262527`*^9, 
   3.734340277351605*^9, 3.7353916739415703`*^9, {3.7353931632172213`*^9, 
   3.735393178817912*^9}},ExpressionUUID->"71a8cd60-acdd-466b-843b-\
9ccbf85c04f7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1134"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "116"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.734335849975275*^9, 3.734336047172662*^9, 3.7343373740262527`*^9, 
   3.734340277351605*^9, 3.7353916739415703`*^9, {3.7353931632172213`*^9, 
   3.735393178833046*^9}},ExpressionUUID->"0b33ab09-b0b0-4f0e-ab7f-\
f86beb308432"],

Cell[BoxData["\<\"test_labels_new.csv\"\>"], "Output",
 CellChangeTimes->{
  3.734335849975275*^9, 3.734336047172662*^9, 3.7343373740262527`*^9, 
   3.734340277351605*^9, 3.7353916739415703`*^9, {3.7353931632172213`*^9, 
   3.7353931788480253`*^9}},ExpressionUUID->"0e480ca7-1d39-468c-9726-\
52408303a6b5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"clResult3", "=", 
   RowBox[{"cf3", "[", "testData3", "]"}]}], ";"}], "\n", 
 RowBox[{"Short", "[", "clResult3", "]"}], "\n", 
 RowBox[{"RecordsSummary", "[", "clResult3", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Tally", "[", "clResult3", "]"}]}], "Input",
 CellChangeTimes->{{3.735391826161982*^9, 3.735391834760632*^9}, 
   3.735391923166176*^9},ExpressionUUID->"ef15c4cb-fa38-43a5-bf64-\
a638f591a42a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["4. Comparisons, Learnings and Workload", "Section"]], \
"Subsubsection",
 CellChangeTimes->{{3.734281668671422*^9, 3.734281677514929*^9}, {
   3.734335884353109*^9, 3.73433591010907*^9}, 3.734336150769513*^9, {
   3.734339255190702*^9, 
   3.734339260612361*^9}},ExpressionUUID->"81c0538e-f600-4dd9-9fff-\
f48f725aca4f"],

Cell["\<\
So far we only know that cf4, cf5 and cf6 predicts different labels for the \
test data.\
\>", "Text",
 CellChangeTimes->{{3.7343359191188602`*^9, 
  3.734335960917735*^9}},ExpressionUUID->"167f6425-d530-435b-b2b5-\
6a93fe43bb20"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"clRes", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"cf5", "[", "testData5", "]"}], ",", 
      RowBox[{"cf6", "[", "testData5", "]"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ct", "=", 
   RowBox[{"CrossTabulate", "[", "clRes", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "ct", "]"}]}], "Input",
 CellChangeTimes->{{3.7342816894269867`*^9, 3.73428174513651*^9}, {
   3.734281804971539*^9, 3.734281824267194*^9}, {3.734322431697699*^9, 
   3.734322491276887*^9}, 3.7343225482262287`*^9, {3.734335967642849*^9, 
   3.734335971472378*^9}, 
   3.734337478405839*^9},ExpressionUUID->"ae2e7790-b6a9-42de-8a78-\
0380a4b6a497"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       StyleBox["\[Null]",
        ShowStringCharacters->False], 
       TagBox[
        RowBox[{"-", "1"}],
        HoldForm], 
       TagBox["1",
        HoldForm]},
      {
       TagBox[
        RowBox[{"-", "1"}],
        HoldForm], "106", "8"},
      {
       TagBox["1",
        HoldForm], "6", "1130"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
       "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
   "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {
     1, {{0, 2, 4}, {{1}, {2}, {2}, {1}}}, {106, 8, 1130, 6}}], {
    TableHeadings -> {{-1, 1}, {-1, 1}}}]]]], "Output",
 CellChangeTimes->{{3.7342817751359453`*^9, 3.734281785460837*^9}, 
   3.734281816974538*^9, 3.734282412546658*^9, 3.734282802470296*^9, {
   3.73432245862677*^9, 3.734322492948455*^9}, {3.734335977687119*^9, 
   3.7343359808442717`*^9}, 3.7343374024576607`*^9, 3.734337487557446*^9, 
   3.7353881493742237`*^9},ExpressionUUID->"e7b7b8f3-fbc4-4326-aa36-\
ac8166e53b42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"clRes2", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"cf4", "[", "testData5", "]"}], ",", 
      RowBox[{"cf6", "[", "testData5", "]"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ct2", "=", 
   RowBox[{"CrossTabulate", "[", "clRes2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "ct2", "]"}]}], "Input",
 CellChangeTimes->{{3.7342816894269867`*^9, 3.73428174513651*^9}, {
   3.734281804971539*^9, 3.7342818313352823`*^9}, {3.7343225604084997`*^9, 
   3.734322569147995*^9}, {3.734335990096739*^9, 3.7343360075987167`*^9}, 
   3.734336093258747*^9, 3.73433617026024*^9, 
   3.7343374199265747`*^9},ExpressionUUID->"1af6f1c0-9d8e-4f71-97e0-\
d6a9763cee92"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       StyleBox["\[Null]",
        ShowStringCharacters->False], 
       TagBox[
        RowBox[{"-", "1"}],
        HoldForm], 
       TagBox["1",
        HoldForm]},
      {
       TagBox[
        RowBox[{"-", "1"}],
        HoldForm], "109", "7"},
      {
       TagBox["1",
        HoldForm], "3", "1131"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
       "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
   "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {
     1, {{0, 2, 4}, {{1}, {2}, {2}, {1}}}, {109, 7, 1131, 3}}], {
    TableHeadings -> {{-1, 1}, {-1, 1}}}]]]], "Output",
 CellChangeTimes->{
  3.734281831707686*^9, 3.734282412743416*^9, 3.734282802709112*^9, {
   3.7343225706158037`*^9, 3.7343225756399612`*^9}, {3.7343360105413933`*^9, 
   3.7343360182816763`*^9}, {3.734336095829743*^9, 3.734336116220989*^9}, 
   3.7343361811177053`*^9, 3.734337406378014*^9, 3.735388158020612*^9, 
   3.735393285779571*^9},ExpressionUUID->"73c7c086-d9ec-43c9-b0a9-\
7ff30cdb47f0"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"clRes2", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"cf1", "[", "testData5", "]"}], ",", 
      RowBox[{"cf6", "[", "testData5", "]"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ct2", "=", 
   RowBox[{"CrossTabulate", "[", "clRes2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "ct2", "]"}]}], "Input",
 CellChangeTimes->{{3.734339905280912*^9, 
  3.73433991125007*^9}},ExpressionUUID->"b4bc54e2-736f-440e-9447-\
914f94b3e70e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Subsubsection",
 CellChangeTimes->{{3.734282187799402*^9, 3.734282198181951*^9}, {
   3.7343376216255903`*^9, 3.734337632319043*^9}, 3.734337717665846*^9, 
   3.734337760206051*^9},ExpressionUUID->"cf328801-fcc4-4ae1-863b-\
8be1c342be86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"cf4", ",", "trainingData5", ",", "\"\<ConfusionMatrixPlot\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7343377649657583`*^9, 3.734337841649629*^9}, {
   3.734337930932773*^9, 3.734337952354347*^9}, {3.734337992325418*^9, 
   3.734338017950411*^9}, {3.734338811605035*^9, 3.734338811649225*^9}, {
   3.734338851228386*^9, 3.73433887431234*^9}, 
   3.734339750993739*^9},ExpressionUUID->"22b64a20-3b0b-42b4-91c0-\
5678b24f7b70"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{1., 1., 1.}, {1., 0.42, 0.}}, {{0.9048065409964402, 
   0.7537129494065118, 0.39020581518075537`}, {0.9350619064451621, 
   0.8730600269510996, 0.6772029887146698}}}, {{0, 0}, {2, 2}}, {0, 1}],
  Epilog->{{
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["323", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           TemplateBox[{"323", "\" examples of \"", 
             RowBox[{"-", "1"}], "\" correctly classified\""}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"Recall = \"", "0.9670658682634731`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9832572298325722`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{323, " examples of ", -1, " correctly classified"}], 
         Row[{"Precision = ", 1.}], 
         Row[{"Recall = ", 0.9670658682634731}], 
         Row[{"FScore = ", 0.9832572298325722}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["0", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "0", "\" example of \"", "1", "\" misclassified as \"", 
             RowBox[{"-", "1"}]}, "RowDefault"]}, {
           TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
           TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{0, " example of ", 1, " misclassified as ", -1}], 
         Row[{"Column fraction = ", 0.}], 
         Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["11", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           TemplateBox[{"11", "\" examples of \"", 
             RowBox[{"-", "1"}], "\" misclassified as \"", "1"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Column fraction = \"", "0.0036041939711664484`"}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Row fraction = \"", "0.03293413173652695`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{11, " examples of ", -1, " misclassified as ", 1}], 
         Row[{"Column fraction = ", 0.0036041939711664484`}], 
         Row[{"Row fraction = ", 0.03293413173652695}]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       InsetBox[
        GraphicsBox[{
          Opacity[1.], 
          InsetBox[
           FormBox["3041", TraditionalForm], {0.5, 0.5}], 
          Opacity[0.], 
          RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
       TagBox[
        GridBox[{{
           
           TemplateBox[{
            "3041", "\" examples of \"", "1", "\" correctly classified\""}, 
            "RowDefault"]}, {
           
           TemplateBox[{"\"Precision = \"", "0.9963958060288336`"}, 
            "RowDefault"]}, {
           TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
           
           TemplateBox[{"\"FScore = \"", "0.9981946495978993`"}, 
            "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
         DefaultBaseStyle -> "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
      Annotation[#, 
       Column[{
         Row[{3041, " examples of ", 1, " correctly classified"}], 
         Row[{"Precision = ", 0.9963958060288336}], 
         Row[{"Recall = ", 1.}], 
         Row[{"FScore = ", 0.9981946495978993}]}], "Tooltip"]& ]}, 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          TemplateBox[{"334", "\" example\"", "\"s\"", "\" of class \"", 
            RowBox[{"-", "1"}]}, "RowDefault"]}, {
          
          TemplateBox[{"\"Recall = \"", "0.9670658682634731`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{334, " example", "s", " of class ", -1}], 
        Row[{"Recall = ", 0.9670658682634731}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "3041", "\" example\"", "\"s\"", "\" of class \"", "1"}, 
           "RowDefault"]}, {
          TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{3041, " example", "s", " of class ", 1}], 
        Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          TemplateBox[{"323", "\" example\"", "\"s\"", "\" classified as \"", 
            RowBox[{"-", "1"}]}, "RowDefault"]}, {
          TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{323, " example", "s", " classified as ", -1}], 
        Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      InsetBox[
       GraphicsBox[{
         Opacity[0.], 
         RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
      TagBox[
       GridBox[{{
          
          TemplateBox[{
           "3052", "\" example\"", "\"s\"", "\" classified as \"", "1"}, 
           "RowDefault"]}, {
          
          TemplateBox[{"\"Precision = \"", "0.9963958060288336`"}, 
           "RowDefault"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
        DefaultBaseStyle -> "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
     Annotation[#, 
      Column[{
        Row[{3052, " example", "s", " classified as ", 1}], 
        Row[{"Precision = ", 0.9963958060288336}]}], "Tooltip"]& ]},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{1.5, 
       FormBox[
        RotationBox[
         RowBox[{"-", "1"}], BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 0.], TraditionalForm]}}, {{1.5, 
       FormBox["334", TraditionalForm]}, {0.5, 
       FormBox["3041", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["323", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["3052", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox[
         RowBox[{"-", "1"}], BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["1", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->12,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.734337775251402*^9, 3.734337808725952*^9, 3.734337845180667*^9, {
   3.734337934379949*^9, 3.73433795446806*^9}, {3.734338010537265*^9, 
   3.734338019700659*^9}, 3.7343388145339003`*^9, {3.7343388540545588`*^9, 
   3.7343388815554028`*^9}, 3.734340469253401*^9, 
   3.735388172139759*^9},ExpressionUUID->"a9574ab0-1578-4aad-a365-\
71b2bbc0e079"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierInformation", "[", "cf4", "]"}]], "Input",
 CellChangeTimes->{{3.734282288248407*^9, 3.73428231391251*^9}, {
  3.7343226280672617`*^9, 3.73432262956404*^9}, {3.734336206594101*^9, 
  3.734336225939176*^9}, {3.734337547446657*^9, 
  3.734337565222897*^9}},ExpressionUUID->"19a11a62-573e-4ec6-914b-\
4fa089246bc4"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12,
          FontWeight->Bold],
         FrameMargins->{{10, 5}, {-5, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.93119, 0.93119, 0.93119],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Input type\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"\"NumericalVector\"",StyleBox[
                 TemplateBox[{"\" (length: \"", "8", "\")\""}, "RowDefault"], 
                 GrayLevel[0.5], StripOnInput -> False]},
               "RowDefault"]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"Classes\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{",","\",\"",RowBox[{"-", "1"}],"1"},
               "RowWithSeparators"]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox["\<\"RandomForest\"\>",
                TemplateBox[{
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 20, "Length" -> 4, "InitialType" -> 
                    TypeSystem`Struct[{
                    "FeatureFraction", "LeafSize", "TreeNumber", 
                    "DistributionSmoothing"}, {
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real]}], "Shape" -> 
                    TypeSystem`PackageScope`DocumentShape[
                    
                    Association[{"FeatureFraction"} -> 
                    TypeSystem`PackageScope`AtomShape[60], {"LeafSize"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {"TreeNumber"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {
                    "DistributionSmoothing"} -> 
                    TypeSystem`PackageScope`AtomShape[60]], 1], "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[232409171], "Type" -> 
                    TypeSystem`Struct[{
                    "FeatureFraction", "LeafSize", "TreeNumber", 
                    "DistributionSmoothing"}, {
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real]}], "HandleQ" -> True, "RowTarget" -> 
                    20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[232409171]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FeatureFraction\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FeatureFraction\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825243143][{
                    Key["FeatureFraction"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    825243143][
                    GeneralUtilities`Slice[
                    Key["FeatureFraction"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0.353553"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    825243143][
                    GeneralUtilities`Slice[
                    Key["FeatureFraction"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"LeafSize\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LeafSize\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825243143][{
                    Key["LeafSize"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    825243143][
                    GeneralUtilities`Slice[
                    Key["LeafSize"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["5"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    825243143][
                    GeneralUtilities`Slice[
                    Key["LeafSize"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TreeNumber\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TreeNumber\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825243143][{
                    Key["TreeNumber"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    825243143][
                    GeneralUtilities`Slice[
                    Key["TreeNumber"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["50"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    825243143][
                    GeneralUtilities`Slice[
                    Key["TreeNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DistributionSmoothing\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"DistributionSmoothing\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825243143][{
                    Key["DistributionSmoothing"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    825243143][
                    GeneralUtilities`Slice[
                    Key["DistributionSmoothing"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0.5"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    825243143][
                    GeneralUtilities`Slice[
                    Key["DistributionSmoothing"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 825243143][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    825243143]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    825243143][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    825243143][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                   DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                 DisplayFunction -> (#& ), 
                 InterpretationFunction -> ("Dataset[<>]"& )]],
               Annotation[#, 
                Dataset[
                 Association[
                 "FeatureFraction" -> Rational[1, 2] 2^Rational[-1, 2], 
                  "LeafSize" -> 5, "TreeNumber" -> 50, 
                  "DistributionSmoothing" -> 0.5], 
                 
                 TypeSystem`Struct[{
                  "FeatureFraction", "LeafSize", "TreeNumber", 
                   "DistributionSmoothing"}, {
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real]}], 
                 Association["ID" -> 17158531092723]], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Accuracy\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                
                TemplateBox[{
                 TemplateBox[{
                   "97.0420319207993884447`3.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod],
                  StyleBox[
                   TemplateBox[{"\" \[PlusMinus] \"", 
                    
                    TemplateBox[{
                    "0.4678851652365044189`2.", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod]}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.9610626159032638061`3.",
                   "\", \"", "0.9797780225127239451`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.9610626159032638061`3., 
                  ", ", 0.9797780225127239451`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                 TagBox[
                  TooltipBox[
                  "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                   "TextStyling"], 
                  Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.1259796070937115597`3.",StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0049603586610012136`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.1160588897717091394`3.",
                   "\", \"", "0.13590032441571398`3.", "\"]\""}, "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.1160588897717091394`3., 
                  ", ", 0.13590032441571398`3., "]"}], "Tooltip"]& ]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Single evaluation time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "5.06`",
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}],"milliseconds per example",FractionBox[
                "\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Batch evaluation speed\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              TemplateBox[{
               "27.7`",
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"ms\""}],"examples per millisecond",
                FractionBox["\"Examples\"", "\"Milliseconds\""]},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Classifier memory\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"245.`","\"kB\"","kilobytes","\"Kilobytes\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox[
                "\"Training examples used\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"3375","\"examples\"","examples","\"Examples\""},
               "Quantity"]},
             {
              
              TemplateBox[{
               TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"2.47`","\"s\"","seconds","\"Seconds\""},
               "Quantity"]},
             {
              ItemBox[
               
               DynamicModuleBox[{
                MachineLearning`file4Automation`PackagePrivate`pos$$ = 1}, 
                DynamicBox[ToBoxes[
                  Show[
                   Part[{
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.37839076068622424`}, {
                    4.248495242049359, -1.0778684117519408`}, {
                    5.991464547107982, -1.5610510935649022`}, {
                    7.90100705199242, -2.0716352335921413`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, -0.5607123174801787}, {
                    2.302585092994046, -1.889313676798187}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, -0.37839076068622424`}}, {{
                    4.248495242049359, -1.0778684117519408`}}, {{
                    5.991464547107982, -1.5610510935649022`}}, {{
                    7.90100705199242, -2.0716352335921413`}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, -0.5607123174801787}}, {{
                    2.302585092994046, -1.889313676798187}}}]}, {}}}, {}, {}, \
{}, {}}}, {{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, -0.5073173547586141}, {
                    2.302585092994046, -0.2642039524337267}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.248495242049359, -1.1180585667526042`}, {
                    4.248495242049359, -1.0392312896291478`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.991464547107982, -1.609607697003456}, {
                    5.991464547107982, -1.5147434532148703`}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{7.90100705199242, -2.1118056680806685`}, {
                    7.90100705199242, -2.033016337503419}}]}}}, {}, {}, {}, \
{}}}}, {DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.0928535575329725`, -2.194532009851442}, 
                    PlotRange -> {{2.1837776335999117`, 
                    Log[
                    3375]}, {-2.1657043709758033`, -0.37839076068622424`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {37, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.0928535575329725`, -2.194532009851442}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {37, 0}}, ImageSize -> 330, 
                    LabelStyle -> 10, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1837776335999117`, 
                    Log[
                    3375]}, {-2.1657043709758033`, -0.37839076068622424`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.74543597217872}, {
                    4.248495242049359, 0.9099527396274193}, {
                    5.991464547107982, 0.9263917344513879}, {7.90100705199242,
                     0.9704203192079939}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 0.8086835993399949}, {
                    2.302585092994046, 0.8945231666144641}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 0.74543597217872}}, {{
                    4.248495242049359, 0.9099527396274193}}, {{
                    5.991464547107982, 0.9263917344513879}}, {{
                    7.90100705199242, 0.9704203192079939}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 0.8086835993399949}}, {{
                    2.302585092994046, 
                    0.8945231666144641}}}]}, {}}}, {}, {}, {}, {}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, DisplayFunction -> Identity, DisplayFunction -> 
                    Identity, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, 
                    AxesOrigin -> {2.0928535575329725`, 0.7333776761240278}, 
                    PlotRange -> {{2.1837776335999117`, 
                    Log[3375]}, {0.74543597217872, 1}}, PlotRangeClipping -> 
                    True, ImagePadding -> {{30, 10}, {37, 0}}, 
                    DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.0928535575329725`, 0.7333776761240278}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {37, 0}}, ImageSize -> 330, 
                    LabelStyle -> 10, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1837776335999117`, 
                    Log[3375]}, {0.74543597217872, 1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
                    Graphics[{{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.37839076068622424`}, {
                    4.248495242049359, -1.0778684117519408`}, {
                    5.991464547107982, -1.5610510935649022`}, {
                    7.90100705199242, -2.0716352335921413`}}]}, 
                    "RandomForest"]}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.0928535575329725`, -2.194532009851442}, 
                    PlotRange -> {{2.1837776335999117`, 
                    Log[
                    3375]}, {-2.1657043709758033`, -0.37839076068622424`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {37, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.0928535575329725`, -2.194532009851442}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {37, 0}}, ImageSize -> 330, 
                    LabelStyle -> 10, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1837776335999117`, 
                    Log[
                    3375]}, {-2.1657043709758033`, -0.37839076068622424`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}]}, 
                    MachineLearning`file4Automation`PackagePrivate`pos$$], 
                   PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file4Automation`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file4Automation`PackagePrivate`pos$$ - 
                    1, 1], Appearance -> "Frameless"], 
                    Part[{
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], "Accuracy", 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file4Automation`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file4Automation`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file4Automation`PackagePrivate`pos$$ + 
                    1, 
                    Length[{
                    Graphics[{{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.37839076068622424`}, {
                    4.248495242049359, -1.0778684117519408`}, {
                    5.991464547107982, -1.5610510935649022`}, {
                    7.90100705199242, -2.0716352335921413`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, -0.5607123174801787}, {
                    2.302585092994046, -1.889313676798187}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, -0.37839076068622424`}}, {{
                    4.248495242049359, -1.0778684117519408`}}, {{
                    5.991464547107982, -1.5610510935649022`}}, {{
                    7.90100705199242, -2.0716352335921413`}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, -0.5607123174801787}}, {{
                    2.302585092994046, -1.889313676798187}}}]}, {}}}, {}, {}, \
{}, {}}}, {{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.302585092994046, -0.5073173547586141}, {
                    2.302585092994046, -0.2642039524337267}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.248495242049359, -1.1180585667526042`}, {
                    4.248495242049359, -1.0392312896291478`}}]}, {
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{5.991464547107982, -1.609607697003456}, {
                    5.991464547107982, -1.5147434532148703`}}]}, {
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{7.90100705199242, -2.1118056680806685`}, {
                    7.90100705199242, -2.033016337503419}}]}}}, {}, {}, {}, \
{}}}}, {DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.0928535575329725`, -2.194532009851442}, 
                    PlotRange -> {{2.1837776335999117`, 
                    Log[
                    3375]}, {-2.1657043709758033`, -0.37839076068622424`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {37, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.0928535575329725`, -2.194532009851442}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {37, 0}}, ImageSize -> 330, 
                    LabelStyle -> 10, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1837776335999117`, 
                    Log[
                    3375]}, {-2.1657043709758033`, -0.37839076068622424`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, 0.74543597217872}, {
                    4.248495242049359, 0.9099527396274193}, {
                    5.991464547107982, 0.9263917344513879}, {7.90100705199242,
                     0.9704203192079939}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    Opacity[0]], 
                    
                    Line[{{2.302585092994046, 0.8086835993399949}, {
                    2.302585092994046, 0.8945231666144641}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    AbsolutePointSize[6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 0.74543597217872}}, {{
                    4.248495242049359, 0.9099527396274193}}, {{
                    5.991464547107982, 0.9263917344513879}}, {{
                    7.90100705199242, 0.9704203192079939}}}]}, {
                    Directive[
                    Opacity[0]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledSquare]", FontSize -> 8.96], {0., 0.}], {{{
                    2.302585092994046, 0.8086835993399949}}, {{
                    2.302585092994046, 
                    0.8945231666144641}}}]}, {}}}, {}, {}, {}, {}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, DisplayFunction -> Identity, DisplayFunction -> 
                    Identity, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, 
                    AxesOrigin -> {2.0928535575329725`, 0.7333776761240278}, 
                    PlotRange -> {{2.1837776335999117`, 
                    Log[3375]}, {0.74543597217872, 1}}, PlotRangeClipping -> 
                    True, ImagePadding -> {{30, 10}, {37, 0}}, 
                    DisplayFunction -> Identity, AspectRatio -> 
                    GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.0928535575329725`, 0.7333776761240278}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {37, 0}}, ImageSize -> 330, 
                    LabelStyle -> 10, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1837776335999117`, 
                    Log[3375]}, {0.74543597217872, 1}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 0}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], Automatic}}], 
                    Graphics[{{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.302585092994046, -0.37839076068622424`}, {
                    4.248495242049359, -1.0778684117519408`}, {
                    5.991464547107982, -1.5610510935649022`}, {
                    7.90100705199242, -2.0716352335921413`}}]}, 
                    "RandomForest"]}}, {}, {}, {}, {}}}}, {
                    DisplayFunction -> Identity, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, 
                    AxesOrigin -> {2.0928535575329725`, -2.194532009851442}, 
                    PlotRange -> {{2.1837776335999117`, 
                    Log[
                    3375]}, {-2.1657043709758033`, -0.37839076068622424`}}, 
                    PlotRangeClipping -> True, 
                    ImagePadding -> {{30, 10}, {37, 0}}, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.0928535575329725`, -2.194532009851442}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], {}}, {
                    Charting`ScaledTicks[{Log, Exp}], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{30, 10}, {37, 0}}, ImageSize -> 330, 
                    LabelStyle -> 10, 
                    Method -> {
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.1837776335999117`, 
                    Log[
                    3375]}, {-2.1657043709758033`, -0.37839076068622424`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {
                    Charting`ScaledTicks[{Log, Exp}], 
                    Charting`ScaledTicks[{Log, Exp}]}}]}]], Appearance -> 
                    "Frameless"]}}, Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                 ImageSizeCache->{413., {147., 153.}}],
                DynamicModuleValues:>{}],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 12, FontFamily -> ".SF NS Text", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9802, 0.9802, 0.9802],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{{3.734282288879242*^9, 3.734282314851509*^9}, 
   3.734282413775427*^9, 
   3.734282803546857*^9},ExpressionUUID->"c4b1cb8d-9661-4be2-872e-\
0595b85b4fe8"]
}, Open  ]],

Cell["\<\
The reason why Random Forest method was used is that it performed the best \
compared to other methods such as Logistic Regression. Based on the \
parameters such as accuracy, our classifiers seem to perform good. The \
question of whether the unseen test data is representative of training data \
is subject to further examination. 

In general we can conclude that the training data included noise that needed \
to be reduced in dimension space. We can argue that only some features, i.e., \
2-5, are decisive, however, it is again subject to further examination \
whether they are only two vectors or distributed over multiple vectors. \
Regardless, two-vector dimension reduction and respective classification \
yielded okay results. Yet in the full cycle we went with 8 dimensions. cf4 \
could be a good classifier as it has good classification parameters and also \
that we used validation set with it. 
\
\>", "Text",
 CellChangeTimes->{{3.734338039596284*^9, 3.7343383820929747`*^9}, {
  3.7343384388035507`*^9, 3.734338479272077*^9}, {3.7343385196412983`*^9, 
  3.7343385432880793`*^9}, {3.734339266455652*^9, 3.734339380918775*^9}, {
  3.7343394229050217`*^9, 3.7343396113113823`*^9}, {3.734339654886712*^9, 
  3.734339742975902*^9}, {3.734339940525045*^9, 3.734339964431521*^9}, {
  3.7343409768380423`*^9, 3.73434112383397*^9}, {3.734341816527692*^9, 
  3.734341817123149*^9}, {3.760155500735973*^9, 
  3.760155523408271*^9}},ExpressionUUID->"876b53bf-ee5c-46cf-9719-\
33ba46b0461d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1215, 782},
WindowMargins->{{Automatic, 15}, {Automatic, 67}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 512, 10, 293, "Title",ExpressionUUID->"b5ba41e5-172c-4453-b4fb-d17222f76512"],
Cell[937, 27, 472708, 7760, 929, "Text",ExpressionUUID->"d79f9712-1226-443a-b0fd-23b529b870ec"],
Cell[CellGroupData[{
Cell[473670, 7791, 254, 4, 84, "Section",ExpressionUUID->"bf4ce0ba-e249-47fd-91a6-54eda1f2943e"],
Cell[473927, 7797, 1501, 32, 142, "Input",ExpressionUUID->"c75deac5-ee64-48e3-b6aa-d9fb88282980"],
Cell[CellGroupData[{
Cell[475453, 7833, 1892, 36, 220, "Input",ExpressionUUID->"f6988753-2d86-40a4-867a-d45639a85ee4"],
Cell[477348, 7871, 277, 6, 42, "Output",ExpressionUUID->"565d69b2-494f-475d-ab1f-7d22d1413ea3"],
Cell[477628, 7879, 273, 6, 42, "Output",ExpressionUUID->"41451e0e-8fcd-41af-87c5-d3dead39f8ed"],
Cell[477904, 7887, 277, 6, 42, "Output",ExpressionUUID->"dcfbbaa4-0ff1-45bc-a813-8eaa0a489248"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[478230, 7899, 410, 6, 84, "Section",ExpressionUUID->"af475602-cd5b-45ce-84b2-eb89a24223fd"],
Cell[CellGroupData[{
Cell[478665, 7909, 820, 19, 90, "Input",ExpressionUUID->"4a168ab8-24ff-46cd-ab7b-993eb241b778"],
Cell[479488, 7930, 394, 12, 42, "Output",ExpressionUUID->"6750b1c2-79a8-488c-bb0d-70b0f875c868"],
Cell[479885, 7944, 2538, 68, 173, "Output",ExpressionUUID->"ebf05163-5817-4b58-b53b-3efbd6bf2fa0"]
}, Open  ]],
Cell[482438, 8015, 344, 7, 73, "Text",ExpressionUUID->"e2993ce3-407f-411d-944c-23ab5ac42b54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[482819, 8027, 306, 5, 84, "Section",ExpressionUUID->"543b2597-15c6-4e2f-ab30-8dd615c93b9d"],
Cell[CellGroupData[{
Cell[483150, 8036, 354, 5, 67, "Subsection",ExpressionUUID->"2a6f865c-671f-4441-ae02-b0214ba4a173"],
Cell[483507, 8043, 516, 10, 73, "Text",ExpressionUUID->"a912498e-b104-41d2-a215-437957a31e41"],
Cell[CellGroupData[{
Cell[484048, 8057, 329, 8, 37, "Input",ExpressionUUID->"5c80f488-2a4d-418f-98e6-047bbade7268"],
Cell[484380, 8067, 1218, 34, 175, "Output",ExpressionUUID->"f19283da-e33d-4b9c-9788-7afe2590921a"]
}, Open  ]],
Cell[485613, 8104, 168, 3, 44, "Text",ExpressionUUID->"8c682041-3e86-47ef-9cff-a747615de118"],
Cell[485784, 8109, 534, 12, 37, "Input",ExpressionUUID->"fbd20af9-baca-4265-8649-7158f62aa6dc"],
Cell[CellGroupData[{
Cell[486343, 8125, 216, 4, 37, "Input",ExpressionUUID->"d6a9a361-415f-4970-ba4c-c7d0b2f21bc1"],
Cell[486562, 8131, 386, 11, 42, "Output",ExpressionUUID->"02fa79f7-13b0-44e3-b4f4-dbac96791969"]
}, Open  ]],
Cell[486963, 8145, 160, 3, 44, "Text",ExpressionUUID->"7c93a6ff-f274-496d-8aee-261fcd45c6bb"],
Cell[CellGroupData[{
Cell[487148, 8152, 906, 21, 90, "Input",ExpressionUUID->"ed28b3d8-c1b4-49a1-929e-0ea69d8c5a34"],
Cell[488057, 8175, 15696, 436, 555, "Output",ExpressionUUID->"657109cf-ccda-4623-acc3-98417d045462"],
Cell[503756, 8613, 2248, 62, 173, "Output",ExpressionUUID->"5ec7f881-6c89-45a0-b79b-b67f699012cc"]
}, Open  ]],
Cell[506019, 8678, 169, 3, 44, "Text",ExpressionUUID->"88e60b43-f9cf-4a93-bbdd-63445c919979"],
Cell[CellGroupData[{
Cell[506213, 8685, 328, 7, 37, "Input",ExpressionUUID->"62396838-91d6-4be8-92ee-d1047e750430"],
Cell[506544, 8694, 253, 6, 42, "Output",ExpressionUUID->"9461dc4d-5471-406a-a3ef-61452c177056"]
}, Open  ]],
Cell[CellGroupData[{
Cell[506834, 8705, 936, 21, 37, "Input",ExpressionUUID->"71c93fc7-8f47-412d-915f-11639f79a380"],
Cell[507773, 8728, 692, 14, 69, "Output",ExpressionUUID->"41497b86-4af7-4215-88c3-44024aea3ca9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[508502, 8747, 780, 18, 37, "Input",ExpressionUUID->"6171821f-6355-43b1-acbb-2815741a5164"],
Cell[509285, 8767, 692, 14, 75, "Output",ExpressionUUID->"593d54c0-84db-4fa5-a8c5-c2c65a204536"]
}, Open  ]],
Cell[509992, 8784, 352, 7, 44, "Text",ExpressionUUID->"bc8e75bf-1620-48ad-80e7-856d22aa904d"],
Cell[CellGroupData[{
Cell[510369, 8795, 2291, 49, 324, "Input",ExpressionUUID->"279e009e-bb87-420c-b592-26dabf7714dd"],
Cell[CellGroupData[{
Cell[512685, 8848, 7390, 208, 364, "Echo",ExpressionUUID->"c8ffea4a-ec04-462c-a0c2-21bffbe9d56b"],
Cell[520078, 9058, 5043, 138, 128, "Echo",ExpressionUUID->"ecac3d97-69eb-4434-969a-76e05e0a0683"],
Cell[525124, 9198, 883, 23, 32, "Echo",ExpressionUUID->"984ba105-4da0-4752-a41d-42ebae0e462b"],
Cell[526010, 9223, 42164, 1004, 478, "Echo",ExpressionUUID->"6ac69c7f-ceeb-42a2-916d-896a6e393510"],
Cell[568177, 10229, 1026, 22, 54, "Echo",ExpressionUUID->"0e17c232-6d38-4462-8e51-1cbd7a8408cf"]
}, Open  ]]
}, Open  ]],
Cell[569230, 10255, 170, 3, 44, "Text",ExpressionUUID->"15952bb5-6670-409a-8aed-38a7c94adff0"],
Cell[CellGroupData[{
Cell[569425, 10262, 351, 7, 37, "Input",ExpressionUUID->"f0aae38f-985c-4756-bfb8-f3feb428fc78"],
Cell[569779, 10271, 9347, 192, 113, "Output",ExpressionUUID->"720711f5-3c8d-46cc-bc19-b20b5fd0e5d8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[579175, 10469, 429, 10, 134, "Subsection",ExpressionUUID->"8f8ef512-f9e4-4b20-8119-8a4818535de6"],
Cell[579607, 10481, 644, 11, 102, "Text",ExpressionUUID->"db12cb37-5cb8-43d1-a306-14d23ca61bea"],
Cell[CellGroupData[{
Cell[580276, 10496, 183, 3, 56, "Subsubsection",ExpressionUUID->"72c79ab9-1fa8-41c5-84df-e4b4f3e4b9ee"],
Cell[580462, 10501, 413, 12, 37, "Input",ExpressionUUID->"4316ad0f-f702-4001-8cbc-5d86914f2d7e"],
Cell[580878, 10515, 170, 3, 44, "Text",ExpressionUUID->"61c4c964-36e1-4a02-a2a5-0f0354d2e289"],
Cell[581051, 10520, 741, 18, 64, "Input",ExpressionUUID->"2e17acea-ed49-4c12-bcbe-ff6b82b2bfc9"],
Cell[CellGroupData[{
Cell[581817, 10542, 418, 10, 64, "Input",ExpressionUUID->"58fc9856-e170-4b41-a4d0-77e3ad38414a"],
Cell[582238, 10554, 1380, 36, 175, "Output",ExpressionUUID->"ded16141-cdee-4f05-b504-287e16fc9141"]
}, Open  ]],
Cell[583633, 10593, 153, 3, 44, "Text",ExpressionUUID->"a2e6b233-95fd-4b6f-b53c-66ebb1f2bed0"],
Cell[583789, 10598, 765, 17, 37, "Input",ExpressionUUID->"63c5100e-8116-447d-845c-357d8a9fe854"],
Cell[584557, 10617, 206, 3, 44, "Text",ExpressionUUID->"3e0279a5-fccc-4473-9d87-8cf0228409b4"],
Cell[CellGroupData[{
Cell[584788, 10624, 528, 11, 37, "Input",ExpressionUUID->"33d31e0b-86a6-4f14-a657-f59e5b1583f6"],
Cell[585319, 10637, 24932, 627, 290, "Output",ExpressionUUID->"ddc4c9d1-b33c-46f8-ae3c-6a34799a2742"]
}, Open  ]],
Cell[CellGroupData[{
Cell[610288, 11269, 353, 8, 37, "Input",ExpressionUUID->"239d000f-61df-46b4-98f0-b128f5bafc80"],
Cell[610644, 11279, 1477, 38, 177, "Output",ExpressionUUID->"cb3bed6c-2584-4bd2-96d8-5eab0dd2671a"]
}, Open  ]],
Cell[612136, 11320, 203, 3, 44, "Text",ExpressionUUID->"bc300e42-a1ba-4326-93fb-d033642b59ce"],
Cell[CellGroupData[{
Cell[612364, 11327, 687, 15, 37, "Input",ExpressionUUID->"280cefba-50a6-418e-8103-8a3d1e9a8b40"],
Cell[613054, 11344, 155574, 2566, 302, 143946, 2375, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"fa56d62f-7ce2-4d5e-b267-14b01a8f766e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[768665, 13915, 651, 15, 37, "Input",ExpressionUUID->"2e757556-b2d5-4807-a5f6-22851e2746bd"],
Cell[769319, 13932, 474, 9, 42, "Output",ExpressionUUID->"ade016df-1a35-43da-89e5-32d390f35d86"]
}, Open  ]],
Cell[769808, 13944, 182, 3, 44, "Text",ExpressionUUID->"fe40ee90-2a94-4211-8010-9e3424df4d6b"],
Cell[CellGroupData[{
Cell[770015, 13951, 3436, 80, 480, "Input",ExpressionUUID->"b1d8a0c5-6f4c-4bac-b643-d463e5851509"],
Cell[CellGroupData[{
Cell[773476, 14035, 280, 8, 32, "Echo",ExpressionUUID->"462fa8ea-9ebd-42a2-8b80-d70329582e24"],
Cell[773759, 14045, 5043, 138, 165, "Echo",ExpressionUUID->"c445e874-db7d-4ff4-84fe-5022e9d87bc5"],
Cell[778805, 14185, 883, 23, 32, "Echo",ExpressionUUID->"9f4712ae-9765-46d5-adba-897759a96e67"],
Cell[779691, 14210, 47704, 1112, 500, "Echo",ExpressionUUID->"98b6cf6e-dedd-49df-801e-c2ac2f757f88"],
Cell[827398, 15324, 883, 23, 32, "Echo",ExpressionUUID->"be322c3f-0f58-49a0-8113-498255146c6c"],
Cell[828284, 15349, 43558, 880, 620, "Echo",ExpressionUUID->"670e48c5-c43c-4974-ba63-4d8361a7d4d9"],
Cell[871845, 16231, 436, 12, 32, "Echo",ExpressionUUID->"57c28fa0-b558-4b6a-a189-7ad84f7da695"]
}, Open  ]]
}, Open  ]],
Cell[872308, 16247, 182, 3, 44, "Text",ExpressionUUID->"23d0def9-497d-4f13-b9eb-ba90e57b2759"],
Cell[CellGroupData[{
Cell[872515, 16254, 312, 8, 37, "Input",ExpressionUUID->"9805495c-3233-4679-9902-e3e65eeca3e1"],
Cell[872830, 16264, 9319, 191, 113, "Output",ExpressionUUID->"15c4e536-2977-439d-8da9-21abad1ea102"]
}, Open  ]],
Cell[882164, 16458, 331, 10, 6, "Text",ExpressionUUID->"f2bfe543-f7da-431c-9c97-4dfb2a3b8e57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[882532, 16473, 177, 3, 56, "Subsubsection",ExpressionUUID->"3f839df3-a205-42ba-9b58-b1596553ba68"],
Cell[882712, 16478, 198, 3, 44, "Text",ExpressionUUID->"74b85640-940d-404a-bc9b-e5ecf58bdfd4"],
Cell[882913, 16483, 593, 13, 37, "Input",ExpressionUUID->"6b9f66da-3d6e-4d0a-a075-7d7fbf6f4bc3"],
Cell[883509, 16498, 439, 10, 37, "DisplayFormulaNumbered",ExpressionUUID->"e96ff0e9-a994-4c8e-909e-e11d9a9dbfc6"],
Cell[883951, 16510, 235, 4, 44, "Text",ExpressionUUID->"f1248c2f-80cb-4b50-b56d-d1579d5c1278"],
Cell[CellGroupData[{
Cell[884211, 16518, 900, 22, 64, "Input",ExpressionUUID->"62651593-7b32-456c-8e62-a8724b0b01df"],
Cell[885114, 16542, 9579, 266, 366, "Output",ExpressionUUID->"218ff0b8-eb27-47ec-8c62-4c7106f8fab1"]
}, Open  ]],
Cell[894708, 16811, 166, 3, 44, "Text",ExpressionUUID->"1e8f1c41-655c-4565-bdcc-bb80f33b5707"],
Cell[CellGroupData[{
Cell[894899, 16818, 544, 11, 64, "Input",ExpressionUUID->"b2894b5b-2517-486f-8927-3023b702d442"],
Cell[895446, 16831, 393, 8, 42, "Output",ExpressionUUID->"a54af9a9-1275-4eac-b6bd-9a0e10a8e12d"],
Cell[895842, 16841, 392, 7, 42, "Output",ExpressionUUID->"5af52806-c2cc-47f2-989f-3d8a9d2624d1"]
}, Open  ]],
Cell[896249, 16851, 407, 8, 73, "Text",ExpressionUUID->"c989a9d4-472c-4dfe-bbb2-ad7ad05b51a3"],
Cell[CellGroupData[{
Cell[896681, 16863, 1143, 29, 90, "Input",ExpressionUUID->"d25f4c62-8bc8-483f-a78d-79b82476bfb4"],
Cell[897827, 16894, 9763, 269, 366, "Output",ExpressionUUID->"301119b1-db55-45c2-989d-2a4b848df045"]
}, Open  ]],
Cell[907605, 17166, 177, 3, 44, "Text",ExpressionUUID->"c00f91de-6223-4efd-8d38-cfb204353234"],
Cell[CellGroupData[{
Cell[907807, 17173, 326, 6, 64, "Input",ExpressionUUID->"d51b92fe-878e-4725-86c3-57ffae9d2e0f"],
Cell[908136, 17181, 396, 7, 42, "Output",ExpressionUUID->"5e787e81-afd2-4e14-8dc4-cae073c17ca7"],
Cell[908535, 17190, 395, 7, 42, "Output",ExpressionUUID->"69e2367a-ade2-4493-a42b-43a05b329111"]
}, Open  ]],
Cell[908945, 17200, 208, 4, 44, "Text",ExpressionUUID->"21d7be1d-be61-4f8e-a261-15056eaabdac"],
Cell[CellGroupData[{
Cell[909178, 17208, 419, 9, 37, "Input",ExpressionUUID->"73c36628-07ce-45c4-b899-12d8fb5b8337"],
Cell[909600, 17219, 9484, 193, 113, "Output",ExpressionUUID->"1a2eadb7-bf15-41d2-ad82-02b6cf6af828"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[919145, 17419, 373, 10, 134, "Subsection",ExpressionUUID->"c705c265-d444-47ba-b1e7-95b1cbaa5102"],
Cell[919521, 17431, 888, 15, 102, "Text",ExpressionUUID->"4f0f08a5-e7d9-498f-86f3-abf3c17c324f"],
Cell[CellGroupData[{
Cell[920434, 17450, 293, 4, 56, "Subsubsection",ExpressionUUID->"cf1ca1e1-d969-4b43-887f-269a5eed123a"],
Cell[CellGroupData[{
Cell[920752, 17458, 638, 16, 64, "Input",ExpressionUUID->"09fab090-a0dd-470b-856b-4b3100a9b8a6"],
Cell[921393, 17476, 2571, 68, 173, "Output",ExpressionUUID->"887bda9b-e71d-42a8-a132-b270087c46e7"]
}, Open  ]],
Cell[923979, 17547, 262, 6, 37, "Input",ExpressionUUID->"fd49ec78-8b17-4026-846d-a8c971861660"],
Cell[CellGroupData[{
Cell[924266, 17557, 688, 14, 90, "Input",ExpressionUUID->"b9e84fda-1d4d-4fdc-9e87-c3af64fb31a3"],
Cell[924957, 17573, 420, 8, 42, "Output",ExpressionUUID->"ee4df7a1-342f-495e-86ce-90bf94d1b121"]
}, Open  ]],
Cell[925392, 17584, 690, 17, 37, "Input",ExpressionUUID->"97568f97-bf44-4310-8ccd-ba50fca57d7e"],
Cell[CellGroupData[{
Cell[926107, 17605, 317, 7, 37, "Input",ExpressionUUID->"133c3faf-77fb-463a-91ea-7827479cd0c9"],
Cell[926427, 17614, 10804, 302, 366, "Output",ExpressionUUID->"1a766955-f55b-49f1-85e3-806ed507f774"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[937280, 17922, 227, 4, 56, "Subsubsection",ExpressionUUID->"d34889f6-b3b2-4b18-99ef-8695a929f89e"],
Cell[937510, 17928, 374, 7, 44, "Text",ExpressionUUID->"2d7d41d7-8c6a-42f1-bac0-da56f75e4991"],
Cell[CellGroupData[{
Cell[937909, 17939, 738, 18, 64, "Input",ExpressionUUID->"ed19c96d-6916-41f9-ad53-d1d34b4d7145"],
Cell[938650, 17959, 428, 9, 42, "Output",ExpressionUUID->"c5ec75f7-0f5c-47e9-87b0-1510bc92eaf0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[939115, 17973, 545, 11, 37, "Input",ExpressionUUID->"72367161-680f-43ea-bca9-08b64cd8074f"],
Cell[939663, 17986, 9843, 203, 77, "Output",ExpressionUUID->"d89f94a2-b2db-43b1-a164-1b0e03bf3e5a"]
}, Open  ]],
Cell[949521, 18192, 198, 3, 44, "Text",ExpressionUUID->"d021da09-3aa3-43a8-94f8-db259801474e"],
Cell[CellGroupData[{
Cell[949744, 18199, 475, 9, 37, "Input",ExpressionUUID->"166281c3-75e7-44b7-a532-83424ca398b3"],
Cell[950222, 18210, 9839, 203, 77, "Output",ExpressionUUID->"fda158b9-0df8-452f-9fea-01a75f6e77ef"]
}, Open  ]],
Cell[960076, 18416, 172, 3, 44, "Text",ExpressionUUID->"aadd7c45-ea69-4f04-81ef-01b77056d090"],
Cell[960251, 18421, 1081, 22, 116, "Input",ExpressionUUID->"58874685-b0c7-49ac-ad16-05954bd9673e"],
Cell[CellGroupData[{
Cell[961357, 18447, 372, 8, 37, "Input",ExpressionUUID->"7f90b9dd-19dc-4431-a68b-ae7d8b9d19b2"],
Cell[961732, 18457, 9937, 204, 77, "Output",ExpressionUUID->"f7c0af8e-b233-46ff-aca1-e63d973ce3b6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[971718, 18667, 393, 8, 89, "Subsubsection",ExpressionUUID->"a1f0950a-c411-4e46-a698-f4eb7d0e3433"],
Cell[972114, 18677, 306, 7, 44, "Text",ExpressionUUID->"df31c888-2447-4382-94f9-17feb635a3a0"],
Cell[972423, 18686, 190, 3, 44, "Text",ExpressionUUID->"ad5bddd8-5a79-4564-bd7a-e174cec7a600"],
Cell[CellGroupData[{
Cell[972638, 18693, 204, 4, 37, "Input",ExpressionUUID->"defe6648-5390-4958-a43d-fc02a18063d3"],
Cell[972845, 18699, 344, 7, 42, "Output",ExpressionUUID->"767e7dd7-2e61-4dfa-b1a3-0c012a84582f"]
}, Open  ]],
Cell[973204, 18709, 414, 10, 37, "DisplayFormulaNumbered",ExpressionUUID->"9534919d-be02-4caf-a053-314181545d58"],
Cell[CellGroupData[{
Cell[973643, 18723, 290, 6, 37, "Input",ExpressionUUID->"7b0bf11b-b8d3-48aa-970d-a5b392bf0f6d"],
Cell[973936, 18731, 317, 7, 42, "Output",ExpressionUUID->"cef6d842-0d75-4475-b65c-42737c54d5fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[974290, 18743, 285, 6, 37, "Input",ExpressionUUID->"6a699daf-3259-43fa-b3ea-95cf88945042"],
Cell[974578, 18751, 569, 11, 46, "Output",ExpressionUUID->"117fd8cf-5779-44c6-af20-dd17b240a8f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[975184, 18767, 316, 7, 37, "Input",ExpressionUUID->"caa8fed7-3d4b-43b9-b1d3-9eddb90d8de7"],
Cell[975503, 18776, 515, 11, 42, "Output",ExpressionUUID->"41d4611e-276e-4e55-b52f-ce83ebf4b68e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[976055, 18792, 661, 18, 64, "Input",ExpressionUUID->"d37fbab7-928e-404c-8217-551d0a0232cd"],
Cell[976719, 18812, 1700, 35, 193, "Output",ExpressionUUID->"aca07fda-78da-41bf-a22d-1ddc6590422a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[978456, 18852, 204, 4, 37, "Input",ExpressionUUID->"6ead63b7-7c90-4465-a653-491813b7c1ef"],
Cell[978663, 18858, 319, 7, 42, "Output",ExpressionUUID->"c14ad1e1-9536-4f35-95ce-9aa93f2aaf68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[979019, 18870, 563, 12, 64, "Input",ExpressionUUID->"3a5a8a14-4de6-4d39-9cdb-280b06fe0c4d"],
Cell[979585, 18884, 391, 8, 42, "Output",ExpressionUUID->"edb175eb-17b6-4ccd-b936-f90411a6d84e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[980013, 18897, 252, 5, 37, "Input",ExpressionUUID->"5bbff68a-774d-4fed-b218-bbd3d405f414"],
Cell[980268, 18904, 9327, 264, 366, "Output",ExpressionUUID->"a6abea76-cb04-4780-8c60-1dd529c33946"]
}, Open  ]],
Cell[989610, 19171, 365, 7, 37, "Input",ExpressionUUID->"d0e84bee-5d38-410e-b0ec-f202007f23c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[990012, 19183, 230, 4, 56, "Subsubsection",ExpressionUUID->"4aa467c1-6913-4b22-9dc3-0fa8152082ee"],
Cell[990245, 19189, 375, 7, 73, "Text",ExpressionUUID->"105183c7-b3c7-430e-a76d-bfa03fe9eec7"],
Cell[990623, 19198, 225, 5, 44, "Text",ExpressionUUID->"51fe07a9-b4b6-4773-a92b-b0b433fa4ab9"],
Cell[CellGroupData[{
Cell[990873, 19207, 1208, 22, 142, "Input",ExpressionUUID->"d995342e-5e30-4c15-841e-3bcd37519ac7"],
Cell[992084, 19231, 1400, 25, 69, "Output",ExpressionUUID->"1c142c2a-223e-4419-96b9-d02ded52cf1c"],
Cell[993487, 19258, 1611, 41, 175, "Output",ExpressionUUID->"f68a6b29-bf4e-4cef-a2e8-774491831f26"],
Cell[995101, 19301, 813, 17, 42, "Output",ExpressionUUID->"6e570ffa-eeb5-4d5c-a721-f33ee1ecf0a6"],
Cell[995917, 19320, 671, 10, 42, "Output",ExpressionUUID->"bac599a8-70b3-488e-9036-07b2ebfd4d76"]
}, Open  ]],
Cell[996603, 19333, 275, 6, 44, "Text",ExpressionUUID->"0d65f17d-03d4-42e4-a73e-c4e1ab57abcf"],
Cell[CellGroupData[{
Cell[996903, 19343, 600, 11, 116, "Input",ExpressionUUID->"e81aa55b-21df-4a3f-b383-e1988744790a"],
Cell[997506, 19356, 878, 17, 69, "Output",ExpressionUUID->"8ea7c048-8e57-4faa-80f0-5993ca3fdb6a"],
Cell[998387, 19375, 1267, 36, 175, "Output",ExpressionUUID->"8dacef7a-736c-4e43-b3cc-058d3afa5a55"],
Cell[999657, 19413, 468, 12, 42, "Output",ExpressionUUID->"90a90dca-4553-458a-a66d-c52a7530b66b"]
}, Open  ]],
Cell[1000140, 19428, 271, 6, 44, "Text",ExpressionUUID->"5e18e493-df86-457e-8291-96a26076a08a"],
Cell[CellGroupData[{
Cell[1000436, 19438, 888, 18, 142, "Input",ExpressionUUID->"86d12094-614e-4333-a289-52114ed838eb"],
Cell[1001327, 19458, 1036, 20, 69, "Output",ExpressionUUID->"b248cee2-5159-4ae5-997b-016cfbe97044"],
Cell[1002366, 19480, 1245, 36, 175, "Output",ExpressionUUID->"71a8cd60-acdd-466b-843b-9ccbf85c04f7"],
Cell[1003614, 19518, 447, 12, 42, "Output",ExpressionUUID->"0b33ab09-b0b0-4f0e-ab7f-f86beb308432"],
Cell[1004064, 19532, 306, 5, 42, "Output",ExpressionUUID->"0e480ca7-1d39-468c-9726-52408303a6b5"]
}, Open  ]],
Cell[1004385, 19540, 441, 9, 116, "Input",ExpressionUUID->"ef15c4cb-fa38-43a5-bf64-a638f591a42a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1004863, 19554, 344, 6, 70, "Subsubsection",ExpressionUUID->"81c0538e-f600-4dd9-9fff-f48f725aca4f"],
Cell[1005210, 19562, 240, 6, 44, "Text",ExpressionUUID->"167f6425-d530-435b-b2b5-6a93fe43bb20"],
Cell[CellGroupData[{
Cell[1005475, 19572, 734, 18, 90, "Input",ExpressionUUID->"ae2e7790-b6a9-42de-8a78-0380a4b6a497"],
Cell[1006212, 19592, 1642, 46, 83, "Output",ExpressionUUID->"e7b7b8f3-fbc4-4326-aa36-ac8166e53b42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1007891, 19643, 765, 18, 90, "Input",ExpressionUUID->"1af6f1c0-9d8e-4f71-97e0-d6a9763cee92"],
Cell[1008659, 19663, 1670, 47, 83, "Output",ExpressionUUID->"73c7c086-d9ec-43c9-b0a9-7ff30cdb47f0"]
}, Open  ]],
Cell[1010344, 19713, 539, 15, 90, "Input",ExpressionUUID->"b4bc54e2-736f-440e-9447-914f94b3e70e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1010920, 19733, 248, 4, 56, "Subsubsection",ExpressionUUID->"cf328801-fcc4-4ae1-863b-8be1c342be86"],
Cell[CellGroupData[{
Cell[1011193, 19741, 497, 9, 37, "Input",ExpressionUUID->"22b64a20-3b0b-42b4-91c0-5678b24f7b70"],
Cell[1011693, 19752, 9471, 243, 401, "Output",ExpressionUUID->"a9574ab0-1578-4aad-a365-71b2bbc0e079"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1021201, 20000, 346, 6, 37, "Input",ExpressionUUID->"19a11a62-573e-4ec6-914b-4fa089246bc4"],
Cell[1021550, 20008, 59176, 1166, 694, "Output",ExpressionUUID->"c4b1cb8d-9661-4be2-872e-0595b85b4fe8"]
}, Open  ]],
Cell[1080741, 21177, 1505, 25, 303, "Text",ExpressionUUID->"876b53bf-ee5c-46cf-9719-33ba46b0461d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

